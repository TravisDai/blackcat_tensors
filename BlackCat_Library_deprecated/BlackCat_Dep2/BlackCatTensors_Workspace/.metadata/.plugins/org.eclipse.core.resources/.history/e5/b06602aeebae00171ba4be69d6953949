class CPU {

	//buffer buffer tensor
	//tensor bugger
	//buffer tensor


	template<typename T, typename lv, typename rv>
	class Pointwise_Operation_Buffer {

		Pointwise_Operation_Buffer* next_oper;

		void evaluate(T* assign_to, unsigned index) {
			assign_to[index] = tensor_1[index] + tensor_2[index];
		}

		lv* tensor_1;
		rv* tensor_2;
		unsigned sz;
	};

	template<typename T>
	class mul : Pointwise_Operation_Buffer<T> {
	};
	template<typename T>
	class div : Pointwise_Operation_Buffer<T> {
	};
	template<typename T>
	class add : Pointwise_Operation_Buffer<T> {
	};
	template<typename T>
	class sub : Pointwise_Operation_Buffer<T> {
	};
	template<typename T>
	class dot : Pointwise_Operation_Buffer<T> {
	};

	template<typename T>
	class mul_scal : Pointwise_Operation_Buffer<T> {
	};
	template<typename T>
	class div_scal : Pointwise_Operation_Buffer<T> {
	};
	template<typename T>
	class add_scal : Pointwise_Operation_Buffer<T> {
	};
	template<typename T>
	class sub_scal : Pointwise_Operation_Buffer<T> {
	};
};
