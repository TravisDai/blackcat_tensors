17:07:31 **** Clean-only build of configuration Debug for project BlackCat_LibraryCPU ****
make clean 
rm -rf  ./UnitTests/cpu_only_main.o ./UnitTests/main.o  ./BC_Internals/Dep/tmp_tc_dep/Tensor_Core.o  ./BC_Internals/Dep/dotproduct_Dep/Expression_Binary_Dotproduct.o ./BC_Internals/Dep/dotproduct_Dep/Expression_Binary_Dotproduct_impl.o  ./BC_Internals/Dep/Tensor_Core_Specializations/Tensor_Core_Essentials.o ./BC_Internals/Dep/Tensor_Core_Specializations/Tensor_Core_Scalar.o  ./BC_Internals/Dep/Tensor_Core.o ./BC_Internals/Dep/Tensor_Core_Accessor.o  ./BC_Internals/BC_MathLibraries/TmpDep_GPU/Mathematics_GPU.o ./BC_Internals/BC_MathLibraries/TmpDep_GPU/Mathematics_GPU_impl.o  ./BC_Internals/BC_MathLibraries/Mathematics_GPU.o ./BC_Internals/BC_MathLibraries/Mathematics_GPU_impl.o  ./BC_Internals/BC_Expressions/Expression_Base.o ./BC_Internals/BC_Expressions/Expression_Binary_Dotproduct.o ./BC_Internals/BC_Expressions/Expression_Binary_Dotproduct_Pure.o ./BC_Internals/BC_Expressions/Expression_Binary_Dotproduct_impl.o ./BC_Internals/BC_Expressions/Expression_Binary_Functors.o ./BC_Internals/BC_Expressions/Expression_Binary_Pointwise.o ./BC_Internals/BC_Expressions/Expression_Binary_Pointwise_Scalar.o ./BC_Internals/BC_Expressions/Expression_Unary_MatrixTransposition.o ./BC_Internals/BC_Expressions/Expression_Unary_Pointwise.o  ./BC_Internals/BC_Core/Implementation_Core/Tensor_Core.o ./BC_Internals/BC_Core/Implementation_Core/Tensor_Core_Scalar.o ./BC_Internals/BC_Core/Implementation_Core/Tensor_Core_Slice.o  ./BC_Extensions/BC_NonlinearityFunctions.o  ./UnitTests/main.d  ./BC_Internals/Dep/tmp_tc_dep/Tensor_Core.d  ./BC_Internals/Dep/dotproduct_Dep/Expression_Binary_Dotproduct.d ./BC_Internals/Dep/dotproduct_Dep/Expression_Binary_Dotproduct_impl.d  ./BC_Internals/Dep/Tensor_Core_Specializations/Tensor_Core_Essentials.d ./BC_Internals/Dep/Tensor_Core_Specializations/Tensor_Core_Scalar.d  ./BC_Internals/Dep/Tensor_Core.d ./BC_Internals/Dep/Tensor_Core_Accessor.d  ./BC_Internals/BC_MathLibraries/TmpDep_GPU/Mathematics_GPU.d ./BC_Internals/BC_MathLibraries/TmpDep_GPU/Mathematics_GPU_impl.d  ./BC_Internals/BC_MathLibraries/Mathematics_GPU.d ./BC_Internals/BC_MathLibraries/Mathematics_GPU_impl.d  ./BC_Internals/BC_Expressions/Expression_Base.d ./BC_Internals/BC_Expressions/Expression_Binary_Dotproduct.d ./BC_Internals/BC_Expressions/Expression_Binary_Dotproduct_Pure.d ./BC_Internals/BC_Expressions/Expression_Binary_Dotproduct_impl.d ./BC_Internals/BC_Expressions/Expression_Binary_Functors.d ./BC_Internals/BC_Expressions/Expression_Binary_Pointwise.d ./BC_Internals/BC_Expressions/Expression_Binary_Pointwise_Scalar.d ./BC_Internals/BC_Expressions/Expression_Unary_MatrixTransposition.d ./BC_Internals/BC_Expressions/Expression_Unary_Pointwise.d  ./BC_Internals/BC_Core/Implementation_Core/Tensor_Core.d ./BC_Internals/BC_Core/Implementation_Core/Tensor_Core_Scalar.d ./BC_Internals/BC_Core/Implementation_Core/Tensor_Core_Slice.d  ./BC_Extensions/BC_NonlinearityFunctions.d  ./UnitTests/cpu_only_main.d  BlackCat_Tensors3.3
 
17:07:31 **** Build of configuration Debug for project BlackCat_LibraryCPU ****
make all 
Building file: ../UnitTests/main.cpp
Invoking: GCC C++ Compiler
g++ -O0 -g3 -Wall -c -fmessage-length=0 -MMD -MP -MF"UnitTests/main.d" -MT"UnitTests/main.o" -o "UnitTests/main.o" "../UnitTests/main.cpp"
In file included from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:32:0,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_MathLibraries/Mathematics_CPU.h:74:0: warning: ignoring #pragma omp parallel [-Wunknown-pragmas]
 #pragma omp parallel for
 
../UnitTests/../BC_Internals/BC_MathLibraries/Mathematics_CPU.h:78:0: warning: ignoring #pragma omp barrier [-Wunknown-pragmas]
 #pragma omp barrier
 
../UnitTests/../BC_Internals/BC_MathLibraries/Mathematics_CPU.h:88:0: warning: ignoring #pragma omp parallel [-Wunknown-pragmas]
 #pragma omp parallel for
 
../UnitTests/../BC_Internals/BC_MathLibraries/Mathematics_CPU.h:92:0: warning: ignoring #pragma omp barrier [-Wunknown-pragmas]
 #pragma omp barrier
 
In file included from ../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Core_Slice.h:17:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Core.h:13,
                 from ../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h:12,
                 from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:15,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Core_Scalar.h:20:0: warning: "__BC_gcpu__" redefined
 #define __BC_gcpu__ __host__ __device__
 
In file included from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:29:0,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Expressions/BlackCat_Internal_Definitions.h:22:0: note: this is the location of the previous definition
 #define __BC_gcpu__
 
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:12:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:54:44: error: ‘binary_expression’ was not declared in this scope
      typename MTF::expression_substitution<binary_expression<scalar_type, functor, functor_type, param_functor_type>, derived>::type,
                                            ^~~~~~~~~~~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:54:116: error: wrong number of template arguments (4, should be 2)
      typename MTF::expression_substitution<binary_expression<scalar_type, functor, functor_type, param_functor_type>, derived>::type,
                                                                                                                    ^
In file included from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:47:0,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_MetaTemplateFunctions/Adhoc.h:18:34: note: provided for ‘template<class, class> struct BC::MTF::expression_substitution’
   template<class, class>  struct expression_substitution;
                                  ^~~~~~~~~~~~~~~~~~~~~~~
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:12:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:54:126: error: template argument 2 is invalid
      typename MTF::expression_substitution<binary_expression<scalar_type, functor, functor_type, param_functor_type>, derived>::type,
                                                                                                                              ^
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:54:127: error: expected identifier before ‘::’ token
      typename MTF::expression_substitution<binary_expression<scalar_type, functor, functor_type, param_functor_type>, derived>::type,
                                                                                                                               ^~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:64:60: error: ‘unary_expression’ was not declared in this scope
   using unary_type = typename MTF::expression_substitution<unary_expression<scalar_type, functor, functor_type>, derived>::type;
                                                            ^~~~~~~~~~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:64:111: error: wrong number of template arguments (3, should be 2)
   using unary_type = typename MTF::expression_substitution<unary_expression<scalar_type, functor, functor_type>, derived>::type;
                                                                                                               ^
In file included from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:47:0,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_MetaTemplateFunctions/Adhoc.h:18:34: note: provided for ‘template<class, class> struct BC::MTF::expression_substitution’
   template<class, class>  struct expression_substitution;
                                  ^~~~~~~~~~~~~~~~~~~~~~~
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:12:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:64:112: error: expected identifier before ‘,’ token
   using unary_type = typename MTF::expression_substitution<unary_expression<scalar_type, functor, functor_type>, derived>::type;
                                                                                                                ^
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:88:49: error: ‘binary_expression_scalar_L’ was not declared in this scope
           typename MTF::expression_substitution<binary_expression_scalar_L<scalar_type, mul, functor_type, param_functor_type>, param_deriv>::type,
                                                 ^~~~~~~~~~~~~~~~~~~~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:88:89: error: ‘mul’ was not declared in this scope
           typename MTF::expression_substitution<binary_expression_scalar_L<scalar_type, mul, functor_type, param_functor_type>, param_deriv>::type,
                                                                                         ^~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:88:126: error: wrong number of template arguments (4, should be 2)
           typename MTF::expression_substitution<binary_expression_scalar_L<scalar_type, mul, functor_type, param_functor_type>, param_deriv>::type,
                                                                                                                              ^
In file included from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:47:0,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_MetaTemplateFunctions/Adhoc.h:18:34: note: provided for ‘template<class, class> struct BC::MTF::expression_substitution’
   template<class, class>  struct expression_substitution;
                                  ^~~~~~~~~~~~~~~~~~~~~~~
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:12:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:88:140: error: template argument 2 is invalid
           typename MTF::expression_substitution<binary_expression_scalar_L<scalar_type, mul, functor_type, param_functor_type>, param_deriv>::type,
                                                                                                                                            ^
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:88:147: error: expected ‘(’ before ‘,’ token
           typename MTF::expression_substitution<binary_expression_scalar_L<scalar_type, mul, functor_type, param_functor_type>, param_deriv>::type,
                                                                                                                                                   ^
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:89:49: error: ‘binary_expression_scalar_R’ was not declared in this scope
           typename MTF::expression_substitution<binary_expression_scalar_R<scalar_type, mul, functor_type, param_functor_type>, derived  >::type
                                                 ^~~~~~~~~~~~~~~~~~~~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:89:89: error: ‘mul’ was not declared in this scope
           typename MTF::expression_substitution<binary_expression_scalar_R<scalar_type, mul, functor_type, param_functor_type>, derived  >::type
                                                                                         ^~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:89:126: error: wrong number of template arguments (4, should be 2)
           typename MTF::expression_substitution<binary_expression_scalar_R<scalar_type, mul, functor_type, param_functor_type>, derived  >::type
                                                                                                                              ^
In file included from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:47:0,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_MetaTemplateFunctions/Adhoc.h:18:34: note: provided for ‘template<class, class> struct BC::MTF::expression_substitution’
   template<class, class>  struct expression_substitution;
                                  ^~~~~~~~~~~~~~~~~~~~~~~
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:12:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:89:127: error: expected identifier before ‘,’ token
           typename MTF::expression_substitution<binary_expression_scalar_R<scalar_type, mul, functor_type, param_functor_type>, derived  >::type
                                                                                                                               ^
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:89:127: error: expected ‘(’ before ‘,’ token
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:89:138: error: wrong number of template arguments (4, should be 3)
           typename MTF::expression_substitution<binary_expression_scalar_R<scalar_type, mul, functor_type, param_functor_type>, derived  >::type
                                                                                                                                          ^
In file included from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:46:0,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_MetaTemplateFunctions/Simple.h:19:10: note: provided for ‘template<bool iff, class THEN, class ELSE> struct BC::MTF::IF_ELSE’
   struct IF_ELSE {
          ^~~~~~~
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:12:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:94:47: error: ‘binary_expression_dotproduct’ was not declared in this scope
         typename MTF::expression_substitution<binary_expression_dotproduct<scalar_type, functor_type, param_functor_type, math_library>,param_deriv>::type, void>::type;
                                               ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:94:135: error: wrong number of template arguments (4, should be 2)
         typename MTF::expression_substitution<binary_expression_dotproduct<scalar_type, functor_type, param_functor_type, math_library>,param_deriv>::type, void>::type;
                                                                                                                                       ^
In file included from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:47:0,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_MetaTemplateFunctions/Adhoc.h:18:34: note: provided for ‘template<class, class> struct BC::MTF::expression_substitution’
   template<class, class>  struct expression_substitution;
                                  ^~~~~~~~~~~~~~~~~~~~~~~
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:12:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:94:148: error: template argument 2 is invalid
         typename MTF::expression_substitution<binary_expression_dotproduct<scalar_type, functor_type, param_functor_type, math_library>,param_deriv>::type, void>::type;
                                                                                                                                                    ^
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:94:149: error: expected identifier before ‘::’ token
         typename MTF::expression_substitution<binary_expression_dotproduct<scalar_type, functor_type, param_functor_type, math_library>,param_deriv>::type, void>::type;
                                                                                                                                                     ^~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:97:47: error: ‘binary_expression_dotproduct’ was not declared in this scope
         typename MTF::expression_substitution<binary_expression_dotproduct<scalar_type, functor_type, param_functor_type, math_library>,param_deriv>::type, void>::type;
                                               ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:97:135: error: wrong number of template arguments (4, should be 2)
         typename MTF::expression_substitution<binary_expression_dotproduct<scalar_type, functor_type, param_functor_type, math_library>,param_deriv>::type, void>::type;
                                                                                                                                       ^
In file included from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:47:0,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_MetaTemplateFunctions/Adhoc.h:18:34: note: provided for ‘template<class, class> struct BC::MTF::expression_substitution’
   template<class, class>  struct expression_substitution;
                                  ^~~~~~~~~~~~~~~~~~~~~~~
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:12:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:97:148: error: template argument 2 is invalid
         typename MTF::expression_substitution<binary_expression_dotproduct<scalar_type, functor_type, param_functor_type, math_library>,param_deriv>::type, void>::type;
                                                                                                                                                    ^
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:97:149: error: expected identifier before ‘::’ token
         typename MTF::expression_substitution<binary_expression_dotproduct<scalar_type, functor_type, param_functor_type, math_library>,param_deriv>::type, void>::type;
                                                                                                                                                     ^~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:100:47: error: ‘binary_expression_dotproduct’ was not declared in this scope
         typename MTF::expression_substitution<binary_expression_dotproduct<scalar_type, functor_type, param_functor_type, math_library>,
                                               ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:100:135: error: wrong number of template arguments (4, should be 2)
         typename MTF::expression_substitution<binary_expression_dotproduct<scalar_type, functor_type, param_functor_type, math_library>,
                                                                                                                                       ^
In file included from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:47:0,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_MetaTemplateFunctions/Adhoc.h:18:34: note: provided for ‘template<class, class> struct BC::MTF::expression_substitution’
   template<class, class>  struct expression_substitution;
                                  ^~~~~~~~~~~~~~~~~~~~~~~
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:12:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:101:42: error: template argument 2 is invalid
         Matrix<functor_type, math_library>>::type, void>::type;
                                          ^~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:101:44: error: expected identifier before ‘::’ token
         Matrix<functor_type, math_library>>::type, void>::type;
                                            ^~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:103:62: error: ‘vecType’ was not declared in this scope
   using type    =  typename MTF::IF_ELSE<evaluate_to_vector, vecType,
                                                              ^~~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:104:52: error: ‘matType’ was not declared in this scope
          typename MTF::IF_ELSE<evaluate_to_matrix, matType,
                                                    ^~~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:105:53: error: ‘outerType’ was not declared in this scope
           typename MTF::IF_ELSE<evaluate_to_mat_vv, outerType,
                                                     ^~~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:106:56: error: ‘mulType’ was not declared in this scope
            typename MTF::IF_ELSE<evaluate_to_dominant, mulType, void
                                                        ^~~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:107:12: error: template argument 2 is invalid
            >::type
            ^
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:108:11: error: template argument 2 is invalid
           >::type
           ^
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:108:11: error: template argument 3 is invalid
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:109:10: error: template argument 2 is invalid
          >::type
          ^
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:109:10: error: template argument 3 is invalid
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:110:9: error: template argument 2 is invalid
         >::type;
         ^
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:110:9: error: template argument 3 is invalid
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:113:27: error: ‘type’ does not name a type
   using expression_type = type;
                           ^~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:166:24: error: ‘mul’ was not declared in this scope
  typename impl<pDeriv, mul>::type operator *(const alternate_asterix_denoter<pDeriv>& param) const {
                        ^~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:166:27: error: template argument 2 is invalid
  typename impl<pDeriv, mul>::type operator *(const alternate_asterix_denoter<pDeriv>& param) const {
                           ^
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:172:24: error: ‘assign’ was not declared in this scope
  typename impl<pDeriv, assign>::type operator ==(const Tensor_Operations<pDeriv>& param) {
                        ^~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:172:30: error: template argument 2 is invalid
  typename impl<pDeriv, assign>::type operator ==(const Tensor_Operations<pDeriv>& param) {
                              ^
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:178:24: error: ‘combine’ was not declared in this scope
  typename impl<pDeriv, combine>::type operator &&(const Tensor_Operations<pDeriv>& param) {
                        ^~~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:178:31: error: template argument 2 is invalid
  typename impl<pDeriv, combine>::type operator &&(const Tensor_Operations<pDeriv>& param) {
                               ^
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:185:24: error: ‘add’ was not declared in this scope
  typename impl<pDeriv, add>::type operator +(const Tensor_Operations<pDeriv>& param) const {
                        ^~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:185:27: error: template argument 2 is invalid
  typename impl<pDeriv, add>::type operator +(const Tensor_Operations<pDeriv>& param) const {
                           ^
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:190:24: error: ‘sub’ was not declared in this scope
  typename impl<pDeriv, sub>::type operator -(const Tensor_Operations<pDeriv>& param) const {
                        ^~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:190:27: error: template argument 2 is invalid
  typename impl<pDeriv, sub>::type operator -(const Tensor_Operations<pDeriv>& param) const {
                           ^
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:195:27: error: type/value mismatch at argument 2 in template parameter list for ‘template<class derived> template<class param_deriv, class functor> struct BC::Tensor_Operations< <template-parameter-1-1> >::impl’
  typename impl<pDeriv, div>::type operator /(const Tensor_Operations<pDeriv>& param) const {
                           ^
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:195:27: note:   expected a type, got ‘div’
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:200:24: error: ‘mul’ was not declared in this scope
  typename impl<pDeriv, mul>::type operator %(const Tensor_Operations<pDeriv>& param) const {
                        ^~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:200:27: error: template argument 2 is invalid
  typename impl<pDeriv, mul>::type operator %(const Tensor_Operations<pDeriv>& param) const {
                           ^
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h: In member function ‘int BC::Tensor_Operations< <template-parameter-1-1> >::operator*(const BC::alternate_asterix_denoter<pDeriv>&) const’:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:168:32: error: ‘mul’ was not declared in this scope
   return typename impl<pDeriv, mul>::type(this->data(), param.get().data());
                                ^~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:168:35: error: template argument 2 is invalid
   return typename impl<pDeriv, mul>::type(this->data(), param.get().data());
                                   ^
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h: In member function ‘int BC::Tensor_Operations< <template-parameter-1-1> >::operator==(const BC::Tensor_Operations<param_deriv>&)’:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:174:32: error: ‘assign’ was not declared in this scope
   return typename impl<pDeriv, assign>::type(this->data(), param.data());
                                ^~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:174:38: error: template argument 2 is invalid
   return typename impl<pDeriv, assign>::type(this->data(), param.data());
                                      ^
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h: In member function ‘int BC::Tensor_Operations< <template-parameter-1-1> >::operator&&(const BC::Tensor_Operations<param_deriv>&)’:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:180:32: error: ‘combine’ was not declared in this scope
   return typename impl<pDeriv, combine>::type(this->data(), param.data());
                                ^~~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:180:39: error: template argument 2 is invalid
   return typename impl<pDeriv, combine>::type(this->data(), param.data());
                                       ^
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h: In member function ‘int BC::Tensor_Operations< <template-parameter-1-1> >::operator+(const BC::Tensor_Operations<param_deriv>&) const’:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:187:32: error: ‘add’ was not declared in this scope
   return typename impl<pDeriv, add>::type(this->data(), param.data());
                                ^~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:187:35: error: template argument 2 is invalid
   return typename impl<pDeriv, add>::type(this->data(), param.data());
                                   ^
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h: In member function ‘int BC::Tensor_Operations< <template-parameter-1-1> >::operator-(const BC::Tensor_Operations<param_deriv>&) const’:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:192:32: error: ‘sub’ was not declared in this scope
   return typename impl<pDeriv, sub>::type(this->data(), param.data());
                                ^~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:192:35: error: template argument 2 is invalid
   return typename impl<pDeriv, sub>::type(this->data(), param.data());
                                   ^
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h: In member function ‘int BC::Tensor_Operations< <template-parameter-1-1> >::operator/(const BC::Tensor_Operations<param_deriv>&) const’:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:197:35: error: type/value mismatch at argument 2 in template parameter list for ‘template<class derived> template<class param_deriv, class functor> struct BC::Tensor_Operations< <template-parameter-1-1> >::impl’
   return typename impl<pDeriv, div>::type(this->data(), param.data());
                                   ^
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:197:35: note:   expected a type, got ‘div’
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h: In member function ‘int BC::Tensor_Operations< <template-parameter-1-1> >::operator%(const BC::Tensor_Operations<param_deriv>&) const’:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:202:32: error: ‘mul’ was not declared in this scope
   return typename impl<pDeriv, mul>::type(this->data(), param.data());
                                ^~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:202:35: error: template argument 2 is invalid
   return typename impl<pDeriv, mul>::type(this->data(), param.data());
                                   ^
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h: In member function ‘derived& BC::Tensor_Operations< <template-parameter-1-1> >::operator+=(const BC::Tensor_Operations<param_deriv>&)’:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:214:40: error: ‘add’ was not declared in this scope
   return *this = typename impl<pDeriv, add>::type(this->data(), param.data());
                                        ^~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:214:43: error: template argument 2 is invalid
   return *this = typename impl<pDeriv, add>::type(this->data(), param.data());
                                           ^
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h: In member function ‘derived& BC::Tensor_Operations< <template-parameter-1-1> >::operator-=(const BC::Tensor_Operations<param_deriv>&)’:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:219:40: error: ‘sub’ was not declared in this scope
   return *this = typename impl<pDeriv, sub>::type(this->data(), param.data());
                                        ^~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:219:43: error: template argument 2 is invalid
   return *this = typename impl<pDeriv, sub>::type(this->data(), param.data());
                                           ^
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h: In member function ‘derived& BC::Tensor_Operations< <template-parameter-1-1> >::operator/=(const BC::Tensor_Operations<param_deriv>&)’:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:224:43: error: type/value mismatch at argument 2 in template parameter list for ‘template<class derived> template<class param_deriv, class functor> struct BC::Tensor_Operations< <template-parameter-1-1> >::impl’
   return *this = typename impl<pDeriv, div>::type(this->data(), param.data());
                                           ^
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:224:43: note:   expected a type, got ‘div’
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h: In member function ‘derived& BC::Tensor_Operations< <template-parameter-1-1> >::operator%=(const BC::Tensor_Operations<param_deriv>&)’:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:229:40: error: ‘mul’ was not declared in this scope
   return *this = typename impl<pDeriv, mul>::type(this->data(), param.data());
                                        ^~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:229:43: error: template argument 2 is invalid
   return *this = typename impl<pDeriv, mul>::type(this->data(), param.data());
                                           ^
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:13:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Utility.h: In member function ‘auto BC::Tensor_Utility<deriv, <template-parameter-1-2> >::eval() const’:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Utility.h:34:45: error: expected ‘(’ before ‘<’ token
   return typename MTF::shell_of<deriv>::type<_scalar<deriv>, _mathlib<deriv>>(this->asDerived());
                                             ^
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Utility.h:34:60: error: expected primary-expression before ‘,’ token
   return typename MTF::shell_of<deriv>::type<_scalar<deriv>, _mathlib<deriv>>(this->asDerived());
                                                            ^
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Utility.h:34:76: error: expected primary-expression before ‘>’ token
   return typename MTF::shell_of<deriv>::type<_scalar<deriv>, _mathlib<deriv>>(this->asDerived());
                                                                            ^~
In file included from ../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Core_Slice.h:17:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Core.h:13,
                 from ../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h:12,
                 from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:15,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Core_Scalar.h: At global scope:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Core_Scalar.h:20:21: error: ‘__host__’ does not name a type
 #define __BC_gcpu__ __host__ __device__
                     ^
../UnitTests/../BC_Internals/BC_Expressions/BlackCat_Internal_Definitions.h:25:22: note: in expansion of macro ‘__BC_gcpu__’
 #define __BCinline__ __BC_gcpu__ __attribute__((always_inline))
                      ^~~~~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Core_Scalar.h:40:2: note: in expansion of macro ‘__BCinline__’
  __BCinline__ int rank() const { return 0; }
  ^~~~~~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Core_Scalar.h:20:21: error: ‘__host__’ does not name a type
 #define __BC_gcpu__ __host__ __device__
                     ^
../UnitTests/../BC_Internals/BC_Expressions/BlackCat_Internal_Definitions.h:25:22: note: in expansion of macro ‘__BC_gcpu__’
 #define __BCinline__ __BC_gcpu__ __attribute__((always_inline))
                      ^~~~~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Core_Scalar.h:41:2: note: in expansion of macro ‘__BCinline__’
  __BCinline__ int size() const { return 1; }
  ^~~~~~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Core_Scalar.h:20:21: error: ‘__host__’ does not name a type
 #define __BC_gcpu__ __host__ __device__
                     ^
../UnitTests/../BC_Internals/BC_Expressions/BlackCat_Internal_Definitions.h:25:22: note: in expansion of macro ‘__BC_gcpu__’
 #define __BCinline__ __BC_gcpu__ __attribute__((always_inline))
                      ^~~~~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Core_Scalar.h:42:2: note: in expansion of macro ‘__BCinline__’
  __BCinline__ int rows() const { return 1; }
  ^~~~~~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Core_Scalar.h:20:21: error: ‘__host__’ does not name a type
 #define __BC_gcpu__ __host__ __device__
                     ^
../UnitTests/../BC_Internals/BC_Expressions/BlackCat_Internal_Definitions.h:25:22: note: in expansion of macro ‘__BC_gcpu__’
 #define __BCinline__ __BC_gcpu__ __attribute__((always_inline))
                      ^~~~~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Core_Scalar.h:43:2: note: in expansion of macro ‘__BCinline__’
  __BCinline__ int cols() const { return 1; }
  ^~~~~~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Core_Scalar.h:20:21: error: ‘__host__’ does not name a type
 #define __BC_gcpu__ __host__ __device__
                     ^
../UnitTests/../BC_Internals/BC_Expressions/BlackCat_Internal_Definitions.h:25:22: note: in expansion of macro ‘__BC_gcpu__’
 #define __BCinline__ __BC_gcpu__ __attribute__((always_inline))
                      ^~~~~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Core_Scalar.h:44:2: note: in expansion of macro ‘__BCinline__’
  __BCinline__ int dimension(int i) const { return 1; }
  ^~~~~~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Core_Scalar.h:20:21: error: ‘__host__’ does not name a type
 #define __BC_gcpu__ __host__ __device__
                     ^
../UnitTests/../BC_Internals/BC_Expressions/BlackCat_Internal_Definitions.h:25:22: note: in expansion of macro ‘__BC_gcpu__’
 #define __BCinline__ __BC_gcpu__ __attribute__((always_inline))
                      ^~~~~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Core_Scalar.h:45:2: note: in expansion of macro ‘__BCinline__’
  __BCinline__ int LD_rows() const { return 0; }
  ^~~~~~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Core_Scalar.h:20:21: error: ‘__host__’ does not name a type
 #define __BC_gcpu__ __host__ __device__
                     ^
../UnitTests/../BC_Internals/BC_Expressions/BlackCat_Internal_Definitions.h:25:22: note: in expansion of macro ‘__BC_gcpu__’
 #define __BCinline__ __BC_gcpu__ __attribute__((always_inline))
                      ^~~~~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Core_Scalar.h:46:2: note: in expansion of macro ‘__BCinline__’
  __BCinline__ int LD_cols() const { return 0; }
  ^~~~~~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Core_Scalar.h:20:21: error: ‘__host__’ does not name a type
 #define __BC_gcpu__ __host__ __device__
                     ^
../UnitTests/../BC_Internals/BC_Expressions/BlackCat_Internal_Definitions.h:25:22: note: in expansion of macro ‘__BC_gcpu__’
 #define __BCinline__ __BC_gcpu__ __attribute__((always_inline))
                      ^~~~~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Core_Scalar.h:47:2: note: in expansion of macro ‘__BCinline__’
  __BCinline__ int LDdimension(int i) const { return 0; }
  ^~~~~~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Core_Scalar.h:20:21: error: ‘__host__’ does not name a type
 #define __BC_gcpu__ __host__ __device__
                     ^
../UnitTests/../BC_Internals/BC_Expressions/BlackCat_Internal_Definitions.h:25:22: note: in expansion of macro ‘__BC_gcpu__’
 #define __BCinline__ __BC_gcpu__ __attribute__((always_inline))
                      ^~~~~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Core_Scalar.h:48:2: note: in expansion of macro ‘__BCinline__’
  __BCinline__ const auto innerShape() const    { return parent.innerShape(); }
  ^~~~~~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Core_Scalar.h:20:21: error: ‘__host__’ does not name a type
 #define __BC_gcpu__ __host__ __device__
                     ^
../UnitTests/../BC_Internals/BC_Expressions/BlackCat_Internal_Definitions.h:25:22: note: in expansion of macro ‘__BC_gcpu__’
 #define __BCinline__ __BC_gcpu__ __attribute__((always_inline))
                      ^~~~~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Core_Scalar.h:49:2: note: in expansion of macro ‘__BCinline__’
  __BCinline__ const auto outerShape() const    { return parent.outerShape(); }
  ^~~~~~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Core_Scalar.h:20:21: error: ‘__host__’ does not name a type
 #define __BC_gcpu__ __host__ __device__
                     ^
../UnitTests/../BC_Internals/BC_Expressions/BlackCat_Internal_Definitions.h:25:22: note: in expansion of macro ‘__BC_gcpu__’
 #define __BCinline__ __BC_gcpu__ __attribute__((always_inline))
                      ^~~~~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Core_Scalar.h:51:2: note: in expansion of macro ‘__BCinline__’
  __BCinline__ const auto& operator [] (int i) const { return array_slice[0]; }
  ^~~~~~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Core_Scalar.h:20:21: error: ‘__host__’ does not name a type
 #define __BC_gcpu__ __host__ __device__
                     ^
../UnitTests/../BC_Internals/BC_Expressions/BlackCat_Internal_Definitions.h:25:22: note: in expansion of macro ‘__BC_gcpu__’
 #define __BCinline__ __BC_gcpu__ __attribute__((always_inline))
                      ^~~~~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Core_Scalar.h:52:2: note: in expansion of macro ‘__BCinline__’
  __BCinline__     auto& operator [] (int i)      { return array_slice[0]; }
  ^~~~~~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Core_Scalar.h:20:21: error: ‘__host__’ does not name a type
 #define __BC_gcpu__ __host__ __device__
                     ^
../UnitTests/../BC_Internals/BC_Expressions/BlackCat_Internal_Definitions.h:25:22: note: in expansion of macro ‘__BC_gcpu__’
 #define __BCinline__ __BC_gcpu__ __attribute__((always_inline))
                      ^~~~~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Core_Slice.h:44:2: note: in expansion of macro ‘__BCinline__’
  __BCinline__ int rank() const { return RANK; }
  ^~~~~~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Core_Scalar.h:20:21: error: ‘__host__’ does not name a type
 #define __BC_gcpu__ __host__ __device__
                     ^
../UnitTests/../BC_Internals/BC_Expressions/BlackCat_Internal_Definitions.h:25:22: note: in expansion of macro ‘__BC_gcpu__’
 #define __BCinline__ __BC_gcpu__ __attribute__((always_inline))
                      ^~~~~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Core_Slice.h:45:2: note: in expansion of macro ‘__BCinline__’
  __BCinline__ int size() const { return RANK > 0 ? parent.outerShape()[LAST] : 1;    }
  ^~~~~~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Core_Scalar.h:20:21: error: ‘__host__’ does not name a type
 #define __BC_gcpu__ __host__ __device__
                     ^
../UnitTests/../BC_Internals/BC_Expressions/BlackCat_Internal_Definitions.h:25:22: note: in expansion of macro ‘__BC_gcpu__’
 #define __BCinline__ __BC_gcpu__ __attribute__((always_inline))
                      ^~~~~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Core_Slice.h:46:2: note: in expansion of macro ‘__BCinline__’
  __BCinline__ int rows() const { return RANK > 0 ? parent.innerShape()[0] : 1; }
  ^~~~~~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Core_Scalar.h:20:21: error: ‘__host__’ does not name a type
 #define __BC_gcpu__ __host__ __device__
                     ^
../UnitTests/../BC_Internals/BC_Expressions/BlackCat_Internal_Definitions.h:25:22: note: in expansion of macro ‘__BC_gcpu__’
 #define __BCinline__ __BC_gcpu__ __attribute__((always_inline))
                      ^~~~~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Core_Slice.h:47:2: note: in expansion of macro ‘__BCinline__’
  __BCinline__ int cols() const { return RANK > 1 ? parent.innerShape()[1] : 1; }
  ^~~~~~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Core_Scalar.h:20:21: error: ‘__host__’ does not name a type
 #define __BC_gcpu__ __host__ __device__
                     ^
../UnitTests/../BC_Internals/BC_Expressions/BlackCat_Internal_Definitions.h:25:22: note: in expansion of macro ‘__BC_gcpu__’
 #define __BCinline__ __BC_gcpu__ __attribute__((always_inline))
                      ^~~~~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Core_Slice.h:48:2: note: in expansion of macro ‘__BCinline__’
  __BCinline__ int dimension(int i) const { return RANK > i ? parent.innerShape()[i] : 1; }
  ^~~~~~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Core_Scalar.h:20:21: error: ‘__host__’ does not name a type
 #define __BC_gcpu__ __host__ __device__
                     ^
../UnitTests/../BC_Internals/BC_Expressions/BlackCat_Internal_Definitions.h:25:22: note: in expansion of macro ‘__BC_gcpu__’
 #define __BCinline__ __BC_gcpu__ __attribute__((always_inline))
                      ^~~~~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Core_Slice.h:49:2: note: in expansion of macro ‘__BCinline__’
  __BCinline__ int LD_rows() const { return RANK > 0 ? parent.outerShape()[0] : 1; }
  ^~~~~~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Core_Scalar.h:20:21: error: ‘__host__’ does not name a type
 #define __BC_gcpu__ __host__ __device__
                     ^
../UnitTests/../BC_Internals/BC_Expressions/BlackCat_Internal_Definitions.h:25:22: note: in expansion of macro ‘__BC_gcpu__’
 #define __BCinline__ __BC_gcpu__ __attribute__((always_inline))
                      ^~~~~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Core_Slice.h:50:2: note: in expansion of macro ‘__BCinline__’
  __BCinline__ int LD_cols() const { return RANK > 1 ? parent.outerShape()[1] : 1; }
  ^~~~~~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Core_Scalar.h:20:21: error: ‘__host__’ does not name a type
 #define __BC_gcpu__ __host__ __device__
                     ^
../UnitTests/../BC_Internals/BC_Expressions/BlackCat_Internal_Definitions.h:25:22: note: in expansion of macro ‘__BC_gcpu__’
 #define __BCinline__ __BC_gcpu__ __attribute__((always_inline))
                      ^~~~~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Core_Slice.h:51:2: note: in expansion of macro ‘__BCinline__’
  __BCinline__ int LDdimension(int i) const { return RANK > i + 1 ? parent.outerShape()[i] : 1; }
  ^~~~~~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Core_Scalar.h:20:21: error: ‘__host__’ does not name a type
 #define __BC_gcpu__ __host__ __device__
                     ^
../UnitTests/../BC_Internals/BC_Expressions/BlackCat_Internal_Definitions.h:25:22: note: in expansion of macro ‘__BC_gcpu__’
 #define __BCinline__ __BC_gcpu__ __attribute__((always_inline))
                      ^~~~~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Core_Slice.h:52:2: note: in expansion of macro ‘__BCinline__’
  __BCinline__ const auto& operator [] (int i) const { return array_slice[i]; }
  ^~~~~~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Core_Scalar.h:20:21: error: ‘__host__’ does not name a type
 #define __BC_gcpu__ __host__ __device__
                     ^
../UnitTests/../BC_Internals/BC_Expressions/BlackCat_Internal_Definitions.h:25:22: note: in expansion of macro ‘__BC_gcpu__’
 #define __BCinline__ __BC_gcpu__ __attribute__((always_inline))
                      ^~~~~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Core_Slice.h:53:2: note: in expansion of macro ‘__BCinline__’
  __BCinline__ auto& operator [] (int i)          { return array_slice[i]; }
  ^~~~~~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Core_Scalar.h:20:21: error: ‘__host__’ does not name a type
 #define __BC_gcpu__ __host__ __device__
                     ^
../UnitTests/../BC_Internals/BC_Expressions/BlackCat_Internal_Definitions.h:25:22: note: in expansion of macro ‘__BC_gcpu__’
 #define __BCinline__ __BC_gcpu__ __attribute__((always_inline))
                      ^~~~~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Core_Slice.h:58:2: note: in expansion of macro ‘__BCinline__’
  __BCinline__ const auto innerShape() const    { return parent.innerShape(); }
  ^~~~~~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Core_Scalar.h:20:21: error: ‘__host__’ does not name a type
 #define __BC_gcpu__ __host__ __device__
                     ^
../UnitTests/../BC_Internals/BC_Expressions/BlackCat_Internal_Definitions.h:25:22: note: in expansion of macro ‘__BC_gcpu__’
 #define __BCinline__ __BC_gcpu__ __attribute__((always_inline))
                      ^~~~~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Core_Slice.h:59:2: note: in expansion of macro ‘__BCinline__’
  __BCinline__ const auto outerShape() const    { return parent.outerShape(); }
  ^~~~~~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Core_Scalar.h:20:21: error: ‘__host__’ does not name a type
 #define __BC_gcpu__ __host__ __device__
                     ^
../UnitTests/../BC_Internals/BC_Expressions/BlackCat_Internal_Definitions.h:25:22: note: in expansion of macro ‘__BC_gcpu__’
 #define __BCinline__ __BC_gcpu__ __attribute__((always_inline))
                      ^~~~~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Core_Slice.h:64:2: note: in expansion of macro ‘__BCinline__’
  __BCinline__ const scalar* core() const { return array_slice; }
  ^~~~~~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Core_Scalar.h:20:21: error: ‘__host__’ does not name a type
 #define __BC_gcpu__ __host__ __device__
                     ^
../UnitTests/../BC_Internals/BC_Expressions/BlackCat_Internal_Definitions.h:25:22: note: in expansion of macro ‘__BC_gcpu__’
 #define __BCinline__ __BC_gcpu__ __attribute__((always_inline))
                      ^~~~~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Core_Slice.h:65:2: note: in expansion of macro ‘__BCinline__’
  __BCinline__    scalar* core()    { return array_slice; }
  ^~~~~~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Core_Scalar.h:20:21: error: ‘__host__’ does not name a type
 #define __BC_gcpu__ __host__ __device__
                     ^
../UnitTests/../BC_Internals/BC_Expressions/BlackCat_Internal_Definitions.h:25:22: note: in expansion of macro ‘__BC_gcpu__’
 #define __BCinline__ __BC_gcpu__ __attribute__((always_inline))
                      ^~~~~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Core.h:68:2: note: in expansion of macro ‘__BCinline__’
  __BCinline__ int rank() const { return RANK; }
  ^~~~~~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Core_Scalar.h:20:21: error: ‘__host__’ does not name a type
 #define __BC_gcpu__ __host__ __device__
                     ^
../UnitTests/../BC_Internals/BC_Expressions/BlackCat_Internal_Definitions.h:25:22: note: in expansion of macro ‘__BC_gcpu__’
 #define __BCinline__ __BC_gcpu__ __attribute__((always_inline))
                      ^~~~~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Core.h:69:2: note: in expansion of macro ‘__BCinline__’
  __BCinline__ int size() const { return RANK > 0 ? os[LAST] : 1;    }
  ^~~~~~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Core_Scalar.h:20:21: error: ‘__host__’ does not name a type
 #define __BC_gcpu__ __host__ __device__
                     ^
../UnitTests/../BC_Internals/BC_Expressions/BlackCat_Internal_Definitions.h:25:22: note: in expansion of macro ‘__BC_gcpu__’
 #define __BCinline__ __BC_gcpu__ __attribute__((always_inline))
                      ^~~~~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Core.h:70:2: note: in expansion of macro ‘__BCinline__’
  __BCinline__ int rows() const { return RANK > 0 ? is[0] : 1; }
  ^~~~~~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Core_Scalar.h:20:21: error: ‘__host__’ does not name a type
 #define __BC_gcpu__ __host__ __device__
                     ^
../UnitTests/../BC_Internals/BC_Expressions/BlackCat_Internal_Definitions.h:25:22: note: in expansion of macro ‘__BC_gcpu__’
 #define __BCinline__ __BC_gcpu__ __attribute__((always_inline))
                      ^~~~~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Core.h:71:2: note: in expansion of macro ‘__BCinline__’
  __BCinline__ int cols() const { return RANK > 1 ? is[1] : 1; }
  ^~~~~~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Core_Scalar.h:20:21: error: ‘__host__’ does not name a type
 #define __BC_gcpu__ __host__ __device__
                     ^
../UnitTests/../BC_Internals/BC_Expressions/BlackCat_Internal_Definitions.h:25:22: note: in expansion of macro ‘__BC_gcpu__’
 #define __BCinline__ __BC_gcpu__ __attribute__((always_inline))
                      ^~~~~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Core.h:72:2: note: in expansion of macro ‘__BCinline__’
  __BCinline__ int dimension(int i) const { return RANK > i ? is[i] : 1; }
  ^~~~~~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Core_Scalar.h:20:21: error: ‘__host__’ does not name a type
 #define __BC_gcpu__ __host__ __device__
                     ^
../UnitTests/../BC_Internals/BC_Expressions/BlackCat_Internal_Definitions.h:25:22: note: in expansion of macro ‘__BC_gcpu__’
 #define __BCinline__ __BC_gcpu__ __attribute__((always_inline))
                      ^~~~~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Core.h:74:2: note: in expansion of macro ‘__BCinline__’
  __BCinline__ int LD_rows() const { return RANK > 0 ? os[0] : 1; }
  ^~~~~~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Core_Scalar.h:20:21: error: ‘__host__’ does not name a type
 #define __BC_gcpu__ __host__ __device__
                     ^
../UnitTests/../BC_Internals/BC_Expressions/BlackCat_Internal_Definitions.h:25:22: note: in expansion of macro ‘__BC_gcpu__’
 #define __BCinline__ __BC_gcpu__ __attribute__((always_inline))
                      ^~~~~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Core.h:75:2: note: in expansion of macro ‘__BCinline__’
  __BCinline__ int LD_cols() const { return RANK > 1 ? os[1] : 1; }
  ^~~~~~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Core_Scalar.h:20:21: error: ‘__host__’ does not name a type
 #define __BC_gcpu__ __host__ __device__
                     ^
../UnitTests/../BC_Internals/BC_Expressions/BlackCat_Internal_Definitions.h:25:22: note: in expansion of macro ‘__BC_gcpu__’
 #define __BCinline__ __BC_gcpu__ __attribute__((always_inline))
                      ^~~~~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Core.h:76:2: note: in expansion of macro ‘__BCinline__’
  __BCinline__ int LDdimension(int i) const { return RANK > i + 1 ? os[i] : 1; }
  ^~~~~~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Core_Scalar.h:20:21: error: ‘__host__’ does not name a type
 #define __BC_gcpu__ __host__ __device__
                     ^
../UnitTests/../BC_Internals/BC_Expressions/BlackCat_Internal_Definitions.h:25:22: note: in expansion of macro ‘__BC_gcpu__’
 #define __BCinline__ __BC_gcpu__ __attribute__((always_inline))
                      ^~~~~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Core.h:77:2: note: in expansion of macro ‘__BCinline__’
  __BCinline__       scalar& operator [] (int index)   { return RANK == 0 ? array[0] : array[index]; };
  ^~~~~~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Core_Scalar.h:20:21: error: ‘__host__’ does not name a type
 #define __BC_gcpu__ __host__ __device__
                     ^
../UnitTests/../BC_Internals/BC_Expressions/BlackCat_Internal_Definitions.h:25:22: note: in expansion of macro ‘__BC_gcpu__’
 #define __BCinline__ __BC_gcpu__ __attribute__((always_inline))
                      ^~~~~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Core.h:78:2: note: in expansion of macro ‘__BCinline__’
  __BCinline__ const scalar& operator [] (int index) const { return RANK == 0 ? array[0] : array[index]; };
  ^~~~~~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Core_Scalar.h:20:21: error: ‘__host__’ does not name a type
 #define __BC_gcpu__ __host__ __device__
                     ^
../UnitTests/../BC_Internals/BC_Expressions/BlackCat_Internal_Definitions.h:25:22: note: in expansion of macro ‘__BC_gcpu__’
 #define __BCinline__ __BC_gcpu__ __attribute__((always_inline))
                      ^~~~~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Core.h:80:2: note: in expansion of macro ‘__BCinline__’
  __BCinline__ const auto innerShape() const { return is; }
  ^~~~~~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Core_Scalar.h:20:21: error: ‘__host__’ does not name a type
 #define __BC_gcpu__ __host__ __device__
                     ^
../UnitTests/../BC_Internals/BC_Expressions/BlackCat_Internal_Definitions.h:25:22: note: in expansion of macro ‘__BC_gcpu__’
 #define __BCinline__ __BC_gcpu__ __attribute__((always_inline))
                      ^~~~~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Core.h:81:2: note: in expansion of macro ‘__BCinline__’
  __BCinline__ const auto outerShape() const { return os; }
  ^~~~~~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Core_Scalar.h:20:21: error: ‘__host__’ does not name a type
 #define __BC_gcpu__ __host__ __device__
                     ^
../UnitTests/../BC_Internals/BC_Expressions/BlackCat_Internal_Definitions.h:25:22: note: in expansion of macro ‘__BC_gcpu__’
 #define __BCinline__ __BC_gcpu__ __attribute__((always_inline))
                      ^~~~~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Core.h:83:2: note: in expansion of macro ‘__BCinline__’
  __BCinline__ const auto slice(int i) const { return Tensor_Slice<self>(&array[os[LAST - 1] * i], *this); }
  ^~~~~~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Core_Scalar.h:20:21: error: ‘__host__’ does not name a type
 #define __BC_gcpu__ __host__ __device__
                     ^
../UnitTests/../BC_Internals/BC_Expressions/BlackCat_Internal_Definitions.h:25:22: note: in expansion of macro ‘__BC_gcpu__’
 #define __BCinline__ __BC_gcpu__ __attribute__((always_inline))
                      ^~~~~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Core.h:84:2: note: in expansion of macro ‘__BCinline__’
  __BCinline__    auto slice(int i)    { return Tensor_Slice<self>(&array[os[LAST - 1] * i], *this); }
  ^~~~~~~~~~~~
In file included from ../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h:12:0,
                 from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:15,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Core.h: In constructor ‘BC::Tensor_Core< <template-parameter-1-1> >::Tensor_Core(BC::Tensor_Core< <template-parameter-1-1> >::dimlist)’:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Core.h:54:35: error: there are no arguments to ‘size’ that depend on a template parameter, so a declaration of ‘size’ must be available [-fpermissive]
   Mathlib::initialize(array, size());
                                   ^
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Core.h:54:35: note: (if you use ‘-fpermissive’, G++ will accept your code, but allowing the use of an undeclared name is deprecated)
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Core.h: In constructor ‘BC::Tensor_Core< <template-parameter-1-1> >::Tensor_Core(const int*)’:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Core.h:65:35: error: there are no arguments to ‘size’ that depend on a template parameter, so a declaration of ‘size’ must be available [-fpermissive]
   Mathlib::initialize(array, size());
                                   ^
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Core.h: In member function ‘void BC::Tensor_Core< <template-parameter-1-1> >::print() const’:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Core.h:89:69: error: there are no arguments to ‘rank’ that depend on a template parameter, so a declaration of ‘rank’ must be available [-fpermissive]
  void print() const { Mathlib::print(array, this->innerShape(),rank(), 4); }
                                                                     ^
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:15:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h: At global scope:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h:74:54: error: expected ‘;’ before ‘<’ token
  using derived_alt = typename shell_of<derived>::type<T, Mathlib>;
                                                      ^
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h:77:26: error: ‘derived_alt’ does not name a type
  TensorInitializer(const derived_alt<U>&  tensor) : black_cat_array(tensor.innerShape()) {
                          ^~~~~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h:77:37: error: expected ‘,’ or ‘...’ before ‘<’ token
  TensorInitializer(const derived_alt<U>&  tensor) : black_cat_array(tensor.innerShape()) {
                                     ^
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h: In constructor ‘BC::TensorInitializer<_tensor<t, ml>, typename std::enable_if<BC::MTF::isCorePure<t>::conditional, void>::type>::TensorInitializer(int)’:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h:77:69: error: ‘tensor’ was not declared in this scope
  TensorInitializer(const derived_alt<U>&  tensor) : black_cat_array(tensor.innerShape()) {
                                                                     ^~~~~~
In file included from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10:0,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/TensorBase.h: At global scope:
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:38:71: error: expected ‘;’ before ‘<’ token
  template<class    U> using deriv   = typename shell_of<derived>::type<U, Mathlib>;
                                                                       ^
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:39:76: error: expected ‘;’ before ‘<’ token
  template<class... U> using functor = typename shell_of<functor_type>::type<U...>;
                                                                            ^
../UnitTests/../BC_Internals/BC_Core/TensorBase.h: In member function ‘auto BC::TensorBase<derived>::operator[](int)’:
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:83:68: error: expected ‘(’ before ‘<’ token
     auto operator [] (int i)    { return typename base<RANK>::slice<decltype(slice(0)), Mathlib>(slice(i)); }
                                                                    ^
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:83:69: error: expected primary-expression before ‘decltype’
     auto operator [] (int i)    { return typename base<RANK>::slice<decltype(slice(0)), Mathlib>(slice(i)); }
                                                                     ^~~~~~~~
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:83:69: error: expected ‘;’ before ‘decltype’
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:83:87: error: expected unqualified-id before ‘,’ token
     auto operator [] (int i)    { return typename base<RANK>::slice<decltype(slice(0)), Mathlib>(slice(i)); }
                                                                                       ^
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:83:96: error: expected initializer before ‘>’ token
     auto operator [] (int i)    { return typename base<RANK>::slice<decltype(slice(0)), Mathlib>(slice(i)); }
                                                                                                ^
../UnitTests/../BC_Internals/BC_Core/TensorBase.h: In member function ‘const auto BC::TensorBase<derived>::operator[](int) const’:
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:84:74: error: expected ‘(’ before ‘<’ token
  const auto operator [] (int i) const { return typename base<RANK>::slice<decltype(slice(0)), Mathlib>(slice(i)); }
                                                                          ^
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:84:75: error: expected primary-expression before ‘decltype’
  const auto operator [] (int i) const { return typename base<RANK>::slice<decltype(slice(0)), Mathlib>(slice(i)); }
                                                                           ^~~~~~~~
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:84:75: error: expected ‘;’ before ‘decltype’
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:84:93: error: expected unqualified-id before ‘,’ token
  const auto operator [] (int i) const { return typename base<RANK>::slice<decltype(slice(0)), Mathlib>(slice(i)); }
                                                                                             ^
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:84:102: error: expected initializer before ‘>’ token
  const auto operator [] (int i) const { return typename base<RANK>::slice<decltype(slice(0)), Mathlib>(slice(i)); }
                                                                                                      ^
In file included from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:50:0,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Vector.h: At global scope:
../UnitTests/../BC_Internals/BC_Core/Vector.h:45:15: error: ‘unary_expression_transpose’ was not declared in this scope
  const Vector<unary_expression_transpose<typename MTF::determine_scalar<T>::type, typename parent_class::functor_type>, Mathlib> t() const {
               ^~~~~~~~~~~~~~~~~~~~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Vector.h:45:118: error: template argument 1 is invalid
  const Vector<unary_expression_transpose<typename MTF::determine_scalar<T>::type, typename parent_class::functor_type>, Mathlib> t() const {
                                                                                                                      ^
../UnitTests/../BC_Internals/BC_Core/Vector.h:45:119: error: expected unqualified-id before ‘,’ token
  const Vector<unary_expression_transpose<typename MTF::determine_scalar<T>::type, typename parent_class::functor_type>, Mathlib> t() const {
                                                                                                                       ^
In file included from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:51:0,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Matrix.h:47:15: error: ‘unary_expression_transpose’ was not declared in this scope
  const Matrix<unary_expression_transpose<typename MTF::determine_scalar<T>::type, typename parent_class::functor_type>, Mathlib> t() const {
               ^~~~~~~~~~~~~~~~~~~~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Matrix.h:47:118: error: template argument 1 is invalid
  const Matrix<unary_expression_transpose<typename MTF::determine_scalar<T>::type, typename parent_class::functor_type>, Mathlib> t() const {
                                                                                                                      ^
../UnitTests/../BC_Internals/BC_Core/Matrix.h:47:119: error: expected unqualified-id before ‘,’ token
  const Matrix<unary_expression_transpose<typename MTF::determine_scalar<T>::type, typename parent_class::functor_type>, Mathlib> t() const {
                                                                                                                       ^
In file included from ../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Core_Slice.h:17:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Core.h:13,
                 from ../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h:12,
                 from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:15,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Core_Scalar.h:20:21: error: ‘__host__’ does not name a type
 #define __BC_gcpu__ __host__ __device__
                     ^
../UnitTests/../BC_Internals/BC_Expressions/BlackCat_Internal_Definitions.h:25:22: note: in expansion of macro ‘__BC_gcpu__’
 #define __BCinline__ __BC_gcpu__ __attribute__((always_inline))
                      ^~~~~~~~~~~
../UnitTests/../Extensions/NN_Functions.h:10:4: note: in expansion of macro ‘__BCinline__’
    __BCinline__ inline __attribute__((always_inline))  T operator () (T t) const {
    ^~~~~~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Core_Scalar.h:20:21: error: ‘__host__’ does not name a type
 #define __BC_gcpu__ __host__ __device__
                     ^
../UnitTests/../BC_Internals/BC_Expressions/BlackCat_Internal_Definitions.h:25:22: note: in expansion of macro ‘__BC_gcpu__’
 #define __BCinline__ __BC_gcpu__ __attribute__((always_inline))
                      ^~~~~~~~~~~
../UnitTests/../Extensions/NN_Functions.h:19:4: note: in expansion of macro ‘__BCinline__’
    __BCinline__ inline __attribute__((always_inline))  T operator () (T& t) const {
    ^~~~~~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Core_Scalar.h:20:21: error: ‘__host__’ does not name a type
 #define __BC_gcpu__ __host__ __device__
                     ^
../UnitTests/../BC_Internals/BC_Expressions/BlackCat_Internal_Definitions.h:25:22: note: in expansion of macro ‘__BC_gcpu__’
 #define __BCinline__ __BC_gcpu__ __attribute__((always_inline))
                      ^~~~~~~~~~~
../UnitTests/../Extensions/NN_Functions.h:28:4: note: in expansion of macro ‘__BCinline__’
    __BCinline__ inline __attribute__((always_inline))  T operator () (T t) const {
    ^~~~~~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Core_Scalar.h:20:21: error: ‘__host__’ does not name a type
 #define __BC_gcpu__ __host__ __device__
                     ^
../UnitTests/../BC_Internals/BC_Expressions/BlackCat_Internal_Definitions.h:25:22: note: in expansion of macro ‘__BC_gcpu__’
 #define __BCinline__ __BC_gcpu__ __attribute__((always_inline))
                      ^~~~~~~~~~~
../UnitTests/../Extensions/NN_Functions.h:35:4: note: in expansion of macro ‘__BCinline__’
    __BCinline__ inline __attribute__((always_inline))  T operator () (T& t) const {
    ^~~~~~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Core_Scalar.h:20:21: error: ‘__host__’ does not name a type
 #define __BC_gcpu__ __host__ __device__
                     ^
../UnitTests/../BC_Internals/BC_Expressions/BlackCat_Internal_Definitions.h:25:22: note: in expansion of macro ‘__BC_gcpu__’
 #define __BCinline__ __BC_gcpu__ __attribute__((always_inline))
                      ^~~~~~~~~~~
../UnitTests/../Extensions/NN_Functions.h:43:4: note: in expansion of macro ‘__BCinline__’
    __BCinline__ inline __attribute__((always_inline))  T operator () (T t) const {
    ^~~~~~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Core_Scalar.h:20:21: error: ‘__host__’ does not name a type
 #define __BC_gcpu__ __host__ __device__
                     ^
../UnitTests/../BC_Internals/BC_Expressions/BlackCat_Internal_Definitions.h:25:22: note: in expansion of macro ‘__BC_gcpu__’
 #define __BCinline__ __BC_gcpu__ __attribute__((always_inline))
                      ^~~~~~~~~~~
../UnitTests/../Extensions/NN_Functions.h:53:4: note: in expansion of macro ‘__BCinline__’
    __BCinline__ inline __attribute__((always_inline))  T operator () (T& t) const {
    ^~~~~~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Core_Scalar.h:20:21: error: ‘__host__’ does not name a type
 #define __BC_gcpu__ __host__ __device__
                     ^
../UnitTests/../BC_Internals/BC_Expressions/BlackCat_Internal_Definitions.h:25:22: note: in expansion of macro ‘__BC_gcpu__’
 #define __BCinline__ __BC_gcpu__ __attribute__((always_inline))
                      ^~~~~~~~~~~
../UnitTests/../Extensions/NN_Functions.h:63:4: note: in expansion of macro ‘__BCinline__’
    __BCinline__ inline __attribute__((always_inline))  T operator () (T t) const {
    ^~~~~~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Core_Scalar.h:20:21: error: ‘__host__’ does not name a type
 #define __BC_gcpu__ __host__ __device__
                     ^
../UnitTests/../BC_Internals/BC_Expressions/BlackCat_Internal_Definitions.h:25:22: note: in expansion of macro ‘__BC_gcpu__’
 #define __BCinline__ __BC_gcpu__ __attribute__((always_inline))
                      ^~~~~~~~~~~
../UnitTests/../Extensions/NN_Functions.h:71:4: note: in expansion of macro ‘__BCinline__’
    __BCinline__ inline __attribute__((always_inline))  T operator () (T& t) const {
    ^~~~~~~~~~~~
In file included from ../UnitTests/main.cpp:4:0:
../UnitTests/SpeedTests.h: In function ‘int speedTestDelayedEval()’:
../UnitTests/SpeedTests.h:43:11: error: no match for ‘operator==’ (operand types are ‘vec {aka BC::Vector<float>}’ and ‘int’)
   a = ((e == b ** c) + d);
         ~~^~~~~~~~~
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:12:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:172:38: note: candidate: template<class pDeriv> int BC::Tensor_Operations< <template-parameter-1-1> >::operator==(const BC::Tensor_Operations<param_deriv>&) [with pDeriv = pDeriv; derived = BC::Vector<float>]
  typename impl<pDeriv, assign>::type operator ==(const Tensor_Operations<pDeriv>& param) {
                                      ^~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:172:38: note:   template argument deduction/substitution failed:
In file included from ../UnitTests/main.cpp:4:0:
../UnitTests/SpeedTests.h:43:19: note:   mismatched types ‘const BC::Tensor_Operations<A>’ and ‘int’
   a = ((e == b ** c) + d);
                   ^
../UnitTests/SpeedTests.h: In function ‘int speedTestsScalarIteration()’:
../UnitTests/SpeedTests.h:136:9: error: ‘using mat = class BC::Matrix<float> {aka class BC::Matrix<float>}’ has no member named ‘t’
   c = a.t() * b;
         ^
../UnitTests/main.cpp: In function ‘auto test()’:
../UnitTests/main.cpp:40:8: error: ‘using mat = class BC::Matrix<float> {aka class BC::Matrix<float>}’ has no member named ‘t’
  d = a.t();
        ^
../UnitTests/main.cpp:41:8: error: ‘using mat = class BC::Matrix<float> {aka class BC::Matrix<float>}’ has no member named ‘t’
  e = b.t();
        ^
../UnitTests/main.cpp:47:8: error: no match for ‘operator*’ (operand types are ‘mat {aka BC::Matrix<float>}’ and ‘mat {aka BC::Matrix<float>}’)
  c = d * e;
      ~~^~~
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:12:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:145:33: note: candidate: template<class pDeriv, class voider> typename BC::Tensor_Operations< <template-parameter-1-1> >::dp_impl<param_deriv>::type BC::Tensor_Operations< <template-parameter-1-1> >::operator*(const BC::Tensor_Operations<param_deriv>&) const [with pDeriv = pDeriv; voider = voider; derived = BC::Matrix<float>]
  typename dp_impl<pDeriv>::type operator *(const Tensor_Operations<pDeriv>& param) const {
                                 ^~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:145:33: note:   template argument deduction/substitution failed:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:144:25: error: no type named ‘type’ in ‘struct std::enable_if<false, void>’
  template<class pDeriv, class voider = typename std::enable_if<dp_impl<pDeriv>::short_params || dp_impl<pDeriv>::short_params>::type>
                         ^~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:156:33: note: candidate: template<class pDeriv, class voider, int foo> typename BC::Tensor_Operations< <template-parameter-1-1> >::dp_impl<param_deriv>::type BC::Tensor_Operations< <template-parameter-1-1> >::operator*(const BC::Tensor_Operations<param_deriv>&) const [with pDeriv = pDeriv; voider = voider; int foo = foo; derived = BC::Matrix<float>]
  typename dp_impl<pDeriv>::type operator *(const Tensor_Operations<pDeriv>& param) const {
                                 ^~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:156:33: note:   template argument deduction/substitution failed:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h: In substitution of ‘template<class pDeriv, class voider, int foo> typename BC::Tensor_Operations< <template-parameter-1-1> >::dp_impl<param_deriv>::type BC::Tensor_Operations< <template-parameter-1-1> >::operator*(const BC::Tensor_Operations<param_deriv>&) const [with pDeriv = BC::Matrix<float>; voider = void; int foo = 0]’:
../UnitTests/main.cpp:47:10:   required from here
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:156:33: error: no type named ‘type’ in ‘struct BC::Tensor_Operations<BC::Matrix<float> >::dp_impl<BC::Matrix<float> >’
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:161:43: note: candidate: const BC::alternate_asterix_denoter<derived> BC::Tensor_Operations< <template-parameter-1-1> >::operator*() const [with derived = BC::Matrix<float>]
  const alternate_asterix_denoter<derived> operator * () const {
                                           ^~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:161:43: note:   candidate expects 0 arguments, 1 provided
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:166:35: note: candidate: template<class pDeriv> int BC::Tensor_Operations< <template-parameter-1-1> >::operator*(const BC::alternate_asterix_denoter<pDeriv>&) const [with pDeriv = pDeriv; derived = BC::Matrix<float>]
  typename impl<pDeriv, mul>::type operator *(const alternate_asterix_denoter<pDeriv>& param) const {
                                   ^~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:166:35: note:   template argument deduction/substitution failed:
../UnitTests/main.cpp:47:10: note:   ‘mat {aka BC::Matrix<float>}’ is not derived from ‘const BC::alternate_asterix_denoter<derived>’
  c = d * e;
          ^
../UnitTests/main.cpp:50:8: error: ‘using mat = class BC::Matrix<float> {aka class BC::Matrix<float>}’ has no member named ‘t’
  c = a.t() * b.t();
        ^
../UnitTests/main.cpp:50:16: error: ‘using mat = class BC::Matrix<float> {aka class BC::Matrix<float>}’ has no member named ‘t’
  c = a.t() * b.t();
                ^
../UnitTests/main.cpp:53:8: error: ‘using mat = class BC::Matrix<float> {aka class BC::Matrix<float>}’ has no member named ‘t’
  c = a.t() * e;
        ^
../UnitTests/main.cpp:56:12: error: ‘using mat = class BC::Matrix<float> {aka class BC::Matrix<float>}’ has no member named ‘t’
  c = d * b.t();
            ^
../UnitTests/main.cpp:59:8: error: no match for ‘operator*’ (operand types are ‘mat {aka BC::Matrix<float>}’ and ‘scal {aka BC::Scalar<float, BC::CPU>}’)
  c = d * scal(2) * e;
      ~~^~~~~~~~~
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:12:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:145:33: note: candidate: template<class pDeriv, class voider> typename BC::Tensor_Operations< <template-parameter-1-1> >::dp_impl<param_deriv>::type BC::Tensor_Operations< <template-parameter-1-1> >::operator*(const BC::Tensor_Operations<param_deriv>&) const [with pDeriv = pDeriv; voider = voider; derived = BC::Matrix<float>]
  typename dp_impl<pDeriv>::type operator *(const Tensor_Operations<pDeriv>& param) const {
                                 ^~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:145:33: note:   template argument deduction/substitution failed:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h: In substitution of ‘template<class pDeriv, class voider> typename BC::Tensor_Operations< <template-parameter-1-1> >::dp_impl<param_deriv>::type BC::Tensor_Operations< <template-parameter-1-1> >::operator*(const BC::Tensor_Operations<param_deriv>&) const [with pDeriv = BC::Scalar<float, BC::CPU>; voider = void]’:
../UnitTests/main.cpp:59:16:   required from here
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:145:33: error: no type named ‘type’ in ‘struct BC::Tensor_Operations<BC::Matrix<float> >::dp_impl<BC::Scalar<float, BC::CPU> >’
UnitTests/subdir.mk:18: recipe for target 'UnitTests/main.o' failed
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:156:33: note: candidate: template<class pDeriv, class voider, int foo> typename BC::Tensor_Operations< <template-parameter-1-1> >::dp_impl<param_deriv>::type BC::Tensor_Operations< <template-parameter-1-1> >::operator*(const BC::Tensor_Operations<param_deriv>&) const [with pDeriv = pDeriv; voider = voider; int foo = foo; derived = BC::Matrix<float>]
  typename dp_impl<pDeriv>::type operator *(const Tensor_Operations<pDeriv>& param) const {
                                 ^~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:156:33: note:   template argument deduction/substitution failed:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:155:3: error: no type named ‘type’ in ‘struct std::enable_if<false, void>’
   class voider = typename std::enable_if<!dp_impl<pDeriv>::short_params && !dp_impl<pDeriv>::short_params>::type, int foo = 0>
   ^~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:161:43: note: candidate: const BC::alternate_asterix_denoter<derived> BC::Tensor_Operations< <template-parameter-1-1> >::operator*() const [with derived = BC::Matrix<float>]
  const alternate_asterix_denoter<derived> operator * () const {
                                           ^~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:161:43: note:   candidate expects 0 arguments, 1 provided
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:166:35: note: candidate: template<class pDeriv> int BC::Tensor_Operations< <template-parameter-1-1> >::operator*(const BC::alternate_asterix_denoter<pDeriv>&) const [with pDeriv = pDeriv; derived = BC::Matrix<float>]
  typename impl<pDeriv, mul>::type operator *(const alternate_asterix_denoter<pDeriv>& param) const {
                                   ^~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:166:35: note:   template argument deduction/substitution failed:
../UnitTests/main.cpp:59:16: note:   ‘scal {aka BC::Scalar<float, BC::CPU>}’ is not derived from ‘const BC::alternate_asterix_denoter<derived>’
  c = d * scal(2) * e;
                ^
../UnitTests/main.cpp:62:14: error: no match for ‘operator*’ (operand types are ‘scal {aka BC::Scalar<float, BC::CPU>}’ and ‘mat {aka BC::Matrix<float>}’)
  c = scal(2) * d * e;
      ~~~~~~~~^~~
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:12:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:145:33: note: candidate: template<class pDeriv, class voider> typename BC::Tensor_Operations< <template-parameter-1-1> >::dp_impl<param_deriv>::type BC::Tensor_Operations< <template-parameter-1-1> >::operator*(const BC::Tensor_Operations<param_deriv>&) const [with pDeriv = pDeriv; voider = voider; derived = BC::Scalar<float, BC::CPU>]
  typename dp_impl<pDeriv>::type operator *(const Tensor_Operations<pDeriv>& param) const {
                                 ^~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:145:33: note:   template argument deduction/substitution failed:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h: In substitution of ‘template<class pDeriv, class voider> typename BC::Tensor_Operations< <template-parameter-1-1> >::dp_impl<param_deriv>::type BC::Tensor_Operations< <template-parameter-1-1> >::operator*(const BC::Tensor_Operations<param_deriv>&) const [with pDeriv = BC::Matrix<float>; voider = void]’:
../UnitTests/main.cpp:62:16:   required from here
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:145:33: error: no type named ‘type’ in ‘struct BC::Tensor_Operations<BC::Scalar<float, BC::CPU> >::dp_impl<BC::Matrix<float> >’
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:156:33: note: candidate: template<class pDeriv, class voider, int foo> typename BC::Tensor_Operations< <template-parameter-1-1> >::dp_impl<param_deriv>::type BC::Tensor_Operations< <template-parameter-1-1> >::operator*(const BC::Tensor_Operations<param_deriv>&) const [with pDeriv = pDeriv; voider = voider; int foo = foo; derived = BC::Scalar<float, BC::CPU>]
  typename dp_impl<pDeriv>::type operator *(const Tensor_Operations<pDeriv>& param) const {
                                 ^~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:156:33: note:   template argument deduction/substitution failed:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:155:3: error: no type named ‘type’ in ‘struct std::enable_if<false, void>’
   class voider = typename std::enable_if<!dp_impl<pDeriv>::short_params && !dp_impl<pDeriv>::short_params>::type, int foo = 0>
   ^~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:161:43: note: candidate: const BC::alternate_asterix_denoter<derived> BC::Tensor_Operations< <template-parameter-1-1> >::operator*() const [with derived = BC::Scalar<float, BC::CPU>]
  const alternate_asterix_denoter<derived> operator * () const {
                                           ^~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:161:43: note:   candidate expects 0 arguments, 1 provided
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:166:35: note: candidate: template<class pDeriv> int BC::Tensor_Operations< <template-parameter-1-1> >::operator*(const BC::alternate_asterix_denoter<pDeriv>&) const [with pDeriv = pDeriv; derived = BC::Scalar<float, BC::CPU>]
  typename impl<pDeriv, mul>::type operator *(const alternate_asterix_denoter<pDeriv>& param) const {
                                   ^~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:166:35: note:   template argument deduction/substitution failed:
../UnitTests/main.cpp:62:16: note:   ‘mat {aka BC::Matrix<float>}’ is not derived from ‘const BC::alternate_asterix_denoter<derived>’
  c = scal(2) * d * e;
                ^
../UnitTests/main.cpp:64:8: error: no match for ‘operator*’ (operand types are ‘mat {aka BC::Matrix<float>}’ and ‘mat {aka BC::Matrix<float>}’)
  c = d * e * scal(2); ////This is the only version that is not accounted for (it is also the least common notation)
      ~~^~~
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:12:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:145:33: note: candidate: template<class pDeriv, class voider> typename BC::Tensor_Operations< <template-parameter-1-1> >::dp_impl<param_deriv>::type BC::Tensor_Operations< <template-parameter-1-1> >::operator*(const BC::Tensor_Operations<param_deriv>&) const [with pDeriv = pDeriv; voider = voider; derived = BC::Matrix<float>]
  typename dp_impl<pDeriv>::type operator *(const Tensor_Operations<pDeriv>& param) const {
                                 ^~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:145:33: note:   template argument deduction/substitution failed:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:144:25: error: no type named ‘type’ in ‘struct std::enable_if<false, void>’
  template<class pDeriv, class voider = typename std::enable_if<dp_impl<pDeriv>::short_params || dp_impl<pDeriv>::short_params>::type>
                         ^~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:156:33: note: candidate: template<class pDeriv, class voider, int foo> typename BC::Tensor_Operations< <template-parameter-1-1> >::dp_impl<param_deriv>::type BC::Tensor_Operations< <template-parameter-1-1> >::operator*(const BC::Tensor_Operations<param_deriv>&) const [with pDeriv = pDeriv; voider = voider; int foo = foo; derived = BC::Matrix<float>]
  typename dp_impl<pDeriv>::type operator *(const Tensor_Operations<pDeriv>& param) const {
                                 ^~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:156:33: note:   template argument deduction/substitution failed:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h: In substitution of ‘template<class pDeriv, class voider, int foo> typename BC::Tensor_Operations< <template-parameter-1-1> >::dp_impl<param_deriv>::type BC::Tensor_Operations< <template-parameter-1-1> >::operator*(const BC::Tensor_Operations<param_deriv>&) const [with pDeriv = BC::Matrix<float>; voider = void; int foo = 0]’:
../UnitTests/main.cpp:64:10:   required from here
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:156:33: error: no type named ‘type’ in ‘struct BC::Tensor_Operations<BC::Matrix<float> >::dp_impl<BC::Matrix<float> >’
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:161:43: note: candidate: const BC::alternate_asterix_denoter<derived> BC::Tensor_Operations< <template-parameter-1-1> >::operator*() const [with derived = BC::Matrix<float>]
  const alternate_asterix_denoter<derived> operator * () const {
                                           ^~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:161:43: note:   candidate expects 0 arguments, 1 provided
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:166:35: note: candidate: template<class pDeriv> int BC::Tensor_Operations< <template-parameter-1-1> >::operator*(const BC::alternate_asterix_denoter<pDeriv>&) const [with pDeriv = pDeriv; derived = BC::Matrix<float>]
  typename impl<pDeriv, mul>::type operator *(const alternate_asterix_denoter<pDeriv>& param) const {
                                   ^~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:166:35: note:   template argument deduction/substitution failed:
../UnitTests/main.cpp:64:10: note:   ‘mat {aka BC::Matrix<float>}’ is not derived from ‘const BC::alternate_asterix_denoter<derived>’
  c = d * e * scal(2); ////This is the only version that is not accounted for (it is also the least common notation)
          ^
../UnitTests/main.cpp:66:8: error: no match for ‘operator*’ (operand types are ‘mat {aka BC::Matrix<float>}’ and ‘scal {aka BC::Scalar<float, BC::CPU>}’)
  c = d * scal(2) * e;
      ~~^~~~~~~~~
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:12:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:145:33: note: candidate: template<class pDeriv, class voider> typename BC::Tensor_Operations< <template-parameter-1-1> >::dp_impl<param_deriv>::type BC::Tensor_Operations< <template-parameter-1-1> >::operator*(const BC::Tensor_Operations<param_deriv>&) const [with pDeriv = pDeriv; voider = voider; derived = BC::Matrix<float>]
  typename dp_impl<pDeriv>::type operator *(const Tensor_Operations<pDeriv>& param) const {
                                 ^~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:145:33: note:   template argument deduction/substitution failed:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h: In substitution of ‘template<class pDeriv, class voider> typename BC::Tensor_Operations< <template-parameter-1-1> >::dp_impl<param_deriv>::type BC::Tensor_Operations< <template-parameter-1-1> >::operator*(const BC::Tensor_Operations<param_deriv>&) const [with pDeriv = BC::Scalar<float, BC::CPU>; voider = void]’:
../UnitTests/main.cpp:66:16:   required from here
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:145:33: error: no type named ‘type’ in ‘struct BC::Tensor_Operations<BC::Matrix<float> >::dp_impl<BC::Scalar<float, BC::CPU> >’
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:156:33: note: candidate: template<class pDeriv, class voider, int foo> typename BC::Tensor_Operations< <template-parameter-1-1> >::dp_impl<param_deriv>::type BC::Tensor_Operations< <template-parameter-1-1> >::operator*(const BC::Tensor_Operations<param_deriv>&) const [with pDeriv = pDeriv; voider = voider; int foo = foo; derived = BC::Matrix<float>]
  typename dp_impl<pDeriv>::type operator *(const Tensor_Operations<pDeriv>& param) const {
                                 ^~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:156:33: note:   template argument deduction/substitution failed:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:155:3: error: no type named ‘type’ in ‘struct std::enable_if<false, void>’
   class voider = typename std::enable_if<!dp_impl<pDeriv>::short_params && !dp_impl<pDeriv>::short_params>::type, int foo = 0>
   ^~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:161:43: note: candidate: const BC::alternate_asterix_denoter<derived> BC::Tensor_Operations< <template-parameter-1-1> >::operator*() const [with derived = BC::Matrix<float>]
  const alternate_asterix_denoter<derived> operator * () const {
                                           ^~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:161:43: note:   candidate expects 0 arguments, 1 provided
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:166:35: note: candidate: template<class pDeriv> int BC::Tensor_Operations< <template-parameter-1-1> >::operator*(const BC::alternate_asterix_denoter<pDeriv>&) const [with pDeriv = pDeriv; derived = BC::Matrix<float>]
  typename impl<pDeriv, mul>::type operator *(const alternate_asterix_denoter<pDeriv>& param) const {
                                   ^~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:166:35: note:   template argument deduction/substitution failed:
../UnitTests/main.cpp:66:16: note:   ‘scal {aka BC::Scalar<float, BC::CPU>}’ is not derived from ‘const BC::alternate_asterix_denoter<derived>’
  c = d * scal(2) * e;
                ^
../UnitTests/main.cpp:75:10: error: request for member ‘eval’ in ‘((BC::Tensor_Operations<BC::Matrix<float> >*)(& c))->BC::Tensor_Operations< <template-parameter-1-1> >::operator+<BC::Matrix<float> >(c)’, which is of non-class type ‘int’
  (c + c).eval();
          ^~~~
../UnitTests/main.cpp:76:8: error: ‘using mat = class BC::Matrix<float> {aka class BC::Matrix<float>}’ has no member named ‘t’
  c = a.t() * b.t();
        ^
../UnitTests/main.cpp:76:16: error: ‘using mat = class BC::Matrix<float> {aka class BC::Matrix<float>}’ has no member named ‘t’
  c = a.t() * b.t();
                ^
../UnitTests/main.cpp:80:8: error: ‘using mat = class BC::Matrix<float> {aka class BC::Matrix<float>}’ has no member named ‘t’
  c = a.t() * A * (b.t() * A);
        ^
../UnitTests/main.cpp:80:21: error: ‘using mat = class BC::Matrix<float> {aka class BC::Matrix<float>}’ has no member named ‘t’
  c = a.t() * A * (b.t() * A);
                     ^
../UnitTests/main.cpp:94:14: error: invalid operands of types ‘void’ and ‘void’ to binary ‘operator+’
  d[1] = d[1] + d[1];
         ~~~~~^~~~~~
../UnitTests/main.cpp:99:8: error: invalid types ‘void[int]’ for array subscript
  d[1][1] = d[1][1] + d[1][1];
        ^
../UnitTests/main.cpp:99:18: error: invalid types ‘void[int]’ for array subscript
  d[1][1] = d[1][1] + d[1][1];
                  ^
../UnitTests/main.cpp:99:28: error: invalid types ‘void[int]’ for array subscript
  d[1][1] = d[1][1] + d[1][1];
                            ^
In file included from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10:0,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/TensorBase.h: In instantiation of ‘const auto BC::TensorBase<derived>::innerShape() const [with derived = BC::Matrix<float>]’:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Utility.h:75:17:   required from ‘void BC::Tensor_Utility<deriv, typename std::enable_if<(isPrim<typename BC::determine_functor< <template-parameter-1-1> >::fscal> || BC::MTF::isCore<typename BC::determine_functor< <template-parameter-1-1> >::type>::conditional), void>::type>::print() const [with deriv = BC::Matrix<float>; typename std::enable_if<(isPrim<typename BC::determine_functor< <template-parameter-1-1> >::fscal> || BC::MTF::isCore<typename BC::determine_functor< <template-parameter-1-1> >::type>::conditional), void>::type = void]’
../UnitTests/main.cpp:37:10:   required from here
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:73:66: error: ‘const functor_type {aka const struct BC::Tensor_Core<BC::Matrix<float> >}’ has no member named ‘innerShape’; did you mean ‘resetShape’?
  const auto innerShape() const    { return this->black_cat_array.innerShape(); }
                                            ~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:13:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Utility.h: In instantiation of ‘void BC::Tensor_Utility<deriv, typename std::enable_if<(isPrim<typename BC::determine_functor< <template-parameter-1-1> >::fscal> || BC::MTF::isCore<typename BC::determine_functor< <template-parameter-1-1> >::type>::conditional), void>::type>::print() const [with deriv = BC::Matrix<float>; typename std::enable_if<(isPrim<typename BC::determine_functor< <template-parameter-1-1> >::fscal> || BC::MTF::isCore<typename BC::determine_functor< <template-parameter-1-1> >::type>::conditional), void>::type = void]’:
../UnitTests/main.cpp:37:10:   required from here
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Utility.h:75:17: error: invalid use of void expression
   MATHLIB::print(asDerived().data().core(), asDerived().innerShape(), asDerived().rank(), 8);
   ~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10:0,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/TensorBase.h: In instantiation of ‘const auto BC::TensorBase<derived>::innerShape() const [with derived = BC::Scalar<float, BC::CPU>]’:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Utility.h:75:17:   required from ‘void BC::Tensor_Utility<deriv, typename std::enable_if<(isPrim<typename BC::determine_functor< <template-parameter-1-1> >::fscal> || BC::MTF::isCore<typename BC::determine_functor< <template-parameter-1-1> >::type>::conditional), void>::type>::print() const [with deriv = BC::Scalar<float, BC::CPU>; typename std::enable_if<(isPrim<typename BC::determine_functor< <template-parameter-1-1> >::fscal> || BC::MTF::isCore<typename BC::determine_functor< <template-parameter-1-1> >::type>::conditional), void>::type = void]’
../UnitTests/main.cpp:78:10:   required from here
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:73:66: error: ‘const functor_type {aka const struct BC::Tensor_Core<BC::Scalar<float, BC::CPU> >}’ has no member named ‘innerShape’; did you mean ‘resetShape’?
  const auto innerShape() const    { return this->black_cat_array.innerShape(); }
                                            ~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:13:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Utility.h: In instantiation of ‘void BC::Tensor_Utility<deriv, typename std::enable_if<(isPrim<typename BC::determine_functor< <template-parameter-1-1> >::fscal> || BC::MTF::isCore<typename BC::determine_functor< <template-parameter-1-1> >::type>::conditional), void>::type>::print() const [with deriv = BC::Scalar<float, BC::CPU>; typename std::enable_if<(isPrim<typename BC::determine_functor< <template-parameter-1-1> >::fscal> || BC::MTF::isCore<typename BC::determine_functor< <template-parameter-1-1> >::type>::conditional), void>::type = void]’:
../UnitTests/main.cpp:78:10:   required from here
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Utility.h:75:17: error: invalid use of void expression
   MATHLIB::print(asDerived().data().core(), asDerived().innerShape(), asDerived().rank(), 8);
   ~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10:0,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/TensorBase.h: In instantiation of ‘const auto BC::TensorBase<derived>::innerShape() const [with derived = BC::Cube<float, BC::CPU>]’:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Utility.h:75:17:   required from ‘void BC::Tensor_Utility<deriv, typename std::enable_if<(isPrim<typename BC::determine_functor< <template-parameter-1-1> >::fscal> || BC::MTF::isCore<typename BC::determine_functor< <template-parameter-1-1> >::type>::conditional), void>::type>::print() const [with deriv = BC::Cube<float, BC::CPU>; typename std::enable_if<(isPrim<typename BC::determine_functor< <template-parameter-1-1> >::fscal> || BC::MTF::isCore<typename BC::determine_functor< <template-parameter-1-1> >::type>::conditional), void>::type = void]’
../UnitTests/main.cpp:86:11:   required from here
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:73:66: error: ‘const functor_type {aka const struct BC::Tensor_Core<BC::Cube<float, BC::CPU> >}’ has no member named ‘innerShape’; did you mean ‘resetShape’?
  const auto innerShape() const    { return this->black_cat_array.innerShape(); }
                                            ~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:13:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Utility.h: In instantiation of ‘void BC::Tensor_Utility<deriv, typename std::enable_if<(isPrim<typename BC::determine_functor< <template-parameter-1-1> >::fscal> || BC::MTF::isCore<typename BC::determine_functor< <template-parameter-1-1> >::type>::conditional), void>::type>::print() const [with deriv = BC::Cube<float, BC::CPU>; typename std::enable_if<(isPrim<typename BC::determine_functor< <template-parameter-1-1> >::fscal> || BC::MTF::isCore<typename BC::determine_functor< <template-parameter-1-1> >::type>::conditional), void>::type = void]’:
../UnitTests/main.cpp:86:11:   required from here
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Utility.h:75:17: error: invalid use of void expression
   MATHLIB::print(asDerived().data().core(), asDerived().innerShape(), asDerived().rank(), 8);
   ~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10:0,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/TensorBase.h: In instantiation of ‘int BC::TensorBase<derived>::size() const [with derived = BC::Matrix<float>]’:
../UnitTests/main.cpp:112:30:   required from here
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:62:50: error: ‘const functor_type {aka const struct BC::Tensor_Core<BC::Matrix<float> >}’ has no member named ‘size’
  int size() const { return this->black_cat_array.size(); }
                            ~~~~~~~~~~~~~~~~~~~~~~^~~~
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:13:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Utility.h: In instantiation of ‘void BC::Tensor_Utility<deriv, typename std::enable_if<(isPrim<typename BC::determine_functor< <template-parameter-1-1> >::fscal> || BC::MTF::isCore<typename BC::determine_functor< <template-parameter-1-1> >::type>::conditional), void>::type>::read(std::ifstream&, bool, bool) [with deriv = BC::Matrix<double>; typename std::enable_if<(isPrim<typename BC::determine_functor< <template-parameter-1-1> >::fscal> || BC::MTF::isCore<typename BC::determine_functor< <template-parameter-1-1> >::type>::conditional), void>::type = void; std::ifstream = std::basic_ifstream<char>]’:
../UnitTests/main.cpp:113:15:   required from here
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Utility.h:132:22: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
    for (int i = 0; i < dims.size(); ++i) {
                    ~~^~~~~~~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Utility.h:138:92: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
    MATHLIB::HostToDevice(asDerived().data().core(), &data[data[0] + 1], asDerived().size() > data.size() ? data.size() : asDerived().size());
                                                                                             
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:13:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Utility.h:140:86: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
    MATHLIB::HostToDevice(asDerived().data().core(), &data[0],     asDerived().size() > data.size() ? data.size() : asDerived().size());
                                                                                       
In file included from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10:0,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/TensorBase.h: In instantiation of ‘const auto BC::TensorBase<derived>::innerShape() const [with derived = BC::Matrix<double>]’:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Utility.h:75:17:   required from ‘void BC::Tensor_Utility<deriv, typename std::enable_if<(isPrim<typename BC::determine_functor< <template-parameter-1-1> >::fscal> || BC::MTF::isCore<typename BC::determine_functor< <template-parameter-1-1> >::type>::conditional), void>::type>::print() const [with deriv = BC::Matrix<double>; typename std::enable_if<(isPrim<typename BC::determine_functor< <template-parameter-1-1> >::fscal> || BC::MTF::isCore<typename BC::determine_functor< <template-parameter-1-1> >::type>::conditional), void>::type = void]’
../UnitTests/main.cpp:114:14:   required from here
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:73:66: error: ‘const functor_type {aka const struct BC::Tensor_Core<BC::Matrix<double> >}’ has no member named ‘innerShape’; did you mean ‘resetShape’?
  const auto innerShape() const    { return this->black_cat_array.innerShape(); }
                                            ~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:13:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Utility.h: In instantiation of ‘void BC::Tensor_Utility<deriv, typename std::enable_if<(isPrim<typename BC::determine_functor< <template-parameter-1-1> >::fscal> || BC::MTF::isCore<typename BC::determine_functor< <template-parameter-1-1> >::type>::conditional), void>::type>::print() const [with deriv = BC::Matrix<double>; typename std::enable_if<(isPrim<typename BC::determine_functor< <template-parameter-1-1> >::fscal> || BC::MTF::isCore<typename BC::determine_functor< <template-parameter-1-1> >::type>::conditional), void>::type = void]’:
../UnitTests/main.cpp:114:14:   required from here
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Utility.h:75:17: error: invalid use of void expression
   MATHLIB::print(asDerived().data().core(), asDerived().innerShape(), asDerived().rank(), 8);
   ~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10:0,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/TensorBase.h: In instantiation of ‘int BC::TensorBase<derived>::size() const [with derived = BC::Cube<float, BC::CPU>]’:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Utility.h:69:16:   required from ‘void BC::Tensor_Utility<deriv, typename std::enable_if<(isPrim<typename BC::determine_functor< <template-parameter-1-1> >::fscal> || BC::MTF::isCore<typename BC::determine_functor< <template-parameter-1-1> >::type>::conditional), void>::type>::zero() [with deriv = BC::Cube<float, BC::CPU>; typename std::enable_if<(isPrim<typename BC::determine_functor< <template-parameter-1-1> >::fscal> || BC::MTF::isCore<typename BC::determine_functor< <template-parameter-1-1> >::type>::conditional), void>::type = void]’
../UnitTests/main.cpp:85:10:   required from here
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:62:50: error: ‘const functor_type {aka const struct BC::Tensor_Core<BC::Cube<float, BC::CPU> >}’ has no member named ‘size’
  int size() const { return this->black_cat_array.size(); }
                            ~~~~~~~~~~~~~~~~~~~~~~^~~~
../UnitTests/../BC_Internals/BC_Core/TensorBase.h: In instantiation of ‘int BC::TensorBase<derived>::dimension(int) const [with derived = BC::Matrix<float>]’:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Utility.h:94:7:   required from ‘void BC::Tensor_Utility<deriv, typename std::enable_if<(isPrim<typename BC::determine_functor< <template-parameter-1-1> >::fscal> || BC::MTF::isCore<typename BC::determine_functor< <template-parameter-1-1> >::type>::conditional), void>::type>::write(std::ofstream&) [with deriv = BC::Matrix<float>; typename std::enable_if<(isPrim<typename BC::determine_functor< <template-parameter-1-1> >::fscal> || BC::MTF::isCore<typename BC::determine_functor< <template-parameter-1-1> >::type>::conditional), void>::type = void; std::ofstream = std::basic_ofstream<char>]’
../UnitTests/main.cpp:105:12:   required from here
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:69:61: error: ‘const functor_type {aka const struct BC::Tensor_Core<BC::Matrix<float> >}’ has no member named ‘dimension’
  int dimension(int i)  const { return this->black_cat_array.dimension(i); }
                                       ~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~
../UnitTests/../BC_Internals/BC_Core/TensorBase.h: In instantiation of ‘int BC::TensorBase<derived>::size() const [with derived = BC::Matrix<double>]’:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Utility.h:138:92:   required from ‘void BC::Tensor_Utility<deriv, typename std::enable_if<(isPrim<typename BC::determine_functor< <template-parameter-1-1> >::fscal> || BC::MTF::isCore<typename BC::determine_functor< <template-parameter-1-1> >::type>::conditional), void>::type>::read(std::ifstream&, bool, bool) [with deriv = BC::Matrix<double>; typename std::enable_if<(isPrim<typename BC::determine_functor< <template-parameter-1-1> >::fscal> || BC::MTF::isCore<typename BC::determine_functor< <template-parameter-1-1> >::type>::conditional), void>::type = void; std::ifstream = std::basic_ifstream<char>]’
../UnitTests/main.cpp:113:15:   required from here
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:62:50: error: ‘const functor_type {aka const struct BC::Tensor_Core<BC::Matrix<double> >}’ has no member named ‘size’
  int size() const { return this->black_cat_array.size(); }
                            ~~~~~~~~~~~~~~~~~~~~~~^~~~
In file included from ../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h:12:0,
                 from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:15,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Core.h: In instantiation of ‘BC::Tensor_Core< <template-parameter-1-1> >::Tensor_Core(BC::Tensor_Core< <template-parameter-1-1> >::dimlist) [with T = BC::Matrix<float>; BC::Tensor_Core< <template-parameter-1-1> >::dimlist = std::vector<int>]’:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h:69:66:   required from ‘BC::TensorInitializer<_tensor<t, ml>, typename std::enable_if<BC::MTF::isCorePure<t>::conditional, void>::type>::TensorInitializer(BC::TensorInitializer<_tensor<t, ml>, typename std::enable_if<BC::MTF::isCorePure<t>::conditional, void>::type>::_shape) [with _tensor = BC::Matrix; t = float; ml = BC::CPU; typename std::enable_if<BC::MTF::isCorePure<t>::conditional, void>::type = void; BC::TensorInitializer<_tensor<t, ml>, typename std::enable_if<BC::MTF::isCorePure<t>::conditional, void>::type>::_shape = std::vector<int>]’
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:50:51:   required from ‘BC::TensorBase<derived>::TensorBase(const params& ...) [with params = {std::vector<int, std::allocator<int> >}; derived = BC::Matrix<float>]’
../UnitTests/../BC_Internals/BC_Core/Matrix.h:35:77:   required from ‘BC::Matrix< <template-parameter-1-1>, ML>::Matrix(int, int) [with T = float; Mathlib = BC::CPU]’
../UnitTests/main.cpp:20:12:   required from here
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Core.h:54:34: error: ‘size’ was not declared in this scope
   Mathlib::initialize(array, size());
                              ~~~~^~
In file included from ../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Core_Slice.h:17:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Core.h:13,
                 from ../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h:12,
                 from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:15,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Core_Scalar.h: In instantiation of ‘BC::Tensor_Scalar<PARENT>::Tensor_Scalar(BC::Tensor_Scalar<PARENT>::scalar*, const PARENT&) [with PARENT = BC::Tensor_Core<BC::Matrix<float> >; BC::Tensor_Scalar<PARENT>::scalar = float]’:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h:33:63:   required from ‘BC::TensorInitializer<derived, expression_tensor>::TensorInitializer(const params& ...) [with params = {float*, BC::Tensor_Core<BC::Matrix<float, BC::CPU> >}; derived = BC::Scalar<BC::Tensor_Scalar<BC::Tensor_Core<BC::Matrix<float> > >, BC::CPU>; expression_tensor = void]’
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:50:51:   required from ‘BC::TensorBase<derived>::TensorBase(const params& ...) [with params = {float*, BC::Tensor_Core<BC::Matrix<float, BC::CPU> >}; derived = BC::Scalar<BC::Tensor_Scalar<BC::Tensor_Core<BC::Matrix<float> > >, BC::CPU>]’
../UnitTests/../BC_Internals/BC_Core/Scalar.h:61:97:   required from ‘BC::Scalar< <template-parameter-1-1>, ML>::Scalar(const var1&, const var2&, const params& ...) [with var1 = float*; var2 = BC::Tensor_Core<BC::Matrix<float> >; params = {}; T = BC::Tensor_Scalar<BC::Tensor_Core<BC::Matrix<float> > >; Mathlib = BC::CPU]’
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:92:19:   required from ‘auto BC::TensorBase<derived>::getScalar(int) [with derived = BC::Matrix<float>]’
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:96:52:   required from ‘auto BC::TensorBase<derived>::operator()(int) [with derived = BC::Matrix<float>]’
../UnitTests/main.cpp:33:6:   required from here
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Core_Scalar.h:33:10: warning: ‘BC::Tensor_Scalar<BC::Tensor_Core<BC::Matrix<float> > >::array_slice’ will be initialized after [-Wreorder]
  scalar* array_slice;
          ^~~~~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Core_Scalar.h:32:16: warning:   ‘const BC::Tensor_Core<BC::Matrix<float> >& BC::Tensor_Scalar<BC::Tensor_Core<BC::Matrix<float> > >::parent’ [-Wreorder]
  const PARENT& parent;
                ^~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Core_Scalar.h:38:2: warning:   when initialized here [-Wreorder]
  Tensor_Scalar(scalar* array, const PARENT& parent_) : array_slice(array), parent(parent_) {}
  ^~~~~~~~~~~~~
In file included from ../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h:12:0,
                 from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:15,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Core.h: In instantiation of ‘BC::Tensor_Core< <template-parameter-1-1> >::Tensor_Core(BC::Tensor_Core< <template-parameter-1-1> >::dimlist) [with T = BC::Cube<float, BC::CPU>; BC::Tensor_Core< <template-parameter-1-1> >::dimlist = std::vector<int>]’:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h:69:66:   required from ‘BC::TensorInitializer<_tensor<t, ml>, typename std::enable_if<BC::MTF::isCorePure<t>::conditional, void>::type>::TensorInitializer(BC::TensorInitializer<_tensor<t, ml>, typename std::enable_if<BC::MTF::isCorePure<t>::conditional, void>::type>::_shape) [with _tensor = BC::Cube; t = float; ml = BC::CPU; typename std::enable_if<BC::MTF::isCorePure<t>::conditional, void>::type = void; BC::TensorInitializer<_tensor<t, ml>, typename std::enable_if<BC::MTF::isCorePure<t>::conditional, void>::type>::_shape = std::vector<int>]’
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:50:51:   required from ‘BC::TensorBase<derived>::TensorBase(const params& ...) [with params = {std::vector<int, std::allocator<int> >}; derived = BC::Cube<float, BC::CPU>]’
../UnitTests/../BC_Internals/BC_Core/Cube.h:35:97:   required from ‘BC::Cube< <template-parameter-1-1>, ML>::Cube(int, int, int) [with T = float; Mathlib = BC::CPU]’
../UnitTests/main.cpp:84:16:   required from here
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Core.h:54:34: error: ‘size’ was not declared in this scope
   Mathlib::initialize(array, size());
                              ~~~~^~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Core.h: In instantiation of ‘BC::Tensor_Core< <template-parameter-1-1> >::Tensor_Core(BC::Tensor_Core< <template-parameter-1-1> >::dimlist) [with T = BC::Matrix<double>; BC::Tensor_Core< <template-parameter-1-1> >::dimlist = std::vector<int>]’:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h:69:66:   required from ‘BC::TensorInitializer<_tensor<t, ml>, typename std::enable_if<BC::MTF::isCorePure<t>::conditional, void>::type>::TensorInitializer(BC::TensorInitializer<_tensor<t, ml>, typename std::enable_if<BC::MTF::isCorePure<t>::conditional, void>::type>::_shape) [with _tensor = BC::Matrix; t = double; ml = BC::CPU; typename std::enable_if<BC::MTF::isCorePure<t>::conditional, void>::type = void; BC::TensorInitializer<_tensor<t, ml>, typename std::enable_if<BC::MTF::isCorePure<t>::conditional, void>::type>::_shape = std::vector<int>]’
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:50:51:   required from ‘BC::TensorBase<derived>::TensorBase(const params& ...) [with params = {std::vector<int, std::allocator<int> >}; derived = BC::Matrix<double>]’
../UnitTests/../BC_Internals/BC_Core/Matrix.h:35:77:   required from ‘BC::Matrix< <template-parameter-1-1>, ML>::Matrix(int, int) [with T = double; Mathlib = BC::CPU]’
../UnitTests/main.cpp:112:31:   required from here
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Core.h:54:34: error: ‘size’ was not declared in this scope
make: *** [UnitTests/main.o] Error 1
17:09:08 **** Incremental Build of configuration Debug for project BlackCat_LibraryCPU ****
make all 
Building file: ../UnitTests/main.cpp
Invoking: GCC C++ Compiler
g++ -O0 -g3 -Wall -c -fmessage-length=0 -MMD -MP -MF"UnitTests/main.d" -MT"UnitTests/main.o" -o "UnitTests/main.o" "../UnitTests/main.cpp"
In file included from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:32:0,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_MathLibraries/Mathematics_CPU.h:74:0: warning: ignoring #pragma omp parallel [-Wunknown-pragmas]
 #pragma omp parallel for
 
../UnitTests/../BC_Internals/BC_MathLibraries/Mathematics_CPU.h:78:0: warning: ignoring #pragma omp barrier [-Wunknown-pragmas]
 #pragma omp barrier
 
../UnitTests/../BC_Internals/BC_MathLibraries/Mathematics_CPU.h:88:0: warning: ignoring #pragma omp parallel [-Wunknown-pragmas]
 #pragma omp parallel for
 
../UnitTests/../BC_Internals/BC_MathLibraries/Mathematics_CPU.h:92:0: warning: ignoring #pragma omp barrier [-Wunknown-pragmas]
 #pragma omp barrier
 
In file included from ../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Core_Slice.h:17:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Core.h:13,
                 from ../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h:12,
                 from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:15,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Core_Scalar.h:22:0: warning: "__BCinline__" redefined
 #define __BCinline__
 
In file included from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:29:0,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Expressions/BlackCat_Internal_Definitions.h:25:0: note: this is the location of the previous definition
 #define __BCinline__ __BC_gcpu__ __attribute__((always_inline))
 
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:12:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:54:44: error: ‘binary_expression’ was not declared in this scope
      typename MTF::expression_substitution<binary_expression<scalar_type, functor, functor_type, param_functor_type>, derived>::type,
                                            ^~~~~~~~~~~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:54:116: error: wrong number of template arguments (4, should be 2)
      typename MTF::expression_substitution<binary_expression<scalar_type, functor, functor_type, param_functor_type>, derived>::type,
                                                                                                                    ^
In file included from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:47:0,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_MetaTemplateFunctions/Adhoc.h:18:34: note: provided for ‘template<class, class> struct BC::MTF::expression_substitution’
   template<class, class>  struct expression_substitution;
                                  ^~~~~~~~~~~~~~~~~~~~~~~
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:12:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:54:126: error: template argument 2 is invalid
      typename MTF::expression_substitution<binary_expression<scalar_type, functor, functor_type, param_functor_type>, derived>::type,
                                                                                                                              ^
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:54:127: error: expected identifier before ‘::’ token
      typename MTF::expression_substitution<binary_expression<scalar_type, functor, functor_type, param_functor_type>, derived>::type,
                                                                                                                               ^~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:64:60: error: ‘unary_expression’ was not declared in this scope
   using unary_type = typename MTF::expression_substitution<unary_expression<scalar_type, functor, functor_type>, derived>::type;
                                                            ^~~~~~~~~~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:64:111: error: wrong number of template arguments (3, should be 2)
   using unary_type = typename MTF::expression_substitution<unary_expression<scalar_type, functor, functor_type>, derived>::type;
                                                                                                               ^
In file included from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:47:0,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_MetaTemplateFunctions/Adhoc.h:18:34: note: provided for ‘template<class, class> struct BC::MTF::expression_substitution’
   template<class, class>  struct expression_substitution;
                                  ^~~~~~~~~~~~~~~~~~~~~~~
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:12:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:64:112: error: expected identifier before ‘,’ token
   using unary_type = typename MTF::expression_substitution<unary_expression<scalar_type, functor, functor_type>, derived>::type;
                                                                                                                ^
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:88:49: error: ‘binary_expression_scalar_L’ was not declared in this scope
           typename MTF::expression_substitution<binary_expression_scalar_L<scalar_type, mul, functor_type, param_functor_type>, param_deriv>::type,
                                                 ^~~~~~~~~~~~~~~~~~~~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:88:89: error: ‘mul’ was not declared in this scope
           typename MTF::expression_substitution<binary_expression_scalar_L<scalar_type, mul, functor_type, param_functor_type>, param_deriv>::type,
                                                                                         ^~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:88:126: error: wrong number of template arguments (4, should be 2)
           typename MTF::expression_substitution<binary_expression_scalar_L<scalar_type, mul, functor_type, param_functor_type>, param_deriv>::type,
                                                                                                                              ^
In file included from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:47:0,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_MetaTemplateFunctions/Adhoc.h:18:34: note: provided for ‘template<class, class> struct BC::MTF::expression_substitution’
   template<class, class>  struct expression_substitution;
                                  ^~~~~~~~~~~~~~~~~~~~~~~
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:12:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:88:140: error: template argument 2 is invalid
           typename MTF::expression_substitution<binary_expression_scalar_L<scalar_type, mul, functor_type, param_functor_type>, param_deriv>::type,
                                                                                                                                            ^
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:88:147: error: expected ‘(’ before ‘,’ token
           typename MTF::expression_substitution<binary_expression_scalar_L<scalar_type, mul, functor_type, param_functor_type>, param_deriv>::type,
                                                                                                                                                   ^
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:89:49: error: ‘binary_expression_scalar_R’ was not declared in this scope
           typename MTF::expression_substitution<binary_expression_scalar_R<scalar_type, mul, functor_type, param_functor_type>, derived  >::type
                                                 ^~~~~~~~~~~~~~~~~~~~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:89:89: error: ‘mul’ was not declared in this scope
           typename MTF::expression_substitution<binary_expression_scalar_R<scalar_type, mul, functor_type, param_functor_type>, derived  >::type
                                                                                         ^~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:89:126: error: wrong number of template arguments (4, should be 2)
           typename MTF::expression_substitution<binary_expression_scalar_R<scalar_type, mul, functor_type, param_functor_type>, derived  >::type
                                                                                                                              ^
In file included from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:47:0,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_MetaTemplateFunctions/Adhoc.h:18:34: note: provided for ‘template<class, class> struct BC::MTF::expression_substitution’
   template<class, class>  struct expression_substitution;
                                  ^~~~~~~~~~~~~~~~~~~~~~~
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:12:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:89:127: error: expected identifier before ‘,’ token
           typename MTF::expression_substitution<binary_expression_scalar_R<scalar_type, mul, functor_type, param_functor_type>, derived  >::type
                                                                                                                               ^
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:89:127: error: expected ‘(’ before ‘,’ token
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:89:138: error: wrong number of template arguments (4, should be 3)
           typename MTF::expression_substitution<binary_expression_scalar_R<scalar_type, mul, functor_type, param_functor_type>, derived  >::type
                                                                                                                                          ^
In file included from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:46:0,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_MetaTemplateFunctions/Simple.h:19:10: note: provided for ‘template<bool iff, class THEN, class ELSE> struct BC::MTF::IF_ELSE’
   struct IF_ELSE {
          ^~~~~~~
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:12:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:94:47: error: ‘binary_expression_dotproduct’ was not declared in this scope
         typename MTF::expression_substitution<binary_expression_dotproduct<scalar_type, functor_type, param_functor_type, math_library>,param_deriv>::type, void>::type;
                                               ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:94:135: error: wrong number of template arguments (4, should be 2)
         typename MTF::expression_substitution<binary_expression_dotproduct<scalar_type, functor_type, param_functor_type, math_library>,param_deriv>::type, void>::type;
                                                                                                                                       ^
In file included from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:47:0,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_MetaTemplateFunctions/Adhoc.h:18:34: note: provided for ‘template<class, class> struct BC::MTF::expression_substitution’
   template<class, class>  struct expression_substitution;
                                  ^~~~~~~~~~~~~~~~~~~~~~~
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:12:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:94:148: error: template argument 2 is invalid
         typename MTF::expression_substitution<binary_expression_dotproduct<scalar_type, functor_type, param_functor_type, math_library>,param_deriv>::type, void>::type;
                                                                                                                                                    ^
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:94:149: error: expected identifier before ‘::’ token
         typename MTF::expression_substitution<binary_expression_dotproduct<scalar_type, functor_type, param_functor_type, math_library>,param_deriv>::type, void>::type;
                                                                                                                                                     ^~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:97:47: error: ‘binary_expression_dotproduct’ was not declared in this scope
         typename MTF::expression_substitution<binary_expression_dotproduct<scalar_type, functor_type, param_functor_type, math_library>,param_deriv>::type, void>::type;
                                               ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:97:135: error: wrong number of template arguments (4, should be 2)
         typename MTF::expression_substitution<binary_expression_dotproduct<scalar_type, functor_type, param_functor_type, math_library>,param_deriv>::type, void>::type;
                                                                                                                                       ^
In file included from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:47:0,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_MetaTemplateFunctions/Adhoc.h:18:34: note: provided for ‘template<class, class> struct BC::MTF::expression_substitution’
   template<class, class>  struct expression_substitution;
                                  ^~~~~~~~~~~~~~~~~~~~~~~
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:12:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:97:148: error: template argument 2 is invalid
         typename MTF::expression_substitution<binary_expression_dotproduct<scalar_type, functor_type, param_functor_type, math_library>,param_deriv>::type, void>::type;
                                                                                                                                                    ^
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:97:149: error: expected identifier before ‘::’ token
         typename MTF::expression_substitution<binary_expression_dotproduct<scalar_type, functor_type, param_functor_type, math_library>,param_deriv>::type, void>::type;
                                                                                                                                                     ^~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:100:47: error: ‘binary_expression_dotproduct’ was not declared in this scope
         typename MTF::expression_substitution<binary_expression_dotproduct<scalar_type, functor_type, param_functor_type, math_library>,
                                               ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:100:135: error: wrong number of template arguments (4, should be 2)
         typename MTF::expression_substitution<binary_expression_dotproduct<scalar_type, functor_type, param_functor_type, math_library>,
                                                                                                                                       ^
In file included from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:47:0,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_MetaTemplateFunctions/Adhoc.h:18:34: note: provided for ‘template<class, class> struct BC::MTF::expression_substitution’
   template<class, class>  struct expression_substitution;
                                  ^~~~~~~~~~~~~~~~~~~~~~~
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:12:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:101:42: error: template argument 2 is invalid
         Matrix<functor_type, math_library>>::type, void>::type;
                                          ^~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:101:44: error: expected identifier before ‘::’ token
         Matrix<functor_type, math_library>>::type, void>::type;
                                            ^~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:103:62: error: ‘vecType’ was not declared in this scope
   using type    =  typename MTF::IF_ELSE<evaluate_to_vector, vecType,
                                                              ^~~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:104:52: error: ‘matType’ was not declared in this scope
          typename MTF::IF_ELSE<evaluate_to_matrix, matType,
                                                    ^~~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:105:53: error: ‘outerType’ was not declared in this scope
           typename MTF::IF_ELSE<evaluate_to_mat_vv, outerType,
                                                     ^~~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:106:56: error: ‘mulType’ was not declared in this scope
            typename MTF::IF_ELSE<evaluate_to_dominant, mulType, void
                                                        ^~~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:107:12: error: template argument 2 is invalid
            >::type
            ^
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:108:11: error: template argument 2 is invalid
           >::type
           ^
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:108:11: error: template argument 3 is invalid
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:109:10: error: template argument 2 is invalid
          >::type
          ^
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:109:10: error: template argument 3 is invalid
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:110:9: error: template argument 2 is invalid
         >::type;
         ^
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:110:9: error: template argument 3 is invalid
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:113:27: error: ‘type’ does not name a type
   using expression_type = type;
                           ^~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:166:24: error: ‘mul’ was not declared in this scope
  typename impl<pDeriv, mul>::type operator *(const alternate_asterix_denoter<pDeriv>& param) const {
                        ^~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:166:27: error: template argument 2 is invalid
  typename impl<pDeriv, mul>::type operator *(const alternate_asterix_denoter<pDeriv>& param) const {
                           ^
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:172:24: error: ‘assign’ was not declared in this scope
  typename impl<pDeriv, assign>::type operator ==(const Tensor_Operations<pDeriv>& param) {
                        ^~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:172:30: error: template argument 2 is invalid
  typename impl<pDeriv, assign>::type operator ==(const Tensor_Operations<pDeriv>& param) {
                              ^
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:178:24: error: ‘combine’ was not declared in this scope
  typename impl<pDeriv, combine>::type operator &&(const Tensor_Operations<pDeriv>& param) {
                        ^~~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:178:31: error: template argument 2 is invalid
  typename impl<pDeriv, combine>::type operator &&(const Tensor_Operations<pDeriv>& param) {
                               ^
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:185:24: error: ‘add’ was not declared in this scope
  typename impl<pDeriv, add>::type operator +(const Tensor_Operations<pDeriv>& param) const {
                        ^~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:185:27: error: template argument 2 is invalid
  typename impl<pDeriv, add>::type operator +(const Tensor_Operations<pDeriv>& param) const {
                           ^
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:190:24: error: ‘sub’ was not declared in this scope
  typename impl<pDeriv, sub>::type operator -(const Tensor_Operations<pDeriv>& param) const {
                        ^~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:190:27: error: template argument 2 is invalid
  typename impl<pDeriv, sub>::type operator -(const Tensor_Operations<pDeriv>& param) const {
                           ^
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:195:27: error: type/value mismatch at argument 2 in template parameter list for ‘template<class derived> template<class param_deriv, class functor> struct BC::Tensor_Operations< <template-parameter-1-1> >::impl’
  typename impl<pDeriv, div>::type operator /(const Tensor_Operations<pDeriv>& param) const {
                           ^
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:195:27: note:   expected a type, got ‘div’
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:200:24: error: ‘mul’ was not declared in this scope
  typename impl<pDeriv, mul>::type operator %(const Tensor_Operations<pDeriv>& param) const {
                        ^~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:200:27: error: template argument 2 is invalid
  typename impl<pDeriv, mul>::type operator %(const Tensor_Operations<pDeriv>& param) const {
                           ^
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h: In member function ‘int BC::Tensor_Operations< <template-parameter-1-1> >::operator*(const BC::alternate_asterix_denoter<pDeriv>&) const’:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:168:32: error: ‘mul’ was not declared in this scope
   return typename impl<pDeriv, mul>::type(this->data(), param.get().data());
                                ^~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:168:35: error: template argument 2 is invalid
   return typename impl<pDeriv, mul>::type(this->data(), param.get().data());
                                   ^
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h: In member function ‘int BC::Tensor_Operations< <template-parameter-1-1> >::operator==(const BC::Tensor_Operations<param_deriv>&)’:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:174:32: error: ‘assign’ was not declared in this scope
   return typename impl<pDeriv, assign>::type(this->data(), param.data());
                                ^~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:174:38: error: template argument 2 is invalid
   return typename impl<pDeriv, assign>::type(this->data(), param.data());
                                      ^
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h: In member function ‘int BC::Tensor_Operations< <template-parameter-1-1> >::operator&&(const BC::Tensor_Operations<param_deriv>&)’:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:180:32: error: ‘combine’ was not declared in this scope
   return typename impl<pDeriv, combine>::type(this->data(), param.data());
                                ^~~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:180:39: error: template argument 2 is invalid
   return typename impl<pDeriv, combine>::type(this->data(), param.data());
                                       ^
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h: In member function ‘int BC::Tensor_Operations< <template-parameter-1-1> >::operator+(const BC::Tensor_Operations<param_deriv>&) const’:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:187:32: error: ‘add’ was not declared in this scope
   return typename impl<pDeriv, add>::type(this->data(), param.data());
                                ^~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:187:35: error: template argument 2 is invalid
   return typename impl<pDeriv, add>::type(this->data(), param.data());
                                   ^
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h: In member function ‘int BC::Tensor_Operations< <template-parameter-1-1> >::operator-(const BC::Tensor_Operations<param_deriv>&) const’:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:192:32: error: ‘sub’ was not declared in this scope
   return typename impl<pDeriv, sub>::type(this->data(), param.data());
                                ^~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:192:35: error: template argument 2 is invalid
   return typename impl<pDeriv, sub>::type(this->data(), param.data());
                                   ^
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h: In member function ‘int BC::Tensor_Operations< <template-parameter-1-1> >::operator/(const BC::Tensor_Operations<param_deriv>&) const’:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:197:35: error: type/value mismatch at argument 2 in template parameter list for ‘template<class derived> template<class param_deriv, class functor> struct BC::Tensor_Operations< <template-parameter-1-1> >::impl’
   return typename impl<pDeriv, div>::type(this->data(), param.data());
                                   ^
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:197:35: note:   expected a type, got ‘div’
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h: In member function ‘int BC::Tensor_Operations< <template-parameter-1-1> >::operator%(const BC::Tensor_Operations<param_deriv>&) const’:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:202:32: error: ‘mul’ was not declared in this scope
   return typename impl<pDeriv, mul>::type(this->data(), param.data());
                                ^~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:202:35: error: template argument 2 is invalid
   return typename impl<pDeriv, mul>::type(this->data(), param.data());
                                   ^
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h: In member function ‘derived& BC::Tensor_Operations< <template-parameter-1-1> >::operator+=(const BC::Tensor_Operations<param_deriv>&)’:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:214:40: error: ‘add’ was not declared in this scope
   return *this = typename impl<pDeriv, add>::type(this->data(), param.data());
                                        ^~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:214:43: error: template argument 2 is invalid
   return *this = typename impl<pDeriv, add>::type(this->data(), param.data());
                                           ^
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h: In member function ‘derived& BC::Tensor_Operations< <template-parameter-1-1> >::operator-=(const BC::Tensor_Operations<param_deriv>&)’:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:219:40: error: ‘sub’ was not declared in this scope
   return *this = typename impl<pDeriv, sub>::type(this->data(), param.data());
                                        ^~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:219:43: error: template argument 2 is invalid
   return *this = typename impl<pDeriv, sub>::type(this->data(), param.data());
                                           ^
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h: In member function ‘derived& BC::Tensor_Operations< <template-parameter-1-1> >::operator/=(const BC::Tensor_Operations<param_deriv>&)’:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:224:43: error: type/value mismatch at argument 2 in template parameter list for ‘template<class derived> template<class param_deriv, class functor> struct BC::Tensor_Operations< <template-parameter-1-1> >::impl’
   return *this = typename impl<pDeriv, div>::type(this->data(), param.data());
                                           ^
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:224:43: note:   expected a type, got ‘div’
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h: In member function ‘derived& BC::Tensor_Operations< <template-parameter-1-1> >::operator%=(const BC::Tensor_Operations<param_deriv>&)’:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:229:40: error: ‘mul’ was not declared in this scope
   return *this = typename impl<pDeriv, mul>::type(this->data(), param.data());
                                        ^~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:229:43: error: template argument 2 is invalid
   return *this = typename impl<pDeriv, mul>::type(this->data(), param.data());
                                           ^
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:13:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Utility.h: In member function ‘auto BC::Tensor_Utility<deriv, <template-parameter-1-2> >::eval() const’:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Utility.h:34:45: error: expected ‘(’ before ‘<’ token
   return typename MTF::shell_of<deriv>::type<_scalar<deriv>, _mathlib<deriv>>(this->asDerived());
                                             ^
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Utility.h:34:60: error: expected primary-expression before ‘,’ token
   return typename MTF::shell_of<deriv>::type<_scalar<deriv>, _mathlib<deriv>>(this->asDerived());
                                                            ^
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Utility.h:34:76: error: expected primary-expression before ‘>’ token
   return typename MTF::shell_of<deriv>::type<_scalar<deriv>, _mathlib<deriv>>(this->asDerived());
                                                                            ^~
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:15:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h: At global scope:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h:74:54: error: expected ‘;’ before ‘<’ token
  using derived_alt = typename shell_of<derived>::type<T, Mathlib>;
                                                      ^
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h:77:26: error: ‘derived_alt’ does not name a type
  TensorInitializer(const derived_alt<U>&  tensor) : black_cat_array(tensor.innerShape()) {
                          ^~~~~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h:77:37: error: expected ‘,’ or ‘...’ before ‘<’ token
  TensorInitializer(const derived_alt<U>&  tensor) : black_cat_array(tensor.innerShape()) {
                                     ^
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h: In constructor ‘BC::TensorInitializer<_tensor<t, ml>, typename std::enable_if<BC::MTF::isCorePure<t>::conditional, void>::type>::TensorInitializer(int)’:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h:77:69: error: ‘tensor’ was not declared in this scope
  TensorInitializer(const derived_alt<U>&  tensor) : black_cat_array(tensor.innerShape()) {
                                                                     ^~~~~~
In file included from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10:0,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/TensorBase.h: At global scope:
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:38:71: error: expected ‘;’ before ‘<’ token
  template<class    U> using deriv   = typename shell_of<derived>::type<U, Mathlib>;
                                                                       ^
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:39:76: error: expected ‘;’ before ‘<’ token
  template<class... U> using functor = typename shell_of<functor_type>::type<U...>;
                                                                            ^
../UnitTests/../BC_Internals/BC_Core/TensorBase.h: In member function ‘auto BC::TensorBase<derived>::operator[](int)’:
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:83:68: error: expected ‘(’ before ‘<’ token
     auto operator [] (int i)    { return typename base<RANK>::slice<decltype(slice(0)), Mathlib>(slice(i)); }
                                                                    ^
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:83:69: error: expected primary-expression before ‘decltype’
     auto operator [] (int i)    { return typename base<RANK>::slice<decltype(slice(0)), Mathlib>(slice(i)); }
                                                                     ^~~~~~~~
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:83:69: error: expected ‘;’ before ‘decltype’
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:83:87: error: expected unqualified-id before ‘,’ token
     auto operator [] (int i)    { return typename base<RANK>::slice<decltype(slice(0)), Mathlib>(slice(i)); }
                                                                                       ^
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:83:96: error: expected initializer before ‘>’ token
     auto operator [] (int i)    { return typename base<RANK>::slice<decltype(slice(0)), Mathlib>(slice(i)); }
                                                                                                ^
../UnitTests/../BC_Internals/BC_Core/TensorBase.h: In member function ‘const auto BC::TensorBase<derived>::operator[](int) const’:
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:84:74: error: expected ‘(’ before ‘<’ token
  const auto operator [] (int i) const { return typename base<RANK>::slice<decltype(slice(0)), Mathlib>(slice(i)); }
                                                                          ^
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:84:75: error: expected primary-expression before ‘decltype’
  const auto operator [] (int i) const { return typename base<RANK>::slice<decltype(slice(0)), Mathlib>(slice(i)); }
                                                                           ^~~~~~~~
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:84:75: error: expected ‘;’ before ‘decltype’
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:84:93: error: expected unqualified-id before ‘,’ token
  const auto operator [] (int i) const { return typename base<RANK>::slice<decltype(slice(0)), Mathlib>(slice(i)); }
                                                                                             ^
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:84:102: error: expected initializer before ‘>’ token
  const auto operator [] (int i) const { return typename base<RANK>::slice<decltype(slice(0)), Mathlib>(slice(i)); }
                                                                                                      ^
In file included from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:50:0,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Vector.h: At global scope:
../UnitTests/../BC_Internals/BC_Core/Vector.h:45:15: error: ‘unary_expression_transpose’ was not declared in this scope
  const Vector<unary_expression_transpose<typename MTF::determine_scalar<T>::type, typename parent_class::functor_type>, Mathlib> t() const {
               ^~~~~~~~~~~~~~~~~~~~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Vector.h:45:118: error: template argument 1 is invalid
  const Vector<unary_expression_transpose<typename MTF::determine_scalar<T>::type, typename parent_class::functor_type>, Mathlib> t() const {
                                                                                                                      ^
../UnitTests/../BC_Internals/BC_Core/Vector.h:45:119: error: expected unqualified-id before ‘,’ token
  const Vector<unary_expression_transpose<typename MTF::determine_scalar<T>::type, typename parent_class::functor_type>, Mathlib> t() const {
                                                                                                                       ^
In file included from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:51:0,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Matrix.h:47:15: error: ‘unary_expression_transpose’ was not declared in this scope
  const Matrix<unary_expression_transpose<typename MTF::determine_scalar<T>::type, typename parent_class::functor_type>, Mathlib> t() const {
               ^~~~~~~~~~~~~~~~~~~~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Matrix.h:47:118: error: template argument 1 is invalid
  const Matrix<unary_expression_transpose<typename MTF::determine_scalar<T>::type, typename parent_class::functor_type>, Mathlib> t() const {
                                                                                                                      ^
../UnitTests/../BC_Internals/BC_Core/Matrix.h:47:119: error: expected unqualified-id before ‘,’ token
  const Matrix<unary_expression_transpose<typename MTF::determine_scalar<T>::type, typename parent_class::functor_type>, Mathlib> t() const {
                                                                                                                       ^
In file included from ../UnitTests/main.cpp:4:0:
../UnitTests/SpeedTests.h: In function ‘int speedTestDelayedEval()’:
../UnitTests/SpeedTests.h:43:11: error: no match for ‘operator==’ (operand types are ‘vec {aka BC::Vector<float>}’ and ‘int’)
   a = ((e == b ** c) + d);
         ~~^~~~~~~~~
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:12:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:172:38: note: candidate: template<class pDeriv> int BC::Tensor_Operations< <template-parameter-1-1> >::operator==(const BC::Tensor_Operations<param_deriv>&) [with pDeriv = pDeriv; derived = BC::Vector<float>]
  typename impl<pDeriv, assign>::type operator ==(const Tensor_Operations<pDeriv>& param) {
                                      ^~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:172:38: note:   template argument deduction/substitution failed:
In file included from ../UnitTests/main.cpp:4:0:
../UnitTests/SpeedTests.h:43:19: note:   mismatched types ‘const BC::Tensor_Operations<A>’ and ‘int’
   a = ((e == b ** c) + d);
                   ^
../UnitTests/SpeedTests.h: In function ‘int speedTestsScalarIteration()’:
../UnitTests/SpeedTests.h:136:9: error: ‘using mat = class BC::Matrix<float> {aka class BC::Matrix<float>}’ has no member named ‘t’
   c = a.t() * b;
         ^
../UnitTests/main.cpp: In function ‘auto test()’:
../UnitTests/main.cpp:40:8: error: ‘using mat = class BC::Matrix<float> {aka class BC::Matrix<float>}’ has no member named ‘t’
  d = a.t();
        ^
../UnitTests/main.cpp:41:8: error: ‘using mat = class BC::Matrix<float> {aka class BC::Matrix<float>}’ has no member named ‘t’
  e = b.t();
        ^
../UnitTests/main.cpp:47:8: error: no match for ‘operator*’ (operand types are ‘mat {aka BC::Matrix<float>}’ and ‘mat {aka BC::Matrix<float>}’)
  c = d * e;
      ~~^~~
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:12:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:145:33: note: candidate: template<class pDeriv, class voider> typename BC::Tensor_Operations< <template-parameter-1-1> >::dp_impl<param_deriv>::type BC::Tensor_Operations< <template-parameter-1-1> >::operator*(const BC::Tensor_Operations<param_deriv>&) const [with pDeriv = pDeriv; voider = voider; derived = BC::Matrix<float>]
  typename dp_impl<pDeriv>::type operator *(const Tensor_Operations<pDeriv>& param) const {
                                 ^~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:145:33: note:   template argument deduction/substitution failed:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:144:25: error: no type named ‘type’ in ‘struct std::enable_if<false, void>’
  template<class pDeriv, class voider = typename std::enable_if<dp_impl<pDeriv>::short_params || dp_impl<pDeriv>::short_params>::type>
                         ^~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:156:33: note: candidate: template<class pDeriv, class voider, int foo> typename BC::Tensor_Operations< <template-parameter-1-1> >::dp_impl<param_deriv>::type BC::Tensor_Operations< <template-parameter-1-1> >::operator*(const BC::Tensor_Operations<param_deriv>&) const [with pDeriv = pDeriv; voider = voider; int foo = foo; derived = BC::Matrix<float>]
  typename dp_impl<pDeriv>::type operator *(const Tensor_Operations<pDeriv>& param) const {
                                 ^~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:156:33: note:   template argument deduction/substitution failed:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h: In substitution of ‘template<class pDeriv, class voider, int foo> typename BC::Tensor_Operations< <template-parameter-1-1> >::dp_impl<param_deriv>::type BC::Tensor_Operations< <template-parameter-1-1> >::operator*(const BC::Tensor_Operations<param_deriv>&) const [with pDeriv = BC::Matrix<float>; voider = void; int foo = 0]’:
../UnitTests/main.cpp:47:10:   required from here
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:156:33: error: no type named ‘type’ in ‘struct BC::Tensor_Operations<BC::Matrix<float> >::dp_impl<BC::Matrix<float> >’
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:161:43: note: candidate: const BC::alternate_asterix_denoter<derived> BC::Tensor_Operations< <template-parameter-1-1> >::operator*() const [with derived = BC::Matrix<float>]
  const alternate_asterix_denoter<derived> operator * () const {
                                           ^~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:161:43: note:   candidate expects 0 arguments, 1 provided
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:166:35: note: candidate: template<class pDeriv> int BC::Tensor_Operations< <template-parameter-1-1> >::operator*(const BC::alternate_asterix_denoter<pDeriv>&) const [with pDeriv = pDeriv; derived = BC::Matrix<float>]
  typename impl<pDeriv, mul>::type operator *(const alternate_asterix_denoter<pDeriv>& param) const {
                                   ^~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:166:35: note:   template argument deduction/substitution failed:
../UnitTests/main.cpp:47:10: note:   ‘mat {aka BC::Matrix<float>}’ is not derived from ‘const BC::alternate_asterix_denoter<derived>’
  c = d * e;
          ^
../UnitTests/main.cpp:50:8: error: ‘using mat = class BC::Matrix<float> {aka class BC::Matrix<float>}’ has no member named ‘t’
  c = a.t() * b.t();
        ^
../UnitTests/main.cpp:50:16: error: ‘using mat = class BC::Matrix<float> {aka class BC::Matrix<float>}’ has no member named ‘t’
  c = a.t() * b.t();
                ^
../UnitTests/main.cpp:53:8: error: ‘using mat = class BC::Matrix<float> {aka class BC::Matrix<float>}’ has no member named ‘t’
  c = a.t() * e;
        ^
../UnitTests/main.cpp:56:12: error: ‘using mat = class BC::Matrix<float> {aka class BC::Matrix<float>}’ has no member named ‘t’
  c = d * b.t();
            ^
../UnitTests/main.cpp:59:8: error: no match for ‘operator*’ (operand types are ‘mat {aka BC::Matrix<float>}’ and ‘scal {aka BC::Scalar<float, BC::CPU>}’)
  c = d * scal(2) * e;
      ~~^~~~~~~~~
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:12:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:145:33: note: candidate: template<class pDeriv, class voider> typename BC::Tensor_Operations< <template-parameter-1-1> >::dp_impl<param_deriv>::type BC::Tensor_Operations< <template-parameter-1-1> >::operator*(const BC::Tensor_Operations<param_deriv>&) const [with pDeriv = pDeriv; voider = voider; derived = BC::Matrix<float>]
  typename dp_impl<pDeriv>::type operator *(const Tensor_Operations<pDeriv>& param) const {
                                 ^~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:145:33: note:   template argument deduction/substitution failed:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h: In substitution of ‘template<class pDeriv, class voider> typename BC::Tensor_Operations< <template-parameter-1-1> >::dp_impl<param_deriv>::type BC::Tensor_Operations< <template-parameter-1-1> >::operator*(const BC::Tensor_Operations<param_deriv>&) const [with pDeriv = BC::Scalar<float, BC::CPU>; voider = void]’:
../UnitTests/main.cpp:59:16:   required from here
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:145:33: error: no type named ‘type’ in ‘struct BC::Tensor_Operations<BC::Matrix<float> >::dp_impl<BC::Scalar<float, BC::CPU> >’
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:156:33: note: candidate: template<class pDeriv, class voider, int foo> typename BC::Tensor_Operations< <template-parameter-1-1> >::dp_impl<param_deriv>::type BC::Tensor_Operations< <template-parameter-1-1> >::operator*(const BC::Tensor_Operations<param_deriv>&) const [with pDeriv = pDeriv; voider = voider; int foo = foo; derived = BC::Matrix<float>]
  typename dp_impl<pDeriv>::type operator *(const Tensor_Operations<pDeriv>& param) const {
                                 ^~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:156:33: note:   template argument deduction/substitution failed:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:155:3: error: no type named ‘type’ in ‘struct std::enable_if<false, void>’
   class voider = typename std::enable_if<!dp_impl<pDeriv>::short_params && !dp_impl<pDeriv>::short_params>::type, int foo = 0>
   ^~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:161:43: note: candidate: const BC::alternate_asterix_denoter<derived> BC::Tensor_Operations< <template-parameter-1-1> >::operator*() const [with derived = BC::Matrix<float>]
  const alternate_asterix_denoter<derived> operator * () const {
                                           ^~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:161:43: note:   candidate expects 0 arguments, 1 provided
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:166:35: note: candidate: template<class pDeriv> int BC::Tensor_Operations< <template-parameter-1-1> >::operator*(const BC::alternate_asterix_denoter<pDeriv>&) const [with pDeriv = pDeriv; derived = BC::Matrix<float>]
  typename impl<pDeriv, mul>::type operator *(const alternate_asterix_denoter<pDeriv>& param) const {
                                   ^~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:166:35: note:   template argument deduction/substitution failed:
../UnitTests/main.cpp:59:16: note:   ‘scal {aka BC::Scalar<float, BC::CPU>}’ is not derived from ‘const BC::alternate_asterix_denoter<derived>’
  c = d * scal(2) * e;
                ^
../UnitTests/main.cpp:62:14: error: no match for ‘operator*’ (operand types are ‘scal {aka BC::Scalar<float, BC::CPU>}’ and ‘mat {aka BC::Matrix<float>}’)
  c = scal(2) * d * e;
      ~~~~~~~~^~~
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:12:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:145:33: note: candidate: template<class pDeriv, class voider> typename BC::Tensor_Operations< <template-parameter-1-1> >::dp_impl<param_deriv>::type BC::Tensor_Operations< <template-parameter-1-1> >::operator*(const BC::Tensor_Operations<param_deriv>&) const [with pDeriv = pDeriv; voider = voider; derived = BC::Scalar<float, BC::CPU>]
  typename dp_impl<pDeriv>::type operator *(const Tensor_Operations<pDeriv>& param) const {
                                 ^~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:145:33: note:   template argument deduction/substitution failed:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h: In substitution of ‘template<class pDeriv, class voider> typename BC::Tensor_Operations< <template-parameter-1-1> >::dp_impl<param_deriv>::type BC::Tensor_Operations< <template-parameter-1-1> >::operator*(const BC::Tensor_Operations<param_deriv>&) const [with pDeriv = BC::Matrix<float>; voider = void]’:
../UnitTests/main.cpp:62:16:   required from here
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:145:33: error: no type named ‘type’ in ‘struct BC::Tensor_Operations<BC::Scalar<float, BC::CPU> >::dp_impl<BC::Matrix<float> >’
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:156:33: note: candidate: template<class pDeriv, class voider, int foo> typename BC::Tensor_Operations< <template-parameter-1-1> >::dp_impl<param_deriv>::type BC::Tensor_Operations< <template-parameter-1-1> >::operator*(const BC::Tensor_Operations<param_deriv>&) const [with pDeriv = pDeriv; voider = voider; int foo = foo; derived = BC::Scalar<float, BC::CPU>]
  typename dp_impl<pDeriv>::type operator *(const Tensor_Operations<pDeriv>& param) const {
                                 ^~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:156:33: note:   template argument deduction/substitution failed:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:155:3: error: no type named ‘type’ in ‘struct std::enable_if<false, void>’
   class voider = typename std::enable_if<!dp_impl<pDeriv>::short_params && !dp_impl<pDeriv>::short_params>::type, int foo = 0>
   ^~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:161:43: note: candidate: const BC::alternate_asterix_denoter<derived> BC::Tensor_Operations< <template-parameter-1-1> >::operator*() const [with derived = BC::Scalar<float, BC::CPU>]
  const alternate_asterix_denoter<derived> operator * () const {
                                           ^~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:161:43: note:   candidate expects 0 arguments, 1 provided
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:166:35: note: candidate: template<class pDeriv> int BC::Tensor_Operations< <template-parameter-1-1> >::operator*(const BC::alternate_asterix_denoter<pDeriv>&) const [with pDeriv = pDeriv; derived = BC::Scalar<float, BC::CPU>]
  typename impl<pDeriv, mul>::type operator *(const alternate_asterix_denoter<pDeriv>& param) const {
                                   ^~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:166:35: note:   template argument deduction/substitution failed:
../UnitTests/main.cpp:62:16: note:   ‘mat {aka BC::Matrix<float>}’ is not derived from ‘const BC::alternate_asterix_denoter<derived>’
  c = scal(2) * d * e;
                ^
../UnitTests/main.cpp:64:8: error: no match for ‘operator*’ (operand types are ‘mat {aka BC::Matrix<float>}’ and ‘mat {aka BC::Matrix<float>}’)
  c = d * e * scal(2); ////This is the only version that is not accounted for (it is also the least common notation)
      ~~^~~
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:12:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:145:33: note: candidate: template<class pDeriv, class voider> typename BC::Tensor_Operations< <template-parameter-1-1> >::dp_impl<param_deriv>::type BC::Tensor_Operations< <template-parameter-1-1> >::operator*(const BC::Tensor_Operations<param_deriv>&) const [with pDeriv = pDeriv; voider = voider; derived = BC::Matrix<float>]
  typename dp_impl<pDeriv>::type operator *(const Tensor_Operations<pDeriv>& param) const {
                                 ^~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:145:33: note:   template argument deduction/substitution failed:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:144:25: error: no type named ‘type’ in ‘struct std::enable_if<false, void>’
  template<class pDeriv, class voider = typename std::enable_if<dp_impl<pDeriv>::short_params || dp_impl<pDeriv>::short_params>::type>
                         ^~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:156:33: note: candidate: template<class pDeriv, class voider, int foo> typename BC::Tensor_Operations< <template-parameter-1-1> >::dp_impl<param_deriv>::type BC::Tensor_Operations< <template-parameter-1-1> >::operator*(const BC::Tensor_Operations<param_deriv>&) const [with pDeriv = pDeriv; voider = voider; int foo = foo; derived = BC::Matrix<float>]
  typename dp_impl<pDeriv>::type operator *(const Tensor_Operations<pDeriv>& param) const {
                                 ^~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:156:33: note:   template argument deduction/substitution failed:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h: In substitution of ‘template<class pDeriv, class voider, int foo> typename BC::Tensor_Operations< <template-parameter-1-1> >::dp_impl<param_deriv>::type BC::Tensor_Operations< <template-parameter-1-1> >::operator*(const BC::Tensor_Operations<param_deriv>&) const [with pDeriv = BC::Matrix<float>; voider = void; int foo = 0]’:
../UnitTests/main.cpp:64:10:   required from here
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:156:33: error: no type named ‘type’ in ‘struct BC::Tensor_Operations<BC::Matrix<float> >::dp_impl<BC::Matrix<float> >’
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:161:43: note: candidate: const BC::alternate_asterix_denoter<derived> BC::Tensor_Operations< <template-parameter-1-1> >::operator*() const [with derived = BC::Matrix<float>]
  const alternate_asterix_denoter<derived> operator * () const {
                                           ^~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:161:43: note:   candidate expects 0 arguments, 1 provided
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:166:35: note: candidate: template<class pDeriv> int BC::Tensor_Operations< <template-parameter-1-1> >::operator*(const BC::alternate_asterix_denoter<pDeriv>&) const [with pDeriv = pDeriv; derived = BC::Matrix<float>]
  typename impl<pDeriv, mul>::type operator *(const alternate_asterix_denoter<pDeriv>& param) const {
                                   ^~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:166:35: note:   template argument deduction/substitution failed:
../UnitTests/main.cpp:64:10: note:   ‘mat {aka BC::Matrix<float>}’ is not derived from ‘const BC::alternate_asterix_denoter<derived>’
  c = d * e * scal(2); ////This is the only version that is not accounted for (it is also the least common notation)
          ^
../UnitTests/main.cpp:66:8: error: no match for ‘operator*’ (operand types are ‘mat {aka BC::Matrix<float>}’ and ‘scal {aka BC::Scalar<float, BC::CPU>}’)
  c = d * scal(2) * e;
      ~~^~~~~~~~~
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:12:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:145:33: note: candidate: template<class pDeriv, class voider> typename BC::Tensor_Operations< <template-parameter-1-1> >::dp_impl<param_deriv>::type BC::Tensor_Operations< <template-parameter-1-1> >::operator*(const BC::Tensor_Operations<param_deriv>&) const [with pDeriv = pDeriv; voider = voider; derived = BC::Matrix<float>]
  typename dp_impl<pDeriv>::type operator *(const Tensor_Operations<pDeriv>& param) const {
                                 ^~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:145:33: note:   template argument deduction/substitution failed:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h: In substitution of ‘template<class pDeriv, class voider> typename BC::Tensor_Operations< <template-parameter-1-1> >::dp_impl<param_deriv>::type BC::Tensor_Operations< <template-parameter-1-1> >::operator*(const BC::Tensor_Operations<param_deriv>&) const [with pDeriv = BC::Scalar<float, BC::CPU>; voider = void]’:
../UnitTests/main.cpp:66:16:   required from here
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:145:33: error: no type named ‘type’ in ‘struct BC::Tensor_Operations<BC::Matrix<float> >::dp_impl<BC::Scalar<float, BC::CPU> >’
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:156:33: note: candidate: template<class pDeriv, class voider, int foo> typename BC::Tensor_Operations< <template-parameter-1-1> >::dp_impl<param_deriv>::type BC::Tensor_Operations< <template-parameter-1-1> >::operator*(const BC::Tensor_Operations<param_deriv>&) const [with pDeriv = pDeriv; voider = voider; int foo = foo; derived = BC::Matrix<float>]
  typename dp_impl<pDeriv>::type operator *(const Tensor_Operations<pDeriv>& param) const {
                                 ^~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:156:33: note:   template argument deduction/substitution failed:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:155:3: error: no type named ‘type’ in ‘struct std::enable_if<false, void>’
   class voider = typename std::enable_if<!dp_impl<pDeriv>::short_params && !dp_impl<pDeriv>::short_params>::type, int foo = 0>
   ^~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:161:43: note: candidate: const BC::alternate_asterix_denoter<derived> BC::Tensor_Operations< <template-parameter-1-1> >::operator*() const [with derived = BC::Matrix<float>]
  const alternate_asterix_denoter<derived> operator * () const {
                                           ^~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:161:43: note:   candidate expects 0 arguments, 1 provided
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:166:35: note: candidate: template<class pDeriv> int BC::Tensor_Operations< <template-parameter-1-1> >::operator*(const BC::alternate_asterix_denoter<pDeriv>&) const [with pDeriv = pDeriv; derived = BC::Matrix<float>]
  typename impl<pDeriv, mul>::type operator *(const alternate_asterix_denoter<pDeriv>& param) const {
                                   ^~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:166:35: note:   template argument deduction/substitution failed:
../UnitTests/main.cpp:66:16: note:   ‘scal {aka BC::Scalar<float, BC::CPU>}’ is not derived from ‘const BC::alternate_asterix_denoter<derived>’
  c = d * scal(2) * e;
                ^
../UnitTests/main.cpp:75:10: error: request for member ‘eval’ in ‘((BC::Tensor_Operations<BC::Matrix<float> >*)(& c))->BC::Tensor_Operations< <template-parameter-1-1> >::operator+<BC::Matrix<float> >(c)’, which is of non-class type ‘int’
  (c + c).eval();
          ^~~~
../UnitTests/main.cpp:76:8: error: ‘using mat = class BC::Matrix<float> {aka class BC::Matrix<float>}’ has no member named ‘t’
  c = a.t() * b.t();
        ^
../UnitTests/main.cpp:76:16: error: ‘using mat = class BC::Matrix<float> {aka class BC::Matrix<float>}’ has no member named ‘t’
  c = a.t() * b.t();
                ^
../UnitTests/main.cpp:80:8: error: ‘using mat = class BC::Matrix<float> {aka class BC::Matrix<float>}’ has no member named ‘t’
  c = a.t() * A * (b.t() * A);
        ^
../UnitTests/main.cpp:80:21: error: ‘using mat = class BC::Matrix<float> {aka class BC::Matrix<float>}’ has no member named ‘t’
  c = a.t() * A * (b.t() * A);
                     ^
../UnitTests/main.cpp:94:14: error: invalid operands of types ‘void’ and ‘void’ to binary ‘operator+’
  d[1] = d[1] + d[1];
         ~~~~~^~~~~~
../UnitTests/main.cpp:99:8: error: invalid types ‘void[int]’ for array subscript
  d[1][1] = d[1][1] + d[1][1];
        ^
../UnitTests/main.cpp:99:18: error: invalid types ‘void[int]’ for array subscript
  d[1][1] = d[1][1] + d[1][1];
                  ^
../UnitTests/main.cpp:99:28: error: invalid types ‘void[int]’ for array subscript
  d[1][1] = d[1][1] + d[1][1];
                            ^
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:13:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Utility.h: In instantiation of ‘void BC::Tensor_Utility<deriv, typename std::enable_if<(isPrim<typename BC::determine_functor< <template-parameter-1-1> >::fscal> || BC::MTF::isCore<typename BC::determine_functor< <template-parameter-1-1> >::type>::conditional), void>::type>::read(std::ifstream&, bool, bool) [with deriv = BC::Matrix<double>; typename std::enable_if<(isPrim<typename BC::determine_functor< <template-parameter-1-1> >::fscal> || BC::MTF::isCore<typename BC::determine_functor< <template-parameter-1-1> >::type>::conditional), void>::type = void; std::ifstream = std::basic_ifstream<char>]’:
../UnitTests/main.cpp:113:15:   required from here
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Utility.h:132:22: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
    for (int i = 0; i < dims.size(); ++i) {
                    ~~^~~~~~~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Utility.h:138:92: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
    MATHLIB::HostToDevice(asDerived().data().core(), &data[data[0] + 1], asDerived().size() > data.size() ? data.size() : asDerived().size());
                                                                                             
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:13:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Utility.h:140:86: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
    MATHLIB::HostToDevice(asDerived().data().core(), &data[0],     asDerived().size() > data.size() ? data.size() : asDerived().size());
                                                                                       
In file included from ../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Core_Slice.h:17:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Core.h:13,
                 from ../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h:12,
                 from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:15,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Core_Scalar.h: In instantiation of ‘BC::Tensor_Scalar<PARENT>::Tensor_Scalar(BC::Tensor_Scalar<PARENT>::scalar*, const PARENT&) [with PARENT = BC::Tensor_Core<BC::Matrix<float> >; BC::Tensor_Scalar<PARENT>::scalar = float]’:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h:33:63:   required from ‘BC::TensorInitializer<derived, expression_tensor>::TensorInitializer(const params& ...) [with params = {float*, BC::Tensor_Core<BC::Matrix<float, BC::CPU> >}; derived = BC::Scalar<BC::Tensor_Scalar<BC::Tensor_Core<BC::Matrix<float> > >, BC::CPU>; expression_tensor = void]’
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:50:51:   required from ‘BC::TensorBase<derived>::TensorBase(const params& ...) [with params = {float*, BC::Tensor_Core<BC::Matrix<float, BC::CPU> >}; derived = BC::Scalar<BC::Tensor_Scalar<BC::Tensor_Core<BC::Matrix<float> > >, BC::CPU>]’
../UnitTests/../BC_Internals/BC_Core/Scalar.h:61:97:   required from ‘BC::Scalar< <template-parameter-1-1>, ML>::Scalar(const var1&, const var2&, const params& ...) [with var1 = float*; var2 = BC::Tensor_Core<BC::Matrix<float> >; params = {}; T = BC::Tensor_Scalar<BC::Tensor_Core<BC::Matrix<float> > >; Mathlib = BC::CPU]’
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:92:19:   required from ‘auto BC::TensorBase<derived>::getScalar(int) [with derived = BC::Matrix<float>]’
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:96:52:   required from ‘auto BC::TensorBase<derived>::operator()(int) [with derived = BC::Matrix<float>]’
../UnitTests/main.cpp:33:6:   required from here
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Core_Scalar.h:36:10: warning: ‘BC::Tensor_Scalar<BC::Tensor_Core<BC::Matrix<float> > >::array_slice’ will be initialized after [-Wreorder]
  scalar* array_slice;
          ^~~~~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Core_Scalar.h:35:16: warning:   ‘const BC::Tensor_Core<BC::Matrix<float> >& BC::Tensor_Scalar<BC::Tensor_Core<BC::Matrix<float> > >::parent’ [-Wreorder]
  const PARENT& parent;
                ^~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Core_Scalar.h:41:2: warning:   when initialized here [-Wreorder]
  Tensor_Scalar(scalar* array, const PARENT& parent_) : array_slice(array), parent(parent_) {}
  ^~~~~~~~~~~~~
In file included from ../UnitTests/../BC_Internals/BC_MathLibraries/Mathematics_CPU.h:15:0,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:32,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_MathLibraries/BC_PrintFunctions.h: In instantiation of ‘void BC::printHelper(const T&, int_ranks, int, std::__cxx11::string, int) [with T = const float*; int_ranks = int*; std::__cxx11::string = std::__cxx11::basic_string<char>]’:
../UnitTests/../BC_Internals/BC_MathLibraries/BC_PrintFunctions.h:102:13:   required from ‘void BC::print(const T&, RANKS, int, int) [with T = const float*; RANKS = int*]’
../UnitTests/../BC_Internals/BC_MathLibraries/Mathematics_CPU.h:98:12:   required from ‘static void BC::CPU::print(T, RANKS, int, int) [with T = const float*; RANKS = int*]’
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Utility.h:75:17:   required from ‘void BC::Tensor_Utility<deriv, typename std::enable_if<(isPrim<typename BC::determine_functor< <template-parameter-1-1> >::fscal> || BC::MTF::isCore<typename BC::determine_functor< <template-parameter-1-1> >::type>::conditional), void>::type>::print() const [with deriv = BC::Matrix<float>; typename std::enable_if<(isPrim<typename BC::determine_functor< <template-parameter-1-1> >::fscal> || BC::MTF::isCore<typename BC::determine_functor< <template-parameter-1-1> >::type>::conditional), void>::type = void]’
../UnitTests/main.cpp:37:10:   required from here
../UnitTests/../BC_Internals/BC_MathLibraries/BC_PrintFunctions.h:43:38: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
     str = str.substr(0, str.length() < printSpace ? str.length() : printSpace);
                                       
../UnitTests/../BC_Internals/BC_MathLibraries/BC_PrintFunctions.h:46:22: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
     if (str.length() < printSpace)
                       
../UnitTests/../BC_Internals/BC_MathLibraries/BC_PrintFunctions.h:67:37: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
    str = str.substr(0, str.length() < printSpace ? str.length() : printSpace);
                                      
../UnitTests/../BC_Internals/BC_MathLibraries/BC_PrintFunctions.h:70:21: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
    if (str.length() < printSpace)
                      
../UnitTests/../BC_Internals/BC_MathLibraries/BC_PrintFunctions.h: In instantiation of ‘void BC::printHelper(const T&, int_ranks, int, std::__cxx11::string, int) [with T = const double*; int_ranks = int*; std::__cxx11::string = std::__cxx11::basic_string<char>]’:
../UnitTests/../BC_Internals/BC_MathLibraries/BC_PrintFunctions.h:102:13:   required from ‘void BC::print(const T&, RANKS, int, int) [with T = const double*; RANKS = int*]’
../UnitTests/../BC_Internals/BC_MathLibraries/Mathematics_CPU.h:98:12:   required from ‘static void BC::CPU::print(T, RANKS, int, int) [with T = const double*; RANKS = int*]’
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Utility.h:75:17:   required from ‘void BC::Tensor_Utility<deriv, typename std::enable_if<(isPrim<typename BC::determine_functor< <template-parameter-1-1> >::fscal> || BC::MTF::isCore<typename BC::determine_functor< <template-parameter-1-1> >::type>::conditional), void>::type>::print() const [with deriv = BC::Matrix<double>; typename std::enable_if<(isPrim<typename BC::determine_functor< <template-parameter-1-1> >::fscal> || BC::MTF::isCore<typename BC::determine_functor< <template-parameter-1-1> >::type>::conditional), void>::type = void]’
../UnitTests/main.cpp:114:14:   required from here
../UnitTests/../BC_Internals/BC_MathLibraries/BC_PrintFunctions.h:43:38: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
     str = str.substr(0, str.length() < printSpace ? str.length() : printSpace);
                                       
../UnitTests/../BC_Internals/BC_MathLibraries/BC_PrintFunctions.h:46:22: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
     if (str.length() < printSpace)
                       
../UnitTests/../BC_Internals/BC_MathLibraries/BC_PrintFunctions.h:67:37: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
    str = str.substr(0, str.length() < printSpace ? str.length() : printSpace);
                                      
../UnitTests/../BC_Internals/BC_MathLibraries/BC_PrintFunctions.h:70:21: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
    if (str.length() < printSpace)
                      
make: *** [UnitTests/main.o] Error 1
UnitTests/subdir.mk:18: recipe for target 'UnitTests/main.o' failed
17:10:44 **** Incremental Build of configuration Debug for project BlackCat_LibraryCPU ****
make all 
Building file: ../UnitTests/main.cpp
Invoking: GCC C++ Compiler
g++ -O0 -g3 -Wall -c -fmessage-length=0 -MMD -MP -MF"UnitTests/main.d" -MT"UnitTests/main.o" -o "UnitTests/main.o" "../UnitTests/main.cpp"
In file included from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:32:0,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_MathLibraries/Mathematics_CPU.h:74:0: warning: ignoring #pragma omp parallel [-Wunknown-pragmas]
 #pragma omp parallel for
 
../UnitTests/../BC_Internals/BC_MathLibraries/Mathematics_CPU.h:78:0: warning: ignoring #pragma omp barrier [-Wunknown-pragmas]
 #pragma omp barrier
 
../UnitTests/../BC_Internals/BC_MathLibraries/Mathematics_CPU.h:88:0: warning: ignoring #pragma omp parallel [-Wunknown-pragmas]
 #pragma omp parallel for
 
../UnitTests/../BC_Internals/BC_MathLibraries/Mathematics_CPU.h:92:0: warning: ignoring #pragma omp barrier [-Wunknown-pragmas]
 #pragma omp barrier
 
In file included from ../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Core_Slice.h:17:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Core.h:13,
                 from ../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h:12,
                 from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:15,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Core_Scalar.h:22:0: warning: "__BCinline__" redefined
 #define __BCinline__
 
In file included from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:29:0,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Expressions/BlackCat_Internal_Definitions.h:25:0: note: this is the location of the previous definition
 #define __BCinline__ __BC_gcpu__ __attribute__((always_inline))
 
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:12:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:60:45: error: ‘binary_expression_scalar_LR’ was not declared in this scope
       typename MTF::expression_substitution<binary_expression_scalar_LR<scalar_type, functor, functor_type, param_functor_type>, derived>::type,
                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:60:127: error: wrong number of template arguments (4, should be 2)
       typename MTF::expression_substitution<binary_expression_scalar_LR<scalar_type, functor, functor_type, param_functor_type>, derived>::type,
                                                                                                                               ^
In file included from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:47:0,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_MetaTemplateFunctions/Adhoc.h:18:34: note: provided for ‘template<class, class> struct BC::MTF::expression_substitution’
   template<class, class>  struct expression_substitution;
                                  ^~~~~~~~~~~~~~~~~~~~~~~
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:12:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:60:137: error: template argument 2 is invalid
       typename MTF::expression_substitution<binary_expression_scalar_LR<scalar_type, functor, functor_type, param_functor_type>, derived>::type,
                                                                                                                                         ^
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:60:144: error: expected ‘(’ before ‘,’ token
       typename MTF::expression_substitution<binary_expression_scalar_LR<scalar_type, functor, functor_type, param_functor_type>, derived>::type,
                                                                                                                                                ^
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:62:46: error: ‘binary_expression_scalar_L’ was not declared in this scope
        typename MTF::expression_substitution<binary_expression_scalar_L<scalar_type, functor, functor_type, param_functor_type>, param_deriv    >::type,
                                              ^~~~~~~~~~~~~~~~~~~~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:62:127: error: wrong number of template arguments (4, should be 2)
        typename MTF::expression_substitution<binary_expression_scalar_L<scalar_type, functor, functor_type, param_functor_type>, param_deriv    >::type,
                                                                                                                               ^
In file included from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:47:0,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_MetaTemplateFunctions/Adhoc.h:18:34: note: provided for ‘template<class, class> struct BC::MTF::expression_substitution’
   template<class, class>  struct expression_substitution;
                                  ^~~~~~~~~~~~~~~~~~~~~~~
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:12:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:62:145: error: template argument 2 is invalid
        typename MTF::expression_substitution<binary_expression_scalar_L<scalar_type, functor, functor_type, param_functor_type>, param_deriv    >::type,
                                                                                                                                                 ^
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:62:152: error: expected ‘(’ before ‘,’ token
        typename MTF::expression_substitution<binary_expression_scalar_L<scalar_type, functor, functor_type, param_functor_type>, param_deriv    >::type,
                                                                                                                                                        ^
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:63:46: error: ‘binary_expression_scalar_R’ was not declared in this scope
        typename MTF::expression_substitution<binary_expression_scalar_R<scalar_type, functor, functor_type, param_functor_type>, derived>::type
                                              ^~~~~~~~~~~~~~~~~~~~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:63:127: error: wrong number of template arguments (4, should be 2)
        typename MTF::expression_substitution<binary_expression_scalar_R<scalar_type, functor, functor_type, param_functor_type>, derived>::type
                                                                                                                               ^
In file included from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:47:0,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_MetaTemplateFunctions/Adhoc.h:18:34: note: provided for ‘template<class, class> struct BC::MTF::expression_substitution’
   template<class, class>  struct expression_substitution;
                                  ^~~~~~~~~~~~~~~~~~~~~~~
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:12:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:63:128: error: expected identifier before ‘,’ token
        typename MTF::expression_substitution<binary_expression_scalar_R<scalar_type, functor, functor_type, param_functor_type>, derived>::type
                                                                                                                                ^
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:63:128: error: expected ‘(’ before ‘,’ token
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:63:137: error: wrong number of template arguments (6, should be 3)
        typename MTF::expression_substitution<binary_expression_scalar_R<scalar_type, functor, functor_type, param_functor_type>, derived>::type
                                                                                                                                         ^
In file included from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:46:0,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_MetaTemplateFunctions/Simple.h:19:10: note: provided for ‘template<bool iff, class THEN, class ELSE> struct BC::MTF::IF_ELSE’
   struct IF_ELSE {
          ^~~~~~~
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:12:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:92:49: error: ‘binary_expression_scalar_L’ was not declared in this scope
           typename MTF::expression_substitution<binary_expression_scalar_L<scalar_type, mul, functor_type, param_functor_type>, param_deriv>::type,
                                                 ^~~~~~~~~~~~~~~~~~~~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:92:89: error: ‘mul’ was not declared in this scope
           typename MTF::expression_substitution<binary_expression_scalar_L<scalar_type, mul, functor_type, param_functor_type>, param_deriv>::type,
                                                                                         ^~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:92:126: error: wrong number of template arguments (4, should be 2)
           typename MTF::expression_substitution<binary_expression_scalar_L<scalar_type, mul, functor_type, param_functor_type>, param_deriv>::type,
                                                                                                                              ^
In file included from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:47:0,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_MetaTemplateFunctions/Adhoc.h:18:34: note: provided for ‘template<class, class> struct BC::MTF::expression_substitution’
   template<class, class>  struct expression_substitution;
                                  ^~~~~~~~~~~~~~~~~~~~~~~
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:12:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:92:140: error: template argument 2 is invalid
           typename MTF::expression_substitution<binary_expression_scalar_L<scalar_type, mul, functor_type, param_functor_type>, param_deriv>::type,
                                                                                                                                            ^
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:92:147: error: expected ‘(’ before ‘,’ token
           typename MTF::expression_substitution<binary_expression_scalar_L<scalar_type, mul, functor_type, param_functor_type>, param_deriv>::type,
                                                                                                                                                   ^
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:93:49: error: ‘binary_expression_scalar_R’ was not declared in this scope
           typename MTF::expression_substitution<binary_expression_scalar_R<scalar_type, mul, functor_type, param_functor_type>, derived  >::type
                                                 ^~~~~~~~~~~~~~~~~~~~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:93:89: error: ‘mul’ was not declared in this scope
           typename MTF::expression_substitution<binary_expression_scalar_R<scalar_type, mul, functor_type, param_functor_type>, derived  >::type
                                                                                         ^~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:93:126: error: wrong number of template arguments (4, should be 2)
           typename MTF::expression_substitution<binary_expression_scalar_R<scalar_type, mul, functor_type, param_functor_type>, derived  >::type
                                                                                                                              ^
In file included from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:47:0,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_MetaTemplateFunctions/Adhoc.h:18:34: note: provided for ‘template<class, class> struct BC::MTF::expression_substitution’
   template<class, class>  struct expression_substitution;
                                  ^~~~~~~~~~~~~~~~~~~~~~~
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:12:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:93:127: error: expected identifier before ‘,’ token
           typename MTF::expression_substitution<binary_expression_scalar_R<scalar_type, mul, functor_type, param_functor_type>, derived  >::type
                                                                                                                               ^
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:93:127: error: expected ‘(’ before ‘,’ token
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:93:138: error: wrong number of template arguments (4, should be 3)
           typename MTF::expression_substitution<binary_expression_scalar_R<scalar_type, mul, functor_type, param_functor_type>, derived  >::type
                                                                                                                                          ^
In file included from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:46:0,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_MetaTemplateFunctions/Simple.h:19:10: note: provided for ‘template<bool iff, class THEN, class ELSE> struct BC::MTF::IF_ELSE’
   struct IF_ELSE {
          ^~~~~~~
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:12:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:98:47: error: ‘binary_expression_dotproduct’ was not declared in this scope
         typename MTF::expression_substitution<binary_expression_dotproduct<scalar_type, functor_type, param_functor_type, math_library>,param_deriv>::type, void>::type;
                                               ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:98:135: error: wrong number of template arguments (4, should be 2)
         typename MTF::expression_substitution<binary_expression_dotproduct<scalar_type, functor_type, param_functor_type, math_library>,param_deriv>::type, void>::type;
                                                                                                                                       ^
In file included from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:47:0,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_MetaTemplateFunctions/Adhoc.h:18:34: note: provided for ‘template<class, class> struct BC::MTF::expression_substitution’
   template<class, class>  struct expression_substitution;
                                  ^~~~~~~~~~~~~~~~~~~~~~~
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:12:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:98:148: error: template argument 2 is invalid
         typename MTF::expression_substitution<binary_expression_dotproduct<scalar_type, functor_type, param_functor_type, math_library>,param_deriv>::type, void>::type;
                                                                                                                                                    ^
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:98:149: error: expected identifier before ‘::’ token
         typename MTF::expression_substitution<binary_expression_dotproduct<scalar_type, functor_type, param_functor_type, math_library>,param_deriv>::type, void>::type;
                                                                                                                                                     ^~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:101:47: error: ‘binary_expression_dotproduct’ was not declared in this scope
         typename MTF::expression_substitution<binary_expression_dotproduct<scalar_type, functor_type, param_functor_type, math_library>,param_deriv>::type, void>::type;
                                               ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:101:135: error: wrong number of template arguments (4, should be 2)
         typename MTF::expression_substitution<binary_expression_dotproduct<scalar_type, functor_type, param_functor_type, math_library>,param_deriv>::type, void>::type;
                                                                                                                                       ^
In file included from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:47:0,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_MetaTemplateFunctions/Adhoc.h:18:34: note: provided for ‘template<class, class> struct BC::MTF::expression_substitution’
   template<class, class>  struct expression_substitution;
                                  ^~~~~~~~~~~~~~~~~~~~~~~
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:12:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:101:148: error: template argument 2 is invalid
         typename MTF::expression_substitution<binary_expression_dotproduct<scalar_type, functor_type, param_functor_type, math_library>,param_deriv>::type, void>::type;
                                                                                                                                                    ^
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:101:149: error: expected identifier before ‘::’ token
         typename MTF::expression_substitution<binary_expression_dotproduct<scalar_type, functor_type, param_functor_type, math_library>,param_deriv>::type, void>::type;
                                                                                                                                                     ^~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:104:47: error: ‘binary_expression_dotproduct’ was not declared in this scope
         typename MTF::expression_substitution<binary_expression_dotproduct<scalar_type, functor_type, param_functor_type, math_library>,
                                               ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:104:135: error: wrong number of template arguments (4, should be 2)
         typename MTF::expression_substitution<binary_expression_dotproduct<scalar_type, functor_type, param_functor_type, math_library>,
                                                                                                                                       ^
In file included from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:47:0,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_MetaTemplateFunctions/Adhoc.h:18:34: note: provided for ‘template<class, class> struct BC::MTF::expression_substitution’
   template<class, class>  struct expression_substitution;
                                  ^~~~~~~~~~~~~~~~~~~~~~~
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:12:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:105:42: error: template argument 2 is invalid
         Matrix<functor_type, math_library>>::type, void>::type;
                                          ^~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:105:44: error: expected identifier before ‘::’ token
         Matrix<functor_type, math_library>>::type, void>::type;
                                            ^~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:107:62: error: ‘vecType’ was not declared in this scope
   using type    =  typename MTF::IF_ELSE<evaluate_to_vector, vecType,
                                                              ^~~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:108:52: error: ‘matType’ was not declared in this scope
          typename MTF::IF_ELSE<evaluate_to_matrix, matType,
                                                    ^~~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:109:53: error: ‘outerType’ was not declared in this scope
           typename MTF::IF_ELSE<evaluate_to_mat_vv, outerType,
                                                     ^~~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:110:56: error: ‘mulType’ was not declared in this scope
            typename MTF::IF_ELSE<evaluate_to_dominant, mulType, void
                                                        ^~~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:111:12: error: template argument 2 is invalid
            >::type
            ^
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:112:11: error: template argument 2 is invalid
           >::type
           ^
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:112:11: error: template argument 3 is invalid
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:113:10: error: template argument 2 is invalid
          >::type
          ^
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:113:10: error: template argument 3 is invalid
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:114:9: error: template argument 2 is invalid
         >::type;
         ^
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:114:9: error: template argument 3 is invalid
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:117:27: error: ‘type’ does not name a type
   using expression_type = type;
                           ^~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:170:24: error: ‘mul’ was not declared in this scope
  typename impl<pDeriv, mul>::type operator *(const alternate_asterix_denoter<pDeriv>& param) const {
                        ^~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:170:27: error: template argument 2 is invalid
  typename impl<pDeriv, mul>::type operator *(const alternate_asterix_denoter<pDeriv>& param) const {
                           ^
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:176:24: error: ‘assign’ was not declared in this scope
  typename impl<pDeriv, assign>::type operator ==(const Tensor_Operations<pDeriv>& param) {
                        ^~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:176:30: error: template argument 2 is invalid
  typename impl<pDeriv, assign>::type operator ==(const Tensor_Operations<pDeriv>& param) {
                              ^
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:182:24: error: ‘combine’ was not declared in this scope
  typename impl<pDeriv, combine>::type operator &&(const Tensor_Operations<pDeriv>& param) {
                        ^~~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:182:31: error: template argument 2 is invalid
  typename impl<pDeriv, combine>::type operator &&(const Tensor_Operations<pDeriv>& param) {
                               ^
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:189:24: error: ‘add’ was not declared in this scope
  typename impl<pDeriv, add>::type operator +(const Tensor_Operations<pDeriv>& param) const {
                        ^~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:189:27: error: template argument 2 is invalid
  typename impl<pDeriv, add>::type operator +(const Tensor_Operations<pDeriv>& param) const {
                           ^
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:194:24: error: ‘sub’ was not declared in this scope
  typename impl<pDeriv, sub>::type operator -(const Tensor_Operations<pDeriv>& param) const {
                        ^~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:194:27: error: template argument 2 is invalid
  typename impl<pDeriv, sub>::type operator -(const Tensor_Operations<pDeriv>& param) const {
                           ^
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:199:27: error: type/value mismatch at argument 2 in template parameter list for ‘template<class derived> template<class param_deriv, class functor> struct BC::Tensor_Operations< <template-parameter-1-1> >::impl’
  typename impl<pDeriv, div>::type operator /(const Tensor_Operations<pDeriv>& param) const {
                           ^
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:199:27: note:   expected a type, got ‘div’
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:204:24: error: ‘mul’ was not declared in this scope
  typename impl<pDeriv, mul>::type operator %(const Tensor_Operations<pDeriv>& param) const {
                        ^~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:204:27: error: template argument 2 is invalid
  typename impl<pDeriv, mul>::type operator %(const Tensor_Operations<pDeriv>& param) const {
                           ^
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h: In member function ‘int BC::Tensor_Operations< <template-parameter-1-1> >::operator*(const BC::alternate_asterix_denoter<pDeriv>&) const’:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:172:32: error: ‘mul’ was not declared in this scope
   return typename impl<pDeriv, mul>::type(this->data(), param.get().data());
                                ^~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:172:35: error: template argument 2 is invalid
   return typename impl<pDeriv, mul>::type(this->data(), param.get().data());
                                   ^
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h: In member function ‘int BC::Tensor_Operations< <template-parameter-1-1> >::operator==(const BC::Tensor_Operations<param_deriv>&)’:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:178:32: error: ‘assign’ was not declared in this scope
   return typename impl<pDeriv, assign>::type(this->data(), param.data());
                                ^~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:178:38: error: template argument 2 is invalid
   return typename impl<pDeriv, assign>::type(this->data(), param.data());
                                      ^
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h: In member function ‘int BC::Tensor_Operations< <template-parameter-1-1> >::operator&&(const BC::Tensor_Operations<param_deriv>&)’:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:184:32: error: ‘combine’ was not declared in this scope
   return typename impl<pDeriv, combine>::type(this->data(), param.data());
                                ^~~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:184:39: error: template argument 2 is invalid
   return typename impl<pDeriv, combine>::type(this->data(), param.data());
                                       ^
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h: In member function ‘int BC::Tensor_Operations< <template-parameter-1-1> >::operator+(const BC::Tensor_Operations<param_deriv>&) const’:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:191:32: error: ‘add’ was not declared in this scope
   return typename impl<pDeriv, add>::type(this->data(), param.data());
                                ^~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:191:35: error: template argument 2 is invalid
   return typename impl<pDeriv, add>::type(this->data(), param.data());
                                   ^
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h: In member function ‘int BC::Tensor_Operations< <template-parameter-1-1> >::operator-(const BC::Tensor_Operations<param_deriv>&) const’:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:196:32: error: ‘sub’ was not declared in this scope
   return typename impl<pDeriv, sub>::type(this->data(), param.data());
                                ^~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:196:35: error: template argument 2 is invalid
   return typename impl<pDeriv, sub>::type(this->data(), param.data());
                                   ^
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h: In member function ‘int BC::Tensor_Operations< <template-parameter-1-1> >::operator/(const BC::Tensor_Operations<param_deriv>&) const’:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:201:35: error: type/value mismatch at argument 2 in template parameter list for ‘template<class derived> template<class param_deriv, class functor> struct BC::Tensor_Operations< <template-parameter-1-1> >::impl’
   return typename impl<pDeriv, div>::type(this->data(), param.data());
                                   ^
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:201:35: note:   expected a type, got ‘div’
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h: In member function ‘int BC::Tensor_Operations< <template-parameter-1-1> >::operator%(const BC::Tensor_Operations<param_deriv>&) const’:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:206:32: error: ‘mul’ was not declared in this scope
   return typename impl<pDeriv, mul>::type(this->data(), param.data());
                                ^~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:206:35: error: template argument 2 is invalid
   return typename impl<pDeriv, mul>::type(this->data(), param.data());
                                   ^
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h: In member function ‘derived& BC::Tensor_Operations< <template-parameter-1-1> >::operator+=(const BC::Tensor_Operations<param_deriv>&)’:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:218:40: error: ‘add’ was not declared in this scope
   return *this = typename impl<pDeriv, add>::type(this->data(), param.data());
                                        ^~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:218:43: error: template argument 2 is invalid
   return *this = typename impl<pDeriv, add>::type(this->data(), param.data());
                                           ^
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h: In member function ‘derived& BC::Tensor_Operations< <template-parameter-1-1> >::operator-=(const BC::Tensor_Operations<param_deriv>&)’:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:223:40: error: ‘sub’ was not declared in this scope
   return *this = typename impl<pDeriv, sub>::type(this->data(), param.data());
                                        ^~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:223:43: error: template argument 2 is invalid
   return *this = typename impl<pDeriv, sub>::type(this->data(), param.data());
                                           ^
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h: In member function ‘derived& BC::Tensor_Operations< <template-parameter-1-1> >::operator/=(const BC::Tensor_Operations<param_deriv>&)’:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:228:43: error: type/value mismatch at argument 2 in template parameter list for ‘template<class derived> template<class param_deriv, class functor> struct BC::Tensor_Operations< <template-parameter-1-1> >::impl’
   return *this = typename impl<pDeriv, div>::type(this->data(), param.data());
                                           ^
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:228:43: note:   expected a type, got ‘div’
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h: In member function ‘derived& BC::Tensor_Operations< <template-parameter-1-1> >::operator%=(const BC::Tensor_Operations<param_deriv>&)’:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:233:40: error: ‘mul’ was not declared in this scope
   return *this = typename impl<pDeriv, mul>::type(this->data(), param.data());
                                        ^~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:233:43: error: template argument 2 is invalid
   return *this = typename impl<pDeriv, mul>::type(this->data(), param.data());
                                           ^
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:13:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Utility.h: In member function ‘auto BC::Tensor_Utility<deriv, <template-parameter-1-2> >::eval() const’:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Utility.h:34:45: error: expected ‘(’ before ‘<’ token
   return typename MTF::shell_of<deriv>::type<_scalar<deriv>, _mathlib<deriv>>(this->asDerived());
                                             ^
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Utility.h:34:60: error: expected primary-expression before ‘,’ token
   return typename MTF::shell_of<deriv>::type<_scalar<deriv>, _mathlib<deriv>>(this->asDerived());
                                                            ^
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Utility.h:34:76: error: expected primary-expression before ‘>’ token
   return typename MTF::shell_of<deriv>::type<_scalar<deriv>, _mathlib<deriv>>(this->asDerived());
                                                                            ^~
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:15:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h: At global scope:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h:74:54: error: expected ‘;’ before ‘<’ token
  using derived_alt = typename shell_of<derived>::type<T, Mathlib>;
                                                      ^
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h:77:26: error: ‘derived_alt’ does not name a type
  TensorInitializer(const derived_alt<U>&  tensor) : black_cat_array(tensor.innerShape()) {
                          ^~~~~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h:77:37: error: expected ‘,’ or ‘...’ before ‘<’ token
  TensorInitializer(const derived_alt<U>&  tensor) : black_cat_array(tensor.innerShape()) {
                                     ^
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h: In constructor ‘BC::TensorInitializer<_tensor<t, ml>, typename std::enable_if<BC::MTF::isCorePure<t>::conditional, void>::type>::TensorInitializer(int)’:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h:77:69: error: ‘tensor’ was not declared in this scope
  TensorInitializer(const derived_alt<U>&  tensor) : black_cat_array(tensor.innerShape()) {
                                                                     ^~~~~~
In file included from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10:0,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/TensorBase.h: At global scope:
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:38:71: error: expected ‘;’ before ‘<’ token
  template<class    U> using deriv   = typename shell_of<derived>::type<U, Mathlib>;
                                                                       ^
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:39:76: error: expected ‘;’ before ‘<’ token
  template<class... U> using functor = typename shell_of<functor_type>::type<U...>;
                                                                            ^
../UnitTests/../BC_Internals/BC_Core/TensorBase.h: In member function ‘auto BC::TensorBase<derived>::operator[](int)’:
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:83:68: error: expected ‘(’ before ‘<’ token
     auto operator [] (int i)    { return typename base<RANK>::slice<decltype(slice(0)), Mathlib>(slice(i)); }
                                                                    ^
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:83:69: error: expected primary-expression before ‘decltype’
     auto operator [] (int i)    { return typename base<RANK>::slice<decltype(slice(0)), Mathlib>(slice(i)); }
                                                                     ^~~~~~~~
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:83:69: error: expected ‘;’ before ‘decltype’
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:83:87: error: expected unqualified-id before ‘,’ token
     auto operator [] (int i)    { return typename base<RANK>::slice<decltype(slice(0)), Mathlib>(slice(i)); }
                                                                                       ^
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:83:96: error: expected initializer before ‘>’ token
     auto operator [] (int i)    { return typename base<RANK>::slice<decltype(slice(0)), Mathlib>(slice(i)); }
                                                                                                ^
../UnitTests/../BC_Internals/BC_Core/TensorBase.h: In member function ‘const auto BC::TensorBase<derived>::operator[](int) const’:
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:84:74: error: expected ‘(’ before ‘<’ token
  const auto operator [] (int i) const { return typename base<RANK>::slice<decltype(slice(0)), Mathlib>(slice(i)); }
                                                                          ^
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:84:75: error: expected primary-expression before ‘decltype’
  const auto operator [] (int i) const { return typename base<RANK>::slice<decltype(slice(0)), Mathlib>(slice(i)); }
                                                                           ^~~~~~~~
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:84:75: error: expected ‘;’ before ‘decltype’
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:84:93: error: expected unqualified-id before ‘,’ token
  const auto operator [] (int i) const { return typename base<RANK>::slice<decltype(slice(0)), Mathlib>(slice(i)); }
                                                                                             ^
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:84:102: error: expected initializer before ‘>’ token
  const auto operator [] (int i) const { return typename base<RANK>::slice<decltype(slice(0)), Mathlib>(slice(i)); }
                                                                                                      ^
In file included from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:50:0,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Vector.h: At global scope:
../UnitTests/../BC_Internals/BC_Core/Vector.h:45:15: error: ‘unary_expression_transpose’ was not declared in this scope
  const Vector<unary_expression_transpose<typename MTF::determine_scalar<T>::type, typename parent_class::functor_type>, Mathlib> t() const {
               ^~~~~~~~~~~~~~~~~~~~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Vector.h:45:118: error: template argument 1 is invalid
  const Vector<unary_expression_transpose<typename MTF::determine_scalar<T>::type, typename parent_class::functor_type>, Mathlib> t() const {
                                                                                                                      ^
../UnitTests/../BC_Internals/BC_Core/Vector.h:45:119: error: expected unqualified-id before ‘,’ token
  const Vector<unary_expression_transpose<typename MTF::determine_scalar<T>::type, typename parent_class::functor_type>, Mathlib> t() const {
                                                                                                                       ^
In file included from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:51:0,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Matrix.h:47:15: error: ‘unary_expression_transpose’ was not declared in this scope
  const Matrix<unary_expression_transpose<typename MTF::determine_scalar<T>::type, typename parent_class::functor_type>, Mathlib> t() const {
               ^~~~~~~~~~~~~~~~~~~~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Matrix.h:47:118: error: template argument 1 is invalid
  const Matrix<unary_expression_transpose<typename MTF::determine_scalar<T>::type, typename parent_class::functor_type>, Mathlib> t() const {
                                                                                                                      ^
../UnitTests/../BC_Internals/BC_Core/Matrix.h:47:119: error: expected unqualified-id before ‘,’ token
  const Matrix<unary_expression_transpose<typename MTF::determine_scalar<T>::type, typename parent_class::functor_type>, Mathlib> t() const {
                                                                                                                       ^
In file included from ../UnitTests/main.cpp:4:0:
../UnitTests/SpeedTests.h: In function ‘int speedTestDelayedEval()’:
../UnitTests/SpeedTests.h:43:11: error: no match for ‘operator==’ (operand types are ‘vec {aka BC::Vector<float>}’ and ‘int’)
   a = ((e == b ** c) + d);
         ~~^~~~~~~~~
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:12:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:176:38: note: candidate: template<class pDeriv> int BC::Tensor_Operations< <template-parameter-1-1> >::operator==(const BC::Tensor_Operations<param_deriv>&) [with pDeriv = pDeriv; derived = BC::Vector<float>]
  typename impl<pDeriv, assign>::type operator ==(const Tensor_Operations<pDeriv>& param) {
                                      ^~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:176:38: note:   template argument deduction/substitution failed:
In file included from ../UnitTests/main.cpp:4:0:
../UnitTests/SpeedTests.h:43:19: note:   mismatched types ‘const BC::Tensor_Operations<A>’ and ‘int’
   a = ((e == b ** c) + d);
                   ^
../UnitTests/SpeedTests.h: In function ‘int speedTestsScalarIteration()’:
../UnitTests/SpeedTests.h:136:9: error: ‘using mat = class BC::Matrix<float> {aka class BC::Matrix<float>}’ has no member named ‘t’
   c = a.t() * b;
         ^
../UnitTests/main.cpp: In function ‘auto test()’:
../UnitTests/main.cpp:40:8: error: ‘using mat = class BC::Matrix<float> {aka class BC::Matrix<float>}’ has no member named ‘t’
  d = a.t();
        ^
../UnitTests/main.cpp:41:8: error: ‘using mat = class BC::Matrix<float> {aka class BC::Matrix<float>}’ has no member named ‘t’
  e = b.t();
        ^
../UnitTests/main.cpp:47:8: error: no match for ‘operator*’ (operand types are ‘mat {aka BC::Matrix<float>}’ and ‘mat {aka BC::Matrix<float>}’)
  c = d * e;
      ~~^~~
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:12:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:149:33: note: candidate: template<class pDeriv, class voider> typename BC::Tensor_Operations< <template-parameter-1-1> >::dp_impl<param_deriv>::type BC::Tensor_Operations< <template-parameter-1-1> >::operator*(const BC::Tensor_Operations<param_deriv>&) const [with pDeriv = pDeriv; voider = voider; derived = BC::Matrix<float>]
  typename dp_impl<pDeriv>::type operator *(const Tensor_Operations<pDeriv>& param) const {
                                 ^~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:149:33: note:   template argument deduction/substitution failed:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:148:25: error: no type named ‘type’ in ‘struct std::enable_if<false, void>’
  template<class pDeriv, class voider = typename std::enable_if<dp_impl<pDeriv>::short_params || dp_impl<pDeriv>::short_params>::type>
                         ^~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:160:33: note: candidate: template<class pDeriv, class voider, int foo> typename BC::Tensor_Operations< <template-parameter-1-1> >::dp_impl<param_deriv>::type BC::Tensor_Operations< <template-parameter-1-1> >::operator*(const BC::Tensor_Operations<param_deriv>&) const [with pDeriv = pDeriv; voider = voider; int foo = foo; derived = BC::Matrix<float>]
  typename dp_impl<pDeriv>::type operator *(const Tensor_Operations<pDeriv>& param) const {
                                 ^~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:160:33: note:   template argument deduction/substitution failed:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h: In substitution of ‘template<class pDeriv, class voider, int foo> typename BC::Tensor_Operations< <template-parameter-1-1> >::dp_impl<param_deriv>::type BC::Tensor_Operations< <template-parameter-1-1> >::operator*(const BC::Tensor_Operations<param_deriv>&) const [with pDeriv = BC::Matrix<float>; voider = void; int foo = 0]’:
../UnitTests/main.cpp:47:10:   required from here
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:160:33: error: no type named ‘type’ in ‘struct BC::Tensor_Operations<BC::Matrix<float> >::dp_impl<BC::Matrix<float> >’
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:165:43: note: candidate: const BC::alternate_asterix_denoter<derived> BC::Tensor_Operations< <template-parameter-1-1> >::operator*() const [with derived = BC::Matrix<float>]
  const alternate_asterix_denoter<derived> operator * () const {
                                           ^~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:165:43: note:   candidate expects 0 arguments, 1 provided
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:170:35: note: candidate: template<class pDeriv> int BC::Tensor_Operations< <template-parameter-1-1> >::operator*(const BC::alternate_asterix_denoter<pDeriv>&) const [with pDeriv = pDeriv; derived = BC::Matrix<float>]
  typename impl<pDeriv, mul>::type operator *(const alternate_asterix_denoter<pDeriv>& param) const {
                                   ^~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:170:35: note:   template argument deduction/substitution failed:
../UnitTests/main.cpp:47:10: note:   ‘mat {aka BC::Matrix<float>}’ is not derived from ‘const BC::alternate_asterix_denoter<derived>’
  c = d * e;
          ^
../UnitTests/main.cpp:50:8: error: ‘using mat = class BC::Matrix<float> {aka class BC::Matrix<float>}’ has no member named ‘t’
  c = a.t() * b.t();
        ^
../UnitTests/main.cpp:50:16: error: ‘using mat = class BC::Matrix<float> {aka class BC::Matrix<float>}’ has no member named ‘t’
  c = a.t() * b.t();
                ^
../UnitTests/main.cpp:53:8: error: ‘using mat = class BC::Matrix<float> {aka class BC::Matrix<float>}’ has no member named ‘t’
  c = a.t() * e;
        ^
../UnitTests/main.cpp:56:12: error: ‘using mat = class BC::Matrix<float> {aka class BC::Matrix<float>}’ has no member named ‘t’
  c = d * b.t();
            ^
../UnitTests/main.cpp:59:8: error: no match for ‘operator*’ (operand types are ‘mat {aka BC::Matrix<float>}’ and ‘scal {aka BC::Scalar<float, BC::CPU>}’)
  c = d * scal(2) * e;
      ~~^~~~~~~~~
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:12:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:149:33: note: candidate: template<class pDeriv, class voider> typename BC::Tensor_Operations< <template-parameter-1-1> >::dp_impl<param_deriv>::type BC::Tensor_Operations< <template-parameter-1-1> >::operator*(const BC::Tensor_Operations<param_deriv>&) const [with pDeriv = pDeriv; voider = voider; derived = BC::Matrix<float>]
  typename dp_impl<pDeriv>::type operator *(const Tensor_Operations<pDeriv>& param) const {
                                 ^~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:149:33: note:   template argument deduction/substitution failed:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h: In substitution of ‘template<class pDeriv, class voider> typename BC::Tensor_Operations< <template-parameter-1-1> >::dp_impl<param_deriv>::type BC::Tensor_Operations< <template-parameter-1-1> >::operator*(const BC::Tensor_Operations<param_deriv>&) const [with pDeriv = BC::Scalar<float, BC::CPU>; voider = void]’:
../UnitTests/main.cpp:59:16:   required from here
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:149:33: error: no type named ‘type’ in ‘struct BC::Tensor_Operations<BC::Matrix<float> >::dp_impl<BC::Scalar<float, BC::CPU> >’
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:160:33: note: candidate: template<class pDeriv, class voider, int foo> typename BC::Tensor_Operations< <template-parameter-1-1> >::dp_impl<param_deriv>::type BC::Tensor_Operations< <template-parameter-1-1> >::operator*(const BC::Tensor_Operations<param_deriv>&) const [with pDeriv = pDeriv; voider = voider; int foo = foo; derived = BC::Matrix<float>]
  typename dp_impl<pDeriv>::type operator *(const Tensor_Operations<pDeriv>& param) const {
                                 ^~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:160:33: note:   template argument deduction/substitution failed:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:159:3: error: no type named ‘type’ in ‘struct std::enable_if<false, void>’
   class voider = typename std::enable_if<!dp_impl<pDeriv>::short_params && !dp_impl<pDeriv>::short_params>::type, int foo = 0>
   ^~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:165:43: note: candidate: const BC::alternate_asterix_denoter<derived> BC::Tensor_Operations< <template-parameter-1-1> >::operator*() const [with derived = BC::Matrix<float>]
  const alternate_asterix_denoter<derived> operator * () const {
                                           ^~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:165:43: note:   candidate expects 0 arguments, 1 provided
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:170:35: note: candidate: template<class pDeriv> int BC::Tensor_Operations< <template-parameter-1-1> >::operator*(const BC::alternate_asterix_denoter<pDeriv>&) const [with pDeriv = pDeriv; derived = BC::Matrix<float>]
  typename impl<pDeriv, mul>::type operator *(const alternate_asterix_denoter<pDeriv>& param) const {
                                   ^~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:170:35: note:   template argument deduction/substitution failed:
../UnitTests/main.cpp:59:16: note:   ‘scal {aka BC::Scalar<float, BC::CPU>}’ is not derived from ‘const BC::alternate_asterix_denoter<derived>’
  c = d * scal(2) * e;
                ^
../UnitTests/main.cpp:62:14: error: no match for ‘operator*’ (operand types are ‘scal {aka BC::Scalar<float, BC::CPU>}’ and ‘mat {aka BC::Matrix<float>}’)
  c = scal(2) * d * e;
      ~~~~~~~~^~~
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:12:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:149:33: note: candidate: template<class pDeriv, class voider> typename BC::Tensor_Operations< <template-parameter-1-1> >::dp_impl<param_deriv>::type BC::Tensor_Operations< <template-parameter-1-1> >::operator*(const BC::Tensor_Operations<param_deriv>&) const [with pDeriv = pDeriv; voider = voider; derived = BC::Scalar<float, BC::CPU>]
  typename dp_impl<pDeriv>::type operator *(const Tensor_Operations<pDeriv>& param) const {
                                 ^~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:149:33: note:   template argument deduction/substitution failed:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h: In substitution of ‘template<class pDeriv, class voider> typename BC::Tensor_Operations< <template-parameter-1-1> >::dp_impl<param_deriv>::type BC::Tensor_Operations< <template-parameter-1-1> >::operator*(const BC::Tensor_Operations<param_deriv>&) const [with pDeriv = BC::Matrix<float>; voider = void]’:
../UnitTests/main.cpp:62:16:   required from here
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:149:33: error: no type named ‘type’ in ‘struct BC::Tensor_Operations<BC::Scalar<float, BC::CPU> >::dp_impl<BC::Matrix<float> >’
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:160:33: note: candidate: template<class pDeriv, class voider, int foo> typename BC::Tensor_Operations< <template-parameter-1-1> >::dp_impl<param_deriv>::type BC::Tensor_Operations< <template-parameter-1-1> >::operator*(const BC::Tensor_Operations<param_deriv>&) const [with pDeriv = pDeriv; voider = voider; int foo = foo; derived = BC::Scalar<float, BC::CPU>]
  typename dp_impl<pDeriv>::type operator *(const Tensor_Operations<pDeriv>& param) const {
                                 ^~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:160:33: note:   template argument deduction/substitution failed:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:159:3: error: no type named ‘type’ in ‘struct std::enable_if<false, void>’
   class voider = typename std::enable_if<!dp_impl<pDeriv>::short_params && !dp_impl<pDeriv>::short_params>::type, int foo = 0>
   ^~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:165:43: note: candidate: const BC::alternate_asterix_denoter<derived> BC::Tensor_Operations< <template-parameter-1-1> >::operator*() const [with derived = BC::Scalar<float, BC::CPU>]
  const alternate_asterix_denoter<derived> operator * () const {
                                           ^~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:165:43: note:   candidate expects 0 arguments, 1 provided
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:170:35: note: candidate: template<class pDeriv> int BC::Tensor_Operations< <template-parameter-1-1> >::operator*(const BC::alternate_asterix_denoter<pDeriv>&) const [with pDeriv = pDeriv; derived = BC::Scalar<float, BC::CPU>]
  typename impl<pDeriv, mul>::type operator *(const alternate_asterix_denoter<pDeriv>& param) const {
                                   ^~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:170:35: note:   template argument deduction/substitution failed:
../UnitTests/main.cpp:62:16: note:   ‘mat {aka BC::Matrix<float>}’ is not derived from ‘const BC::alternate_asterix_denoter<derived>’
  c = scal(2) * d * e;
                ^
../UnitTests/main.cpp:64:8: error: no match for ‘operator*’ (operand types are ‘mat {aka BC::Matrix<float>}’ and ‘mat {aka BC::Matrix<float>}’)
  c = d * e * scal(2); ////This is the only version that is not accounted for (it is also the least common notation)
      ~~^~~
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:12:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:149:33: note: candidate: template<class pDeriv, class voider> typename BC::Tensor_Operations< <template-parameter-1-1> >::dp_impl<param_deriv>::type BC::Tensor_Operations< <template-parameter-1-1> >::operator*(const BC::Tensor_Operations<param_deriv>&) const [with pDeriv = pDeriv; voider = voider; derived = BC::Matrix<float>]
  typename dp_impl<pDeriv>::type operator *(const Tensor_Operations<pDeriv>& param) const {
                                 ^~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:149:33: note:   template argument deduction/substitution failed:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:148:25: error: no type named ‘type’ in ‘struct std::enable_if<false, void>’
  template<class pDeriv, class voider = typename std::enable_if<dp_impl<pDeriv>::short_params || dp_impl<pDeriv>::short_params>::type>
                         ^~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:160:33: note: candidate: template<class pDeriv, class voider, int foo> typename BC::Tensor_Operations< <template-parameter-1-1> >::dp_impl<param_deriv>::type BC::Tensor_Operations< <template-parameter-1-1> >::operator*(const BC::Tensor_Operations<param_deriv>&) const [with pDeriv = pDeriv; voider = voider; int foo = foo; derived = BC::Matrix<float>]
  typename dp_impl<pDeriv>::type operator *(const Tensor_Operations<pDeriv>& param) const {
                                 ^~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:160:33: note:   template argument deduction/substitution failed:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h: In substitution of ‘template<class pDeriv, class voider, int foo> typename BC::Tensor_Operations< <template-parameter-1-1> >::dp_impl<param_deriv>::type BC::Tensor_Operations< <template-parameter-1-1> >::operator*(const BC::Tensor_Operations<param_deriv>&) const [with pDeriv = BC::Matrix<float>; voider = void; int foo = 0]’:
../UnitTests/main.cpp:64:10:   required from here
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:160:33: error: no type named ‘type’ in ‘struct BC::Tensor_Operations<BC::Matrix<float> >::dp_impl<BC::Matrix<float> >’
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:165:43: note: candidate: const BC::alternate_asterix_denoter<derived> BC::Tensor_Operations< <template-parameter-1-1> >::operator*() const [with derived = BC::Matrix<float>]
  const alternate_asterix_denoter<derived> operator * () const {
                                           ^~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:165:43: note:   candidate expects 0 arguments, 1 provided
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:170:35: note: candidate: template<class pDeriv> int BC::Tensor_Operations< <template-parameter-1-1> >::operator*(const BC::alternate_asterix_denoter<pDeriv>&) const [with pDeriv = pDeriv; derived = BC::Matrix<float>]
  typename impl<pDeriv, mul>::type operator *(const alternate_asterix_denoter<pDeriv>& param) const {
                                   ^~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:170:35: note:   template argument deduction/substitution failed:
../UnitTests/main.cpp:64:10: note:   ‘mat {aka BC::Matrix<float>}’ is not derived from ‘const BC::alternate_asterix_denoter<derived>’
  c = d * e * scal(2); ////This is the only version that is not accounted for (it is also the least common notation)
          ^
../UnitTests/main.cpp:66:8: error: no match for ‘operator*’ (operand types are ‘mat {aka BC::Matrix<float>}’ and ‘scal {aka BC::Scalar<float, BC::CPU>}’)
  c = d * scal(2) * e;
      ~~^~~~~~~~~
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:12:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:149:33: note: candidate: template<class pDeriv, class voider> typename BC::Tensor_Operations< <template-parameter-1-1> >::dp_impl<param_deriv>::type BC::Tensor_Operations< <template-parameter-1-1> >::operator*(const BC::Tensor_Operations<param_deriv>&) const [with pDeriv = pDeriv; voider = voider; derived = BC::Matrix<float>]
  typename dp_impl<pDeriv>::type operator *(const Tensor_Operations<pDeriv>& param) const {
                                 ^~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:149:33: note:   template argument deduction/substitution failed:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h: In substitution of ‘template<class pDeriv, class voider> typename BC::Tensor_Operations< <template-parameter-1-1> >::dp_impl<param_deriv>::type BC::Tensor_Operations< <template-parameter-1-1> >::operator*(const BC::Tensor_Operations<param_deriv>&) const [with pDeriv = BC::Scalar<float, BC::CPU>; voider = void]’:
../UnitTests/main.cpp:66:16:   required from here
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:149:33: error: no type named ‘type’ in ‘struct BC::Tensor_Operations<BC::Matrix<float> >::dp_impl<BC::Scalar<float, BC::CPU> >’
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:160:33: note: candidate: template<class pDeriv, class voider, int foo> typename BC::Tensor_Operations< <template-parameter-1-1> >::dp_impl<param_deriv>::type BC::Tensor_Operations< <template-parameter-1-1> >::operator*(const BC::Tensor_Operations<param_deriv>&) const [with pDeriv = pDeriv; voider = voider; int foo = foo; derived = BC::Matrix<float>]
  typename dp_impl<pDeriv>::type operator *(const Tensor_Operations<pDeriv>& param) const {
                                 ^~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:160:33: note:   template argument deduction/substitution failed:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:159:3: error: no type named ‘type’ in ‘struct std::enable_if<false, void>’
   class voider = typename std::enable_if<!dp_impl<pDeriv>::short_params && !dp_impl<pDeriv>::short_params>::type, int foo = 0>
   ^~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:165:43: note: candidate: const BC::alternate_asterix_denoter<derived> BC::Tensor_Operations< <template-parameter-1-1> >::operator*() const [with derived = BC::Matrix<float>]
  const alternate_asterix_denoter<derived> operator * () const {
                                           ^~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:165:43: note:   candidate expects 0 arguments, 1 provided
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:170:35: note: candidate: template<class pDeriv> int BC::Tensor_Operations< <template-parameter-1-1> >::operator*(const BC::alternate_asterix_denoter<pDeriv>&) const [with pDeriv = pDeriv; derived = BC::Matrix<float>]
  typename impl<pDeriv, mul>::type operator *(const alternate_asterix_denoter<pDeriv>& param) const {
                                   ^~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:170:35: note:   template argument deduction/substitution failed:
../UnitTests/main.cpp:66:16: note:   ‘scal {aka BC::Scalar<float, BC::CPU>}’ is not derived from ‘const BC::alternate_asterix_denoter<derived>’
  c = d * scal(2) * e;
                ^
../UnitTests/main.cpp:75:10: error: request for member ‘eval’ in ‘((BC::Tensor_Operations<BC::Matrix<float> >*)(& c))->BC::Tensor_Operations< <template-parameter-1-1> >::operator+<BC::Matrix<float> >(c)’, which is of non-class type ‘int’
  (c + c).eval();
          ^~~~
../UnitTests/main.cpp:76:8: error: ‘using mat = class BC::Matrix<float> {aka class BC::Matrix<float>}’ has no member named ‘t’
  c = a.t() * b.t();
        ^
../UnitTests/main.cpp:76:16: error: ‘using mat = class BC::Matrix<float> {aka class BC::Matrix<float>}’ has no member named ‘t’
  c = a.t() * b.t();
                ^
../UnitTests/main.cpp:80:8: error: ‘using mat = class BC::Matrix<float> {aka class BC::Matrix<float>}’ has no member named ‘t’
  c = a.t() * A * (b.t() * A);
        ^
../UnitTests/main.cpp:80:21: error: ‘using mat = class BC::Matrix<float> {aka class BC::Matrix<float>}’ has no member named ‘t’
  c = a.t() * A * (b.t() * A);
                     ^
../UnitTests/main.cpp:94:14: error: invalid operands of types ‘void’ and ‘void’ to binary ‘operator+’
  d[1] = d[1] + d[1];
         ~~~~~^~~~~~
../UnitTests/main.cpp:99:8: error: invalid types ‘void[int]’ for array subscript
  d[1][1] = d[1][1] + d[1][1];
        ^
../UnitTests/main.cpp:99:18: error: invalid types ‘void[int]’ for array subscript
  d[1][1] = d[1][1] + d[1][1];
                  ^
../UnitTests/main.cpp:99:28: error: invalid types ‘void[int]’ for array subscript
  d[1][1] = d[1][1] + d[1][1];
                            ^
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:13:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Utility.h: In instantiation of ‘void BC::Tensor_Utility<deriv, typename std::enable_if<(isPrim<typename BC::determine_functor< <template-parameter-1-1> >::fscal> || BC::MTF::isCore<typename BC::determine_functor< <template-parameter-1-1> >::type>::conditional), void>::type>::read(std::ifstream&, bool, bool) [with deriv = BC::Matrix<double>; typename std::enable_if<(isPrim<typename BC::determine_functor< <template-parameter-1-1> >::fscal> || BC::MTF::isCore<typename BC::determine_functor< <template-parameter-1-1> >::type>::conditional), void>::type = void; std::ifstream = std::basic_ifstream<char>]’:
../UnitTests/main.cpp:113:15:   required from here
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Utility.h:132:22: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
    for (int i = 0; i < dims.size(); ++i) {
                    ~~^~~~~~~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Utility.h:138:92: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
    MATHLIB::HostToDevice(asDerived().data().core(), &data[data[0] + 1], asDerived().size() > data.size() ? data.size() : asDerived().size());
                                                                                             
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:13:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Utility.h:140:86: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
    MATHLIB::HostToDevice(asDerived().data().core(), &data[0],     asDerived().size() > data.size() ? data.size() : asDerived().size());
                                                                                       
In file included from ../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Core_Slice.h:17:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Core.h:13,
                 from ../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h:12,
                 from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:15,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Core_Scalar.h: In instantiation of ‘BC::Tensor_Scalar<PARENT>::Tensor_Scalar(BC::Tensor_Scalar<PARENT>::scalar*, const PARENT&) [with PARENT = BC::Tensor_Core<BC::Matrix<float> >; BC::Tensor_Scalar<PARENT>::scalar = float]’:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h:33:63:   required from ‘BC::TensorInitializer<derived, expression_tensor>::TensorInitializer(const params& ...) [with params = {float*, BC::Tensor_Core<BC::Matrix<float, BC::CPU> >}; derived = BC::Scalar<BC::Tensor_Scalar<BC::Tensor_Core<BC::Matrix<float> > >, BC::CPU>; expression_tensor = void]’
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:50:51:   required from ‘BC::TensorBase<derived>::TensorBase(const params& ...) [with params = {float*, BC::Tensor_Core<BC::Matrix<float, BC::CPU> >}; derived = BC::Scalar<BC::Tensor_Scalar<BC::Tensor_Core<BC::Matrix<float> > >, BC::CPU>]’
../UnitTests/../BC_Internals/BC_Core/Scalar.h:61:97:   required from ‘BC::Scalar< <template-parameter-1-1>, ML>::Scalar(const var1&, const var2&, const params& ...) [with var1 = float*; var2 = BC::Tensor_Core<BC::Matrix<float> >; params = {}; T = BC::Tensor_Scalar<BC::Tensor_Core<BC::Matrix<float> > >; Mathlib = BC::CPU]’
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:92:19:   required from ‘auto BC::TensorBase<derived>::getScalar(int) [with derived = BC::Matrix<float>]’
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:96:52:   required from ‘auto BC::TensorBase<derived>::operator()(int) [with derived = BC::Matrix<float>]’
../UnitTests/main.cpp:33:6:   required from here
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Core_Scalar.h:36:10: warning: ‘BC::Tensor_Scalar<BC::Tensor_Core<BC::Matrix<float> > >::array_slice’ will be initialized after [-Wreorder]
  scalar* array_slice;
          ^~~~~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Core_Scalar.h:35:16: warning:   ‘const BC::Tensor_Core<BC::Matrix<float> >& BC::Tensor_Scalar<BC::Tensor_Core<BC::Matrix<float> > >::parent’ [-Wreorder]
  const PARENT& parent;
                ^~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Core_Scalar.h:41:2: warning:   when initialized here [-Wreorder]
  Tensor_Scalar(scalar* array, const PARENT& parent_) : array_slice(array), parent(parent_) {}
  ^~~~~~~~~~~~~
In file included from ../UnitTests/../BC_Internals/BC_MathLibraries/Mathematics_CPU.h:15:0,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:32,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_MathLibraries/BC_PrintFunctions.h: In instantiation of ‘void BC::printHelper(const T&, int_ranks, int, std::__cxx11::string, int) [with T = const float*; int_ranks = int*; std::__cxx11::string = std::__cxx11::basic_string<char>]’:
../UnitTests/../BC_Internals/BC_MathLibraries/BC_PrintFunctions.h:102:13:   required from ‘void BC::print(const T&, RANKS, int, int) [with T = const float*; RANKS = int*]’
../UnitTests/../BC_Internals/BC_MathLibraries/Mathematics_CPU.h:98:12:   required from ‘static void BC::CPU::print(T, RANKS, int, int) [with T = const float*; RANKS = int*]’
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Utility.h:75:17:   required from ‘void BC::Tensor_Utility<deriv, typename std::enable_if<(isPrim<typename BC::determine_functor< <template-parameter-1-1> >::fscal> || BC::MTF::isCore<typename BC::determine_functor< <template-parameter-1-1> >::type>::conditional), void>::type>::print() const [with deriv = BC::Matrix<float>; typename std::enable_if<(isPrim<typename BC::determine_functor< <template-parameter-1-1> >::fscal> || BC::MTF::isCore<typename BC::determine_functor< <template-parameter-1-1> >::type>::conditional), void>::type = void]’
../UnitTests/main.cpp:37:10:   required from here
../UnitTests/../BC_Internals/BC_MathLibraries/BC_PrintFunctions.h:43:38: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
     str = str.substr(0, str.length() < printSpace ? str.length() : printSpace);
                                       
../UnitTests/../BC_Internals/BC_MathLibraries/BC_PrintFunctions.h:46:22: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
     if (str.length() < printSpace)
                       
../UnitTests/../BC_Internals/BC_MathLibraries/BC_PrintFunctions.h:67:37: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
    str = str.substr(0, str.length() < printSpace ? str.length() : printSpace);
                                      
../UnitTests/../BC_Internals/BC_MathLibraries/BC_PrintFunctions.h:70:21: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
    if (str.length() < printSpace)
                      
../UnitTests/../BC_Internals/BC_MathLibraries/BC_PrintFunctions.h: In instantiation of ‘void BC::printHelper(const T&, int_ranks, int, std::__cxx11::string, int) [with T = const double*; int_ranks = int*; std::__cxx11::string = std::__cxx11::basic_string<char>]’:
../UnitTests/../BC_Internals/BC_MathLibraries/BC_PrintFunctions.h:102:13:   required from ‘void BC::print(const T&, RANKS, int, int) [with T = const double*; RANKS = int*]’
../UnitTests/../BC_Internals/BC_MathLibraries/Mathematics_CPU.h:98:12:   required from ‘static void BC::CPU::print(T, RANKS, int, int) [with T = const double*; RANKS = int*]’
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Utility.h:75:17:   required from ‘void BC::Tensor_Utility<deriv, typename std::enable_if<(isPrim<typename BC::determine_functor< <template-parameter-1-1> >::fscal> || BC::MTF::isCore<typename BC::determine_functor< <template-parameter-1-1> >::type>::conditional), void>::type>::print() const [with deriv = BC::Matrix<double>; typename std::enable_if<(isPrim<typename BC::determine_functor< <template-parameter-1-1> >::fscal> || BC::MTF::isCore<typename BC::determine_functor< <template-parameter-1-1> >::type>::conditional), void>::type = void]’
../UnitTests/main.cpp:114:14:   required from here
../UnitTests/../BC_Internals/BC_MathLibraries/BC_PrintFunctions.h:43:38: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
     str = str.substr(0, str.length() < printSpace ? str.length() : printSpace);
                                       
../UnitTests/../BC_Internals/BC_MathLibraries/BC_PrintFunctions.h:46:22: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
     if (str.length() < printSpace)
                       
../UnitTests/../BC_Internals/BC_MathLibraries/BC_PrintFunctions.h:67:37: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
    str = str.substr(0, str.length() < printSpace ? str.length() : printSpace);
                                      
../UnitTests/../BC_Internals/BC_MathLibraries/BC_PrintFunctions.h:70:21: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
    if (str.length() < printSpace)
                      
UnitTests/subdir.mk:18: recipe for target 'UnitTests/main.o' failed
make: *** [UnitTests/main.o] Error 1
17:11:00 **** Incremental Build of configuration Debug for project BlackCat_LibraryCPU ****
make all 
Building file: ../UnitTests/main.cpp
Invoking: GCC C++ Compiler
g++ -O0 -g3 -Wall -c -fmessage-length=0 -MMD -MP -MF"UnitTests/main.d" -MT"UnitTests/main.o" -o "UnitTests/main.o" "../UnitTests/main.cpp"
In file included from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:32:0,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_MathLibraries/Mathematics_CPU.h:74:0: warning: ignoring #pragma omp parallel [-Wunknown-pragmas]
 #pragma omp parallel for
 
../UnitTests/../BC_Internals/BC_MathLibraries/Mathematics_CPU.h:78:0: warning: ignoring #pragma omp barrier [-Wunknown-pragmas]
 #pragma omp barrier
 
../UnitTests/../BC_Internals/BC_MathLibraries/Mathematics_CPU.h:88:0: warning: ignoring #pragma omp parallel [-Wunknown-pragmas]
 #pragma omp parallel for
 
../UnitTests/../BC_Internals/BC_MathLibraries/Mathematics_CPU.h:92:0: warning: ignoring #pragma omp barrier [-Wunknown-pragmas]
 #pragma omp barrier
 
In file included from ../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Core_Slice.h:17:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Core.h:13,
                 from ../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h:12,
                 from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:15,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Core_Scalar.h:22:0: warning: "__BCinline__" redefined
 #define __BCinline__
 
In file included from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:29:0,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Expressions/BlackCat_Internal_Definitions.h:25:0: note: this is the location of the previous definition
 #define __BCinline__ __BC_gcpu__ __attribute__((always_inline))
 
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:12:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:96:89: error: ‘mul’ was not declared in this scope
           typename MTF::expression_substitution<binary_expression_scalar_L<scalar_type, mul, functor_type, param_functor_type>, param_deriv>::type,
                                                                                         ^~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:96:126: error: template argument 2 is invalid
           typename MTF::expression_substitution<binary_expression_scalar_L<scalar_type, mul, functor_type, param_functor_type>, param_deriv>::type,
                                                                                                                              ^
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:96:140: error: template argument 1 is invalid
           typename MTF::expression_substitution<binary_expression_scalar_L<scalar_type, mul, functor_type, param_functor_type>, param_deriv>::type,
                                                                                                                                            ^
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:97:89: error: ‘mul’ was not declared in this scope
           typename MTF::expression_substitution<binary_expression_scalar_R<scalar_type, mul, functor_type, param_functor_type>, derived  >::type
                                                                                         ^~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:97:126: error: template argument 2 is invalid
           typename MTF::expression_substitution<binary_expression_scalar_R<scalar_type, mul, functor_type, param_functor_type>, derived  >::type
                                                                                                                              ^
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:97:138: error: template argument 1 is invalid
           typename MTF::expression_substitution<binary_expression_scalar_R<scalar_type, mul, functor_type, param_functor_type>, derived  >::type
                                                                                                                                          ^
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:98:10: error: template argument 2 is invalid
          >::type,
          ^
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:98:10: error: template argument 3 is invalid
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:99:13: error: template argument 2 is invalid
         void>::type;
             ^
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:102:47: error: ‘binary_expression_dotproduct’ was not declared in this scope
         typename MTF::expression_substitution<binary_expression_dotproduct<scalar_type, functor_type, param_functor_type, math_library>,param_deriv>::type, void>::type;
                                               ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:102:135: error: wrong number of template arguments (4, should be 2)
         typename MTF::expression_substitution<binary_expression_dotproduct<scalar_type, functor_type, param_functor_type, math_library>,param_deriv>::type, void>::type;
                                                                                                                                       ^
In file included from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:47:0,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_MetaTemplateFunctions/Adhoc.h:18:34: note: provided for ‘template<class, class> struct BC::MTF::expression_substitution’
   template<class, class>  struct expression_substitution;
                                  ^~~~~~~~~~~~~~~~~~~~~~~
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:12:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:102:148: error: template argument 2 is invalid
         typename MTF::expression_substitution<binary_expression_dotproduct<scalar_type, functor_type, param_functor_type, math_library>,param_deriv>::type, void>::type;
                                                                                                                                                    ^
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:102:149: error: expected identifier before ‘::’ token
         typename MTF::expression_substitution<binary_expression_dotproduct<scalar_type, functor_type, param_functor_type, math_library>,param_deriv>::type, void>::type;
                                                                                                                                                     ^~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:105:47: error: ‘binary_expression_dotproduct’ was not declared in this scope
         typename MTF::expression_substitution<binary_expression_dotproduct<scalar_type, functor_type, param_functor_type, math_library>,param_deriv>::type, void>::type;
                                               ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:105:135: error: wrong number of template arguments (4, should be 2)
         typename MTF::expression_substitution<binary_expression_dotproduct<scalar_type, functor_type, param_functor_type, math_library>,param_deriv>::type, void>::type;
                                                                                                                                       ^
In file included from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:47:0,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_MetaTemplateFunctions/Adhoc.h:18:34: note: provided for ‘template<class, class> struct BC::MTF::expression_substitution’
   template<class, class>  struct expression_substitution;
                                  ^~~~~~~~~~~~~~~~~~~~~~~
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:12:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:105:148: error: template argument 2 is invalid
         typename MTF::expression_substitution<binary_expression_dotproduct<scalar_type, functor_type, param_functor_type, math_library>,param_deriv>::type, void>::type;
                                                                                                                                                    ^
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:105:149: error: expected identifier before ‘::’ token
         typename MTF::expression_substitution<binary_expression_dotproduct<scalar_type, functor_type, param_functor_type, math_library>,param_deriv>::type, void>::type;
                                                                                                                                                     ^~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:108:47: error: ‘binary_expression_dotproduct’ was not declared in this scope
         typename MTF::expression_substitution<binary_expression_dotproduct<scalar_type, functor_type, param_functor_type, math_library>,
                                               ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:108:135: error: wrong number of template arguments (4, should be 2)
         typename MTF::expression_substitution<binary_expression_dotproduct<scalar_type, functor_type, param_functor_type, math_library>,
                                                                                                                                       ^
In file included from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:47:0,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_MetaTemplateFunctions/Adhoc.h:18:34: note: provided for ‘template<class, class> struct BC::MTF::expression_substitution’
   template<class, class>  struct expression_substitution;
                                  ^~~~~~~~~~~~~~~~~~~~~~~
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:12:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:109:42: error: template argument 2 is invalid
         Matrix<functor_type, math_library>>::type, void>::type;
                                          ^~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:109:44: error: expected identifier before ‘::’ token
         Matrix<functor_type, math_library>>::type, void>::type;
                                            ^~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:111:62: error: ‘vecType’ was not declared in this scope
   using type    =  typename MTF::IF_ELSE<evaluate_to_vector, vecType,
                                                              ^~~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:112:52: error: ‘matType’ was not declared in this scope
          typename MTF::IF_ELSE<evaluate_to_matrix, matType,
                                                    ^~~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:113:53: error: ‘outerType’ was not declared in this scope
           typename MTF::IF_ELSE<evaluate_to_mat_vv, outerType,
                                                     ^~~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:114:56: error: ‘mulType’ was not declared in this scope
            typename MTF::IF_ELSE<evaluate_to_dominant, mulType, void
                                                        ^~~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:115:12: error: template argument 2 is invalid
            >::type
            ^
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:116:11: error: template argument 2 is invalid
           >::type
           ^
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:116:11: error: template argument 3 is invalid
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:117:10: error: template argument 2 is invalid
          >::type
          ^
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:117:10: error: template argument 3 is invalid
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:118:9: error: template argument 2 is invalid
         >::type;
         ^
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:118:9: error: template argument 3 is invalid
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:121:27: error: ‘type’ does not name a type
   using expression_type = type;
                           ^~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:174:24: error: ‘mul’ was not declared in this scope
  typename impl<pDeriv, mul>::type operator *(const alternate_asterix_denoter<pDeriv>& param) const {
                        ^~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:174:27: error: template argument 2 is invalid
  typename impl<pDeriv, mul>::type operator *(const alternate_asterix_denoter<pDeriv>& param) const {
                           ^
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:180:24: error: ‘assign’ was not declared in this scope
  typename impl<pDeriv, assign>::type operator ==(const Tensor_Operations<pDeriv>& param) {
                        ^~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:180:30: error: template argument 2 is invalid
  typename impl<pDeriv, assign>::type operator ==(const Tensor_Operations<pDeriv>& param) {
                              ^
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:186:24: error: ‘combine’ was not declared in this scope
  typename impl<pDeriv, combine>::type operator &&(const Tensor_Operations<pDeriv>& param) {
                        ^~~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:186:31: error: template argument 2 is invalid
  typename impl<pDeriv, combine>::type operator &&(const Tensor_Operations<pDeriv>& param) {
                               ^
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:193:24: error: ‘add’ was not declared in this scope
  typename impl<pDeriv, add>::type operator +(const Tensor_Operations<pDeriv>& param) const {
                        ^~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:193:27: error: template argument 2 is invalid
  typename impl<pDeriv, add>::type operator +(const Tensor_Operations<pDeriv>& param) const {
                           ^
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:198:24: error: ‘sub’ was not declared in this scope
  typename impl<pDeriv, sub>::type operator -(const Tensor_Operations<pDeriv>& param) const {
                        ^~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:198:27: error: template argument 2 is invalid
  typename impl<pDeriv, sub>::type operator -(const Tensor_Operations<pDeriv>& param) const {
                           ^
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:203:27: error: type/value mismatch at argument 2 in template parameter list for ‘template<class derived> template<class param_deriv, class functor> struct BC::Tensor_Operations< <template-parameter-1-1> >::impl’
  typename impl<pDeriv, div>::type operator /(const Tensor_Operations<pDeriv>& param) const {
                           ^
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:203:27: note:   expected a type, got ‘div’
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:208:24: error: ‘mul’ was not declared in this scope
  typename impl<pDeriv, mul>::type operator %(const Tensor_Operations<pDeriv>& param) const {
                        ^~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:208:27: error: template argument 2 is invalid
  typename impl<pDeriv, mul>::type operator %(const Tensor_Operations<pDeriv>& param) const {
                           ^
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h: In member function ‘int BC::Tensor_Operations< <template-parameter-1-1> >::operator*(const BC::alternate_asterix_denoter<pDeriv>&) const’:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:176:32: error: ‘mul’ was not declared in this scope
   return typename impl<pDeriv, mul>::type(this->data(), param.get().data());
                                ^~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:176:35: error: template argument 2 is invalid
   return typename impl<pDeriv, mul>::type(this->data(), param.get().data());
                                   ^
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h: In member function ‘int BC::Tensor_Operations< <template-parameter-1-1> >::operator==(const BC::Tensor_Operations<param_deriv>&)’:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:182:32: error: ‘assign’ was not declared in this scope
   return typename impl<pDeriv, assign>::type(this->data(), param.data());
                                ^~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:182:38: error: template argument 2 is invalid
   return typename impl<pDeriv, assign>::type(this->data(), param.data());
                                      ^
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h: In member function ‘int BC::Tensor_Operations< <template-parameter-1-1> >::operator&&(const BC::Tensor_Operations<param_deriv>&)’:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:188:32: error: ‘combine’ was not declared in this scope
   return typename impl<pDeriv, combine>::type(this->data(), param.data());
                                ^~~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:188:39: error: template argument 2 is invalid
   return typename impl<pDeriv, combine>::type(this->data(), param.data());
                                       ^
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h: In member function ‘int BC::Tensor_Operations< <template-parameter-1-1> >::operator+(const BC::Tensor_Operations<param_deriv>&) const’:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:195:32: error: ‘add’ was not declared in this scope
   return typename impl<pDeriv, add>::type(this->data(), param.data());
                                ^~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:195:35: error: template argument 2 is invalid
   return typename impl<pDeriv, add>::type(this->data(), param.data());
                                   ^
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h: In member function ‘int BC::Tensor_Operations< <template-parameter-1-1> >::operator-(const BC::Tensor_Operations<param_deriv>&) const’:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:200:32: error: ‘sub’ was not declared in this scope
   return typename impl<pDeriv, sub>::type(this->data(), param.data());
                                ^~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:200:35: error: template argument 2 is invalid
   return typename impl<pDeriv, sub>::type(this->data(), param.data());
                                   ^
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h: In member function ‘int BC::Tensor_Operations< <template-parameter-1-1> >::operator/(const BC::Tensor_Operations<param_deriv>&) const’:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:205:35: error: type/value mismatch at argument 2 in template parameter list for ‘template<class derived> template<class param_deriv, class functor> struct BC::Tensor_Operations< <template-parameter-1-1> >::impl’
   return typename impl<pDeriv, div>::type(this->data(), param.data());
                                   ^
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:205:35: note:   expected a type, got ‘div’
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h: In member function ‘int BC::Tensor_Operations< <template-parameter-1-1> >::operator%(const BC::Tensor_Operations<param_deriv>&) const’:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:210:32: error: ‘mul’ was not declared in this scope
   return typename impl<pDeriv, mul>::type(this->data(), param.data());
                                ^~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:210:35: error: template argument 2 is invalid
   return typename impl<pDeriv, mul>::type(this->data(), param.data());
                                   ^
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h: In member function ‘derived& BC::Tensor_Operations< <template-parameter-1-1> >::operator+=(const BC::Tensor_Operations<param_deriv>&)’:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:222:40: error: ‘add’ was not declared in this scope
   return *this = typename impl<pDeriv, add>::type(this->data(), param.data());
                                        ^~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:222:43: error: template argument 2 is invalid
   return *this = typename impl<pDeriv, add>::type(this->data(), param.data());
                                           ^
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h: In member function ‘derived& BC::Tensor_Operations< <template-parameter-1-1> >::operator-=(const BC::Tensor_Operations<param_deriv>&)’:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:227:40: error: ‘sub’ was not declared in this scope
   return *this = typename impl<pDeriv, sub>::type(this->data(), param.data());
                                        ^~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:227:43: error: template argument 2 is invalid
   return *this = typename impl<pDeriv, sub>::type(this->data(), param.data());
                                           ^
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h: In member function ‘derived& BC::Tensor_Operations< <template-parameter-1-1> >::operator/=(const BC::Tensor_Operations<param_deriv>&)’:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:232:43: error: type/value mismatch at argument 2 in template parameter list for ‘template<class derived> template<class param_deriv, class functor> struct BC::Tensor_Operations< <template-parameter-1-1> >::impl’
   return *this = typename impl<pDeriv, div>::type(this->data(), param.data());
                                           ^
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:232:43: note:   expected a type, got ‘div’
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h: In member function ‘derived& BC::Tensor_Operations< <template-parameter-1-1> >::operator%=(const BC::Tensor_Operations<param_deriv>&)’:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:237:40: error: ‘mul’ was not declared in this scope
   return *this = typename impl<pDeriv, mul>::type(this->data(), param.data());
                                        ^~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:237:43: error: template argument 2 is invalid
   return *this = typename impl<pDeriv, mul>::type(this->data(), param.data());
                                           ^
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:13:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Utility.h: In member function ‘auto BC::Tensor_Utility<deriv, <template-parameter-1-2> >::eval() const’:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Utility.h:34:45: error: expected ‘(’ before ‘<’ token
   return typename MTF::shell_of<deriv>::type<_scalar<deriv>, _mathlib<deriv>>(this->asDerived());
                                             ^
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Utility.h:34:60: error: expected primary-expression before ‘,’ token
   return typename MTF::shell_of<deriv>::type<_scalar<deriv>, _mathlib<deriv>>(this->asDerived());
                                                            ^
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Utility.h:34:76: error: expected primary-expression before ‘>’ token
   return typename MTF::shell_of<deriv>::type<_scalar<deriv>, _mathlib<deriv>>(this->asDerived());
                                                                            ^~
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:15:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h: At global scope:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h:74:54: error: expected ‘;’ before ‘<’ token
  using derived_alt = typename shell_of<derived>::type<T, Mathlib>;
                                                      ^
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h:77:26: error: ‘derived_alt’ does not name a type
  TensorInitializer(const derived_alt<U>&  tensor) : black_cat_array(tensor.innerShape()) {
                          ^~~~~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h:77:37: error: expected ‘,’ or ‘...’ before ‘<’ token
  TensorInitializer(const derived_alt<U>&  tensor) : black_cat_array(tensor.innerShape()) {
                                     ^
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h: In constructor ‘BC::TensorInitializer<_tensor<t, ml>, typename std::enable_if<BC::MTF::isCorePure<t>::conditional, void>::type>::TensorInitializer(int)’:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h:77:69: error: ‘tensor’ was not declared in this scope
  TensorInitializer(const derived_alt<U>&  tensor) : black_cat_array(tensor.innerShape()) {
                                                                     ^~~~~~
In file included from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10:0,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/TensorBase.h: At global scope:
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:38:71: error: expected ‘;’ before ‘<’ token
  template<class    U> using deriv   = typename shell_of<derived>::type<U, Mathlib>;
                                                                       ^
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:39:76: error: expected ‘;’ before ‘<’ token
  template<class... U> using functor = typename shell_of<functor_type>::type<U...>;
                                                                            ^
../UnitTests/../BC_Internals/BC_Core/TensorBase.h: In member function ‘auto BC::TensorBase<derived>::operator[](int)’:
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:83:68: error: expected ‘(’ before ‘<’ token
     auto operator [] (int i)    { return typename base<RANK>::slice<decltype(slice(0)), Mathlib>(slice(i)); }
                                                                    ^
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:83:69: error: expected primary-expression before ‘decltype’
     auto operator [] (int i)    { return typename base<RANK>::slice<decltype(slice(0)), Mathlib>(slice(i)); }
                                                                     ^~~~~~~~
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:83:69: error: expected ‘;’ before ‘decltype’
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:83:87: error: expected unqualified-id before ‘,’ token
     auto operator [] (int i)    { return typename base<RANK>::slice<decltype(slice(0)), Mathlib>(slice(i)); }
                                                                                       ^
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:83:96: error: expected initializer before ‘>’ token
     auto operator [] (int i)    { return typename base<RANK>::slice<decltype(slice(0)), Mathlib>(slice(i)); }
                                                                                                ^
../UnitTests/../BC_Internals/BC_Core/TensorBase.h: In member function ‘const auto BC::TensorBase<derived>::operator[](int) const’:
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:84:74: error: expected ‘(’ before ‘<’ token
  const auto operator [] (int i) const { return typename base<RANK>::slice<decltype(slice(0)), Mathlib>(slice(i)); }
                                                                          ^
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:84:75: error: expected primary-expression before ‘decltype’
  const auto operator [] (int i) const { return typename base<RANK>::slice<decltype(slice(0)), Mathlib>(slice(i)); }
                                                                           ^~~~~~~~
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:84:75: error: expected ‘;’ before ‘decltype’
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:84:93: error: expected unqualified-id before ‘,’ token
  const auto operator [] (int i) const { return typename base<RANK>::slice<decltype(slice(0)), Mathlib>(slice(i)); }
                                                                                             ^
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:84:102: error: expected initializer before ‘>’ token
  const auto operator [] (int i) const { return typename base<RANK>::slice<decltype(slice(0)), Mathlib>(slice(i)); }
                                                                                                      ^
In file included from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:50:0,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Vector.h: At global scope:
../UnitTests/../BC_Internals/BC_Core/Vector.h:45:15: error: ‘unary_expression_transpose’ was not declared in this scope
  const Vector<unary_expression_transpose<typename MTF::determine_scalar<T>::type, typename parent_class::functor_type>, Mathlib> t() const {
               ^~~~~~~~~~~~~~~~~~~~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Vector.h:45:118: error: template argument 1 is invalid
  const Vector<unary_expression_transpose<typename MTF::determine_scalar<T>::type, typename parent_class::functor_type>, Mathlib> t() const {
                                                                                                                      ^
../UnitTests/../BC_Internals/BC_Core/Vector.h:45:119: error: expected unqualified-id before ‘,’ token
  const Vector<unary_expression_transpose<typename MTF::determine_scalar<T>::type, typename parent_class::functor_type>, Mathlib> t() const {
                                                                                                                       ^
In file included from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:51:0,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Matrix.h:47:15: error: ‘unary_expression_transpose’ was not declared in this scope
  const Matrix<unary_expression_transpose<typename MTF::determine_scalar<T>::type, typename parent_class::functor_type>, Mathlib> t() const {
               ^~~~~~~~~~~~~~~~~~~~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Matrix.h:47:118: error: template argument 1 is invalid
  const Matrix<unary_expression_transpose<typename MTF::determine_scalar<T>::type, typename parent_class::functor_type>, Mathlib> t() const {
                                                                                                                      ^
../UnitTests/../BC_Internals/BC_Core/Matrix.h:47:119: error: expected unqualified-id before ‘,’ token
  const Matrix<unary_expression_transpose<typename MTF::determine_scalar<T>::type, typename parent_class::functor_type>, Mathlib> t() const {
                                                                                                                       ^
In file included from ../UnitTests/main.cpp:4:0:
../UnitTests/SpeedTests.h: In function ‘int speedTestDelayedEval()’:
../UnitTests/SpeedTests.h:43:11: error: no match for ‘operator==’ (operand types are ‘vec {aka BC::Vector<float>}’ and ‘int’)
   a = ((e == b ** c) + d);
         ~~^~~~~~~~~
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:12:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:180:38: note: candidate: template<class pDeriv> int BC::Tensor_Operations< <template-parameter-1-1> >::operator==(const BC::Tensor_Operations<param_deriv>&) [with pDeriv = pDeriv; derived = BC::Vector<float>]
  typename impl<pDeriv, assign>::type operator ==(const Tensor_Operations<pDeriv>& param) {
                                      ^~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:180:38: note:   template argument deduction/substitution failed:
In file included from ../UnitTests/main.cpp:4:0:
../UnitTests/SpeedTests.h:43:19: note:   mismatched types ‘const BC::Tensor_Operations<A>’ and ‘int’
   a = ((e == b ** c) + d);
                   ^
../UnitTests/SpeedTests.h: In function ‘int speedTestsScalarIteration()’:
../UnitTests/SpeedTests.h:136:9: error: ‘using mat = class BC::Matrix<float> {aka class BC::Matrix<float>}’ has no member named ‘t’
   c = a.t() * b;
         ^
../UnitTests/main.cpp: In function ‘auto test()’:
../UnitTests/main.cpp:40:8: error: ‘using mat = class BC::Matrix<float> {aka class BC::Matrix<float>}’ has no member named ‘t’
  d = a.t();
        ^
../UnitTests/main.cpp:41:8: error: ‘using mat = class BC::Matrix<float> {aka class BC::Matrix<float>}’ has no member named ‘t’
  e = b.t();
        ^
../UnitTests/main.cpp:47:8: error: no match for ‘operator*’ (operand types are ‘mat {aka BC::Matrix<float>}’ and ‘mat {aka BC::Matrix<float>}’)
  c = d * e;
      ~~^~~
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:12:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:153:33: note: candidate: template<class pDeriv, class voider> typename BC::Tensor_Operations< <template-parameter-1-1> >::dp_impl<param_deriv>::type BC::Tensor_Operations< <template-parameter-1-1> >::operator*(const BC::Tensor_Operations<param_deriv>&) const [with pDeriv = pDeriv; voider = voider; derived = BC::Matrix<float>]
  typename dp_impl<pDeriv>::type operator *(const Tensor_Operations<pDeriv>& param) const {
                                 ^~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:153:33: note:   template argument deduction/substitution failed:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:152:25: error: no type named ‘type’ in ‘struct std::enable_if<false, void>’
  template<class pDeriv, class voider = typename std::enable_if<dp_impl<pDeriv>::short_params || dp_impl<pDeriv>::short_params>::type>
                         ^~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:164:33: note: candidate: template<class pDeriv, class voider, int foo> typename BC::Tensor_Operations< <template-parameter-1-1> >::dp_impl<param_deriv>::type BC::Tensor_Operations< <template-parameter-1-1> >::operator*(const BC::Tensor_Operations<param_deriv>&) const [with pDeriv = pDeriv; voider = voider; int foo = foo; derived = BC::Matrix<float>]
  typename dp_impl<pDeriv>::type operator *(const Tensor_Operations<pDeriv>& param) const {
                                 ^~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:164:33: note:   template argument deduction/substitution failed:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h: In substitution of ‘template<class pDeriv, class voider, int foo> typename BC::Tensor_Operations< <template-parameter-1-1> >::dp_impl<param_deriv>::type BC::Tensor_Operations< <template-parameter-1-1> >::operator*(const BC::Tensor_Operations<param_deriv>&) const [with pDeriv = BC::Matrix<float>; voider = void; int foo = 0]’:
../UnitTests/main.cpp:47:10:   required from here
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:164:33: error: no type named ‘type’ in ‘struct BC::Tensor_Operations<BC::Matrix<float> >::dp_impl<BC::Matrix<float> >’
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:169:43: note: candidate: const BC::alternate_asterix_denoter<derived> BC::Tensor_Operations< <template-parameter-1-1> >::operator*() const [with derived = BC::Matrix<float>]
  const alternate_asterix_denoter<derived> operator * () const {
                                           ^~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:169:43: note:   candidate expects 0 arguments, 1 provided
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:174:35: note: candidate: template<class pDeriv> int BC::Tensor_Operations< <template-parameter-1-1> >::operator*(const BC::alternate_asterix_denoter<pDeriv>&) const [with pDeriv = pDeriv; derived = BC::Matrix<float>]
  typename impl<pDeriv, mul>::type operator *(const alternate_asterix_denoter<pDeriv>& param) const {
                                   ^~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:174:35: note:   template argument deduction/substitution failed:
../UnitTests/main.cpp:47:10: note:   ‘mat {aka BC::Matrix<float>}’ is not derived from ‘const BC::alternate_asterix_denoter<derived>’
  c = d * e;
          ^
../UnitTests/main.cpp:50:8: error: ‘using mat = class BC::Matrix<float> {aka class BC::Matrix<float>}’ has no member named ‘t’
  c = a.t() * b.t();
        ^
../UnitTests/main.cpp:50:16: error: ‘using mat = class BC::Matrix<float> {aka class BC::Matrix<float>}’ has no member named ‘t’
  c = a.t() * b.t();
                ^
../UnitTests/main.cpp:53:8: error: ‘using mat = class BC::Matrix<float> {aka class BC::Matrix<float>}’ has no member named ‘t’
  c = a.t() * e;
        ^
../UnitTests/main.cpp:56:12: error: ‘using mat = class BC::Matrix<float> {aka class BC::Matrix<float>}’ has no member named ‘t’
  c = d * b.t();
            ^
../UnitTests/main.cpp:59:8: error: no match for ‘operator*’ (operand types are ‘mat {aka BC::Matrix<float>}’ and ‘scal {aka BC::Scalar<float, BC::CPU>}’)
  c = d * scal(2) * e;
      ~~^~~~~~~~~
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:12:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:153:33: note: candidate: template<class pDeriv, class voider> typename BC::Tensor_Operations< <template-parameter-1-1> >::dp_impl<param_deriv>::type BC::Tensor_Operations< <template-parameter-1-1> >::operator*(const BC::Tensor_Operations<param_deriv>&) const [with pDeriv = pDeriv; voider = voider; derived = BC::Matrix<float>]
  typename dp_impl<pDeriv>::type operator *(const Tensor_Operations<pDeriv>& param) const {
                                 ^~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:153:33: note:   template argument deduction/substitution failed:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h: In substitution of ‘template<class pDeriv, class voider> typename BC::Tensor_Operations< <template-parameter-1-1> >::dp_impl<param_deriv>::type BC::Tensor_Operations< <template-parameter-1-1> >::operator*(const BC::Tensor_Operations<param_deriv>&) const [with pDeriv = BC::Scalar<float, BC::CPU>; voider = void]’:
../UnitTests/main.cpp:59:16:   required from here
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:153:33: error: no type named ‘type’ in ‘struct BC::Tensor_Operations<BC::Matrix<float> >::dp_impl<BC::Scalar<float, BC::CPU> >’
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:164:33: note: candidate: template<class pDeriv, class voider, int foo> typename BC::Tensor_Operations< <template-parameter-1-1> >::dp_impl<param_deriv>::type BC::Tensor_Operations< <template-parameter-1-1> >::operator*(const BC::Tensor_Operations<param_deriv>&) const [with pDeriv = pDeriv; voider = voider; int foo = foo; derived = BC::Matrix<float>]
  typename dp_impl<pDeriv>::type operator *(const Tensor_Operations<pDeriv>& param) const {
                                 ^~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:164:33: note:   template argument deduction/substitution failed:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:163:3: error: no type named ‘type’ in ‘struct std::enable_if<false, void>’
   class voider = typename std::enable_if<!dp_impl<pDeriv>::short_params && !dp_impl<pDeriv>::short_params>::type, int foo = 0>
   ^~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:169:43: note: candidate: const BC::alternate_asterix_denoter<derived> BC::Tensor_Operations< <template-parameter-1-1> >::operator*() const [with derived = BC::Matrix<float>]
  const alternate_asterix_denoter<derived> operator * () const {
                                           ^~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:169:43: note:   candidate expects 0 arguments, 1 provided
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:174:35: note: candidate: template<class pDeriv> int BC::Tensor_Operations< <template-parameter-1-1> >::operator*(const BC::alternate_asterix_denoter<pDeriv>&) const [with pDeriv = pDeriv; derived = BC::Matrix<float>]
  typename impl<pDeriv, mul>::type operator *(const alternate_asterix_denoter<pDeriv>& param) const {
                                   ^~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:174:35: note:   template argument deduction/substitution failed:
../UnitTests/main.cpp:59:16: note:   ‘scal {aka BC::Scalar<float, BC::CPU>}’ is not derived from ‘const BC::alternate_asterix_denoter<derived>’
  c = d * scal(2) * e;
                ^
../UnitTests/main.cpp:62:14: error: no match for ‘operator*’ (operand types are ‘scal {aka BC::Scalar<float, BC::CPU>}’ and ‘mat {aka BC::Matrix<float>}’)
  c = scal(2) * d * e;
      ~~~~~~~~^~~
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:12:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:153:33: note: candidate: template<class pDeriv, class voider> typename BC::Tensor_Operations< <template-parameter-1-1> >::dp_impl<param_deriv>::type BC::Tensor_Operations< <template-parameter-1-1> >::operator*(const BC::Tensor_Operations<param_deriv>&) const [with pDeriv = pDeriv; voider = voider; derived = BC::Scalar<float, BC::CPU>]
  typename dp_impl<pDeriv>::type operator *(const Tensor_Operations<pDeriv>& param) const {
                                 ^~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:153:33: note:   template argument deduction/substitution failed:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h: In substitution of ‘template<class pDeriv, class voider> typename BC::Tensor_Operations< <template-parameter-1-1> >::dp_impl<param_deriv>::type BC::Tensor_Operations< <template-parameter-1-1> >::operator*(const BC::Tensor_Operations<param_deriv>&) const [with pDeriv = BC::Matrix<float>; voider = void]’:
../UnitTests/main.cpp:62:16:   required from here
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:153:33: error: no type named ‘type’ in ‘struct BC::Tensor_Operations<BC::Scalar<float, BC::CPU> >::dp_impl<BC::Matrix<float> >’
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:164:33: note: candidate: template<class pDeriv, class voider, int foo> typename BC::Tensor_Operations< <template-parameter-1-1> >::dp_impl<param_deriv>::type BC::Tensor_Operations< <template-parameter-1-1> >::operator*(const BC::Tensor_Operations<param_deriv>&) const [with pDeriv = pDeriv; voider = voider; int foo = foo; derived = BC::Scalar<float, BC::CPU>]
  typename dp_impl<pDeriv>::type operator *(const Tensor_Operations<pDeriv>& param) const {
                                 ^~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:164:33: note:   template argument deduction/substitution failed:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:163:3: error: no type named ‘type’ in ‘struct std::enable_if<false, void>’
   class voider = typename std::enable_if<!dp_impl<pDeriv>::short_params && !dp_impl<pDeriv>::short_params>::type, int foo = 0>
   ^~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:169:43: note: candidate: const BC::alternate_asterix_denoter<derived> BC::Tensor_Operations< <template-parameter-1-1> >::operator*() const [with derived = BC::Scalar<float, BC::CPU>]
  const alternate_asterix_denoter<derived> operator * () const {
                                           ^~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:169:43: note:   candidate expects 0 arguments, 1 provided
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:174:35: note: candidate: template<class pDeriv> int BC::Tensor_Operations< <template-parameter-1-1> >::operator*(const BC::alternate_asterix_denoter<pDeriv>&) const [with pDeriv = pDeriv; derived = BC::Scalar<float, BC::CPU>]
  typename impl<pDeriv, mul>::type operator *(const alternate_asterix_denoter<pDeriv>& param) const {
                                   ^~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:174:35: note:   template argument deduction/substitution failed:
../UnitTests/main.cpp:62:16: note:   ‘mat {aka BC::Matrix<float>}’ is not derived from ‘const BC::alternate_asterix_denoter<derived>’
  c = scal(2) * d * e;
                ^
../UnitTests/main.cpp:64:8: error: no match for ‘operator*’ (operand types are ‘mat {aka BC::Matrix<float>}’ and ‘mat {aka BC::Matrix<float>}’)
  c = d * e * scal(2); ////This is the only version that is not accounted for (it is also the least common notation)
      ~~^~~
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:12:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:153:33: note: candidate: template<class pDeriv, class voider> typename BC::Tensor_Operations< <template-parameter-1-1> >::dp_impl<param_deriv>::type BC::Tensor_Operations< <template-parameter-1-1> >::operator*(const BC::Tensor_Operations<param_deriv>&) const [with pDeriv = pDeriv; voider = voider; derived = BC::Matrix<float>]
  typename dp_impl<pDeriv>::type operator *(const Tensor_Operations<pDeriv>& param) const {
                                 ^~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:153:33: note:   template argument deduction/substitution failed:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:152:25: error: no type named ‘type’ in ‘struct std::enable_if<false, void>’
  template<class pDeriv, class voider = typename std::enable_if<dp_impl<pDeriv>::short_params || dp_impl<pDeriv>::short_params>::type>
                         ^~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:164:33: note: candidate: template<class pDeriv, class voider, int foo> typename BC::Tensor_Operations< <template-parameter-1-1> >::dp_impl<param_deriv>::type BC::Tensor_Operations< <template-parameter-1-1> >::operator*(const BC::Tensor_Operations<param_deriv>&) const [with pDeriv = pDeriv; voider = voider; int foo = foo; derived = BC::Matrix<float>]
  typename dp_impl<pDeriv>::type operator *(const Tensor_Operations<pDeriv>& param) const {
                                 ^~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:164:33: note:   template argument deduction/substitution failed:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h: In substitution of ‘template<class pDeriv, class voider, int foo> typename BC::Tensor_Operations< <template-parameter-1-1> >::dp_impl<param_deriv>::type BC::Tensor_Operations< <template-parameter-1-1> >::operator*(const BC::Tensor_Operations<param_deriv>&) const [with pDeriv = BC::Matrix<float>; voider = void; int foo = 0]’:
../UnitTests/main.cpp:64:10:   required from here
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:164:33: error: no type named ‘type’ in ‘struct BC::Tensor_Operations<BC::Matrix<float> >::dp_impl<BC::Matrix<float> >’
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:169:43: note: candidate: const BC::alternate_asterix_denoter<derived> BC::Tensor_Operations< <template-parameter-1-1> >::operator*() const [with derived = BC::Matrix<float>]
  const alternate_asterix_denoter<derived> operator * () const {
                                           ^~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:169:43: note:   candidate expects 0 arguments, 1 provided
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:174:35: note: candidate: template<class pDeriv> int BC::Tensor_Operations< <template-parameter-1-1> >::operator*(const BC::alternate_asterix_denoter<pDeriv>&) const [with pDeriv = pDeriv; derived = BC::Matrix<float>]
  typename impl<pDeriv, mul>::type operator *(const alternate_asterix_denoter<pDeriv>& param) const {
                                   ^~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:174:35: note:   template argument deduction/substitution failed:
../UnitTests/main.cpp:64:10: note:   ‘mat {aka BC::Matrix<float>}’ is not derived from ‘const BC::alternate_asterix_denoter<derived>’
  c = d * e * scal(2); ////This is the only version that is not accounted for (it is also the least common notation)
          ^
../UnitTests/main.cpp:66:8: error: no match for ‘operator*’ (operand types are ‘mat {aka BC::Matrix<float>}’ and ‘scal {aka BC::Scalar<float, BC::CPU>}’)
  c = d * scal(2) * e;
      ~~^~~~~~~~~
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:12:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:153:33: note: candidate: template<class pDeriv, class voider> typename BC::Tensor_Operations< <template-parameter-1-1> >::dp_impl<param_deriv>::type BC::Tensor_Operations< <template-parameter-1-1> >::operator*(const BC::Tensor_Operations<param_deriv>&) const [with pDeriv = pDeriv; voider = voider; derived = BC::Matrix<float>]
  typename dp_impl<pDeriv>::type operator *(const Tensor_Operations<pDeriv>& param) const {
                                 ^~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:153:33: note:   template argument deduction/substitution failed:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h: In substitution of ‘template<class pDeriv, class voider> typename BC::Tensor_Operations< <template-parameter-1-1> >::dp_impl<param_deriv>::type BC::Tensor_Operations< <template-parameter-1-1> >::operator*(const BC::Tensor_Operations<param_deriv>&) const [with pDeriv = BC::Scalar<float, BC::CPU>; voider = void]’:
../UnitTests/main.cpp:66:16:   required from here
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:153:33: error: no type named ‘type’ in ‘struct BC::Tensor_Operations<BC::Matrix<float> >::dp_impl<BC::Scalar<float, BC::CPU> >’
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:164:33: note: candidate: template<class pDeriv, class voider, int foo> typename BC::Tensor_Operations< <template-parameter-1-1> >::dp_impl<param_deriv>::type BC::Tensor_Operations< <template-parameter-1-1> >::operator*(const BC::Tensor_Operations<param_deriv>&) const [with pDeriv = pDeriv; voider = voider; int foo = foo; derived = BC::Matrix<float>]
  typename dp_impl<pDeriv>::type operator *(const Tensor_Operations<pDeriv>& param) const {
                                 ^~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:164:33: note:   template argument deduction/substitution failed:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:163:3: error: no type named ‘type’ in ‘struct std::enable_if<false, void>’
   class voider = typename std::enable_if<!dp_impl<pDeriv>::short_params && !dp_impl<pDeriv>::short_params>::type, int foo = 0>
   ^~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:169:43: note: candidate: const BC::alternate_asterix_denoter<derived> BC::Tensor_Operations< <template-parameter-1-1> >::operator*() const [with derived = BC::Matrix<float>]
  const alternate_asterix_denoter<derived> operator * () const {
                                           ^~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:169:43: note:   candidate expects 0 arguments, 1 provided
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:174:35: note: candidate: template<class pDeriv> int BC::Tensor_Operations< <template-parameter-1-1> >::operator*(const BC::alternate_asterix_denoter<pDeriv>&) const [with pDeriv = pDeriv; derived = BC::Matrix<float>]
  typename impl<pDeriv, mul>::type operator *(const alternate_asterix_denoter<pDeriv>& param) const {
                                   ^~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:174:35: note:   template argument deduction/substitution failed:
../UnitTests/main.cpp:66:16: note:   ‘scal {aka BC::Scalar<float, BC::CPU>}’ is not derived from ‘const BC::alternate_asterix_denoter<derived>’
  c = d * scal(2) * e;
                ^
../UnitTests/main.cpp:75:10: error: request for member ‘eval’ in ‘((BC::Tensor_Operations<BC::Matrix<float> >*)(& c))->BC::Tensor_Operations< <template-parameter-1-1> >::operator+<BC::Matrix<float> >(c)’, which is of non-class type ‘int’
  (c + c).eval();
          ^~~~
../UnitTests/main.cpp:76:8: error: ‘using mat = class BC::Matrix<float> {aka class BC::Matrix<float>}’ has no member named ‘t’
  c = a.t() * b.t();
        ^
../UnitTests/main.cpp:76:16: error: ‘using mat = class BC::Matrix<float> {aka class BC::Matrix<float>}’ has no member named ‘t’
  c = a.t() * b.t();
                ^
../UnitTests/main.cpp:80:8: error: ‘using mat = class BC::Matrix<float> {aka class BC::Matrix<float>}’ has no member named ‘t’
  c = a.t() * A * (b.t() * A);
        ^
../UnitTests/main.cpp:80:21: error: ‘using mat = class BC::Matrix<float> {aka class BC::Matrix<float>}’ has no member named ‘t’
  c = a.t() * A * (b.t() * A);
                     ^
../UnitTests/main.cpp:94:14: error: invalid operands of types ‘void’ and ‘void’ to binary ‘operator+’
  d[1] = d[1] + d[1];
         ~~~~~^~~~~~
../UnitTests/main.cpp:99:8: error: invalid types ‘void[int]’ for array subscript
  d[1][1] = d[1][1] + d[1][1];
        ^
../UnitTests/main.cpp:99:18: error: invalid types ‘void[int]’ for array subscript
  d[1][1] = d[1][1] + d[1][1];
                  ^
../UnitTests/main.cpp:99:28: error: invalid types ‘void[int]’ for array subscript
  d[1][1] = d[1][1] + d[1][1];
                            ^
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:13:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Utility.h: In instantiation of ‘void BC::Tensor_Utility<deriv, typename std::enable_if<(isPrim<typename BC::determine_functor< <template-parameter-1-1> >::fscal> || BC::MTF::isCore<typename BC::determine_functor< <template-parameter-1-1> >::type>::conditional), void>::type>::read(std::ifstream&, bool, bool) [with deriv = BC::Matrix<double>; typename std::enable_if<(isPrim<typename BC::determine_functor< <template-parameter-1-1> >::fscal> || BC::MTF::isCore<typename BC::determine_functor< <template-parameter-1-1> >::type>::conditional), void>::type = void; std::ifstream = std::basic_ifstream<char>]’:
../UnitTests/main.cpp:113:15:   required from here
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Utility.h:132:22: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
    for (int i = 0; i < dims.size(); ++i) {
                    ~~^~~~~~~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Utility.h:138:92: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
    MATHLIB::HostToDevice(asDerived().data().core(), &data[data[0] + 1], asDerived().size() > data.size() ? data.size() : asDerived().size());
                                                                                             
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:13:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Utility.h:140:86: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
    MATHLIB::HostToDevice(asDerived().data().core(), &data[0],     asDerived().size() > data.size() ? data.size() : asDerived().size());
                                                                                       
In file included from ../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Core_Slice.h:17:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Core.h:13,
                 from ../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h:12,
                 from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:15,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Core_Scalar.h: In instantiation of ‘BC::Tensor_Scalar<PARENT>::Tensor_Scalar(BC::Tensor_Scalar<PARENT>::scalar*, const PARENT&) [with PARENT = BC::Tensor_Core<BC::Matrix<float> >; BC::Tensor_Scalar<PARENT>::scalar = float]’:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h:33:63:   required from ‘BC::TensorInitializer<derived, expression_tensor>::TensorInitializer(const params& ...) [with params = {float*, BC::Tensor_Core<BC::Matrix<float, BC::CPU> >}; derived = BC::Scalar<BC::Tensor_Scalar<BC::Tensor_Core<BC::Matrix<float> > >, BC::CPU>; expression_tensor = void]’
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:50:51:   required from ‘BC::TensorBase<derived>::TensorBase(const params& ...) [with params = {float*, BC::Tensor_Core<BC::Matrix<float, BC::CPU> >}; derived = BC::Scalar<BC::Tensor_Scalar<BC::Tensor_Core<BC::Matrix<float> > >, BC::CPU>]’
../UnitTests/../BC_Internals/BC_Core/Scalar.h:61:97:   required from ‘BC::Scalar< <template-parameter-1-1>, ML>::Scalar(const var1&, const var2&, const params& ...) [with var1 = float*; var2 = BC::Tensor_Core<BC::Matrix<float> >; params = {}; T = BC::Tensor_Scalar<BC::Tensor_Core<BC::Matrix<float> > >; Mathlib = BC::CPU]’
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:92:19:   required from ‘auto BC::TensorBase<derived>::getScalar(int) [with derived = BC::Matrix<float>]’
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:96:52:   required from ‘auto BC::TensorBase<derived>::operator()(int) [with derived = BC::Matrix<float>]’
../UnitTests/main.cpp:33:6:   required from here
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Core_Scalar.h:36:10: warning: ‘BC::Tensor_Scalar<BC::Tensor_Core<BC::Matrix<float> > >::array_slice’ will be initialized after [-Wreorder]
  scalar* array_slice;
          ^~~~~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Core_Scalar.h:35:16: warning:   ‘const BC::Tensor_Core<BC::Matrix<float> >& BC::Tensor_Scalar<BC::Tensor_Core<BC::Matrix<float> > >::parent’ [-Wreorder]
  const PARENT& parent;
                ^~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Core_Scalar.h:41:2: warning:   when initialized here [-Wreorder]
  Tensor_Scalar(scalar* array, const PARENT& parent_) : array_slice(array), parent(parent_) {}
  ^~~~~~~~~~~~~
In file included from ../UnitTests/../BC_Internals/BC_MathLibraries/Mathematics_CPU.h:15:0,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:32,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_MathLibraries/BC_PrintFunctions.h: In instantiation of ‘void BC::printHelper(const T&, int_ranks, int, std::__cxx11::string, int) [with T = const float*; int_ranks = int*; std::__cxx11::string = std::__cxx11::basic_string<char>]’:
../UnitTests/../BC_Internals/BC_MathLibraries/BC_PrintFunctions.h:102:13:   required from ‘void BC::print(const T&, RANKS, int, int) [with T = const float*; RANKS = int*]’
../UnitTests/../BC_Internals/BC_MathLibraries/Mathematics_CPU.h:98:12:   required from ‘static void BC::CPU::print(T, RANKS, int, int) [with T = const float*; RANKS = int*]’
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Utility.h:75:17:   required from ‘void BC::Tensor_Utility<deriv, typename std::enable_if<(isPrim<typename BC::determine_functor< <template-parameter-1-1> >::fscal> || BC::MTF::isCore<typename BC::determine_functor< <template-parameter-1-1> >::type>::conditional), void>::type>::print() const [with deriv = BC::Matrix<float>; typename std::enable_if<(isPrim<typename BC::determine_functor< <template-parameter-1-1> >::fscal> || BC::MTF::isCore<typename BC::determine_functor< <template-parameter-1-1> >::type>::conditional), void>::type = void]’
../UnitTests/main.cpp:37:10:   required from here
../UnitTests/../BC_Internals/BC_MathLibraries/BC_PrintFunctions.h:43:38: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
     str = str.substr(0, str.length() < printSpace ? str.length() : printSpace);
                                       
../UnitTests/../BC_Internals/BC_MathLibraries/BC_PrintFunctions.h:46:22: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
     if (str.length() < printSpace)
                       
../UnitTests/../BC_Internals/BC_MathLibraries/BC_PrintFunctions.h:67:37: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
    str = str.substr(0, str.length() < printSpace ? str.length() : printSpace);
                                      
../UnitTests/../BC_Internals/BC_MathLibraries/BC_PrintFunctions.h:70:21: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
    if (str.length() < printSpace)
                      
../UnitTests/../BC_Internals/BC_MathLibraries/BC_PrintFunctions.h: In instantiation of ‘void BC::printHelper(const T&, int_ranks, int, std::__cxx11::string, int) [with T = const double*; int_ranks = int*; std::__cxx11::string = std::__cxx11::basic_string<char>]’:
../UnitTests/../BC_Internals/BC_MathLibraries/BC_PrintFunctions.h:102:13:   required from ‘void BC::print(const T&, RANKS, int, int) [with T = const double*; RANKS = int*]’
../UnitTests/../BC_Internals/BC_MathLibraries/Mathematics_CPU.h:98:12:   required from ‘static void BC::CPU::print(T, RANKS, int, int) [with T = const double*; RANKS = int*]’
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Utility.h:75:17:   required from ‘void BC::Tensor_Utility<deriv, typename std::enable_if<(isPrim<typename BC::determine_functor< <template-parameter-1-1> >::fscal> || BC::MTF::isCore<typename BC::determine_functor< <template-parameter-1-1> >::type>::conditional), void>::type>::print() const [with deriv = BC::Matrix<double>; typename std::enable_if<(isPrim<typename BC::determine_functor< <template-parameter-1-1> >::fscal> || BC::MTF::isCore<typename BC::determine_functor< <template-parameter-1-1> >::type>::conditional), void>::type = void]’
../UnitTests/main.cpp:114:14:   required from here
../UnitTests/../BC_Internals/BC_MathLibraries/BC_PrintFunctions.h:43:38: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
     str = str.substr(0, str.length() < printSpace ? str.length() : printSpace);
                                       
../UnitTests/../BC_Internals/BC_MathLibraries/BC_PrintFunctions.h:46:22: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
     if (str.length() < printSpace)
                       
../UnitTests/../BC_Internals/BC_MathLibraries/BC_PrintFunctions.h:67:37: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
    str = str.substr(0, str.length() < printSpace ? str.length() : printSpace);
                                      
../UnitTests/../BC_Internals/BC_MathLibraries/BC_PrintFunctions.h:70:21: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
    if (str.length() < printSpace)
                      
UnitTests/subdir.mk:18: recipe for target 'UnitTests/main.o' failed
make: *** [UnitTests/main.o] Error 1
17:11:19 **** Incremental Build of configuration Debug for project BlackCat_LibraryCPU ****
make all 
Building file: ../UnitTests/main.cpp
Invoking: GCC C++ Compiler
g++ -O0 -g3 -Wall -c -fmessage-length=0 -MMD -MP -MF"UnitTests/main.d" -MT"UnitTests/main.o" -o "UnitTests/main.o" "../UnitTests/main.cpp"
In file included from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:32:0,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_MathLibraries/Mathematics_CPU.h:74:0: warning: ignoring #pragma omp parallel [-Wunknown-pragmas]
 #pragma omp parallel for
 
../UnitTests/../BC_Internals/BC_MathLibraries/Mathematics_CPU.h:78:0: warning: ignoring #pragma omp barrier [-Wunknown-pragmas]
 #pragma omp barrier
 
../UnitTests/../BC_Internals/BC_MathLibraries/Mathematics_CPU.h:88:0: warning: ignoring #pragma omp parallel [-Wunknown-pragmas]
 #pragma omp parallel for
 
../UnitTests/../BC_Internals/BC_MathLibraries/Mathematics_CPU.h:92:0: warning: ignoring #pragma omp barrier [-Wunknown-pragmas]
 #pragma omp barrier
 
In file included from ../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Core_Slice.h:17:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Core.h:13,
                 from ../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h:12,
                 from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:15,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Core_Scalar.h:22:0: warning: "__BCinline__" redefined
 #define __BCinline__
 
In file included from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:29:0,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Expressions/BlackCat_Internal_Definitions.h:25:0: note: this is the location of the previous definition
 #define __BCinline__ __BC_gcpu__ __attribute__((always_inline))
 
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:12:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:102:47: error: ‘binary_expression_dotproduct’ was not declared in this scope
         typename MTF::expression_substitution<binary_expression_dotproduct<scalar_type, functor_type, param_functor_type, math_library>,param_deriv>::type, void>::type;
                                               ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:102:135: error: wrong number of template arguments (4, should be 2)
         typename MTF::expression_substitution<binary_expression_dotproduct<scalar_type, functor_type, param_functor_type, math_library>,param_deriv>::type, void>::type;
                                                                                                                                       ^
In file included from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:47:0,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_MetaTemplateFunctions/Adhoc.h:18:34: note: provided for ‘template<class, class> struct BC::MTF::expression_substitution’
   template<class, class>  struct expression_substitution;
                                  ^~~~~~~~~~~~~~~~~~~~~~~
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:12:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:102:148: error: template argument 2 is invalid
         typename MTF::expression_substitution<binary_expression_dotproduct<scalar_type, functor_type, param_functor_type, math_library>,param_deriv>::type, void>::type;
                                                                                                                                                    ^
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:102:149: error: expected identifier before ‘::’ token
         typename MTF::expression_substitution<binary_expression_dotproduct<scalar_type, functor_type, param_functor_type, math_library>,param_deriv>::type, void>::type;
                                                                                                                                                     ^~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:105:47: error: ‘binary_expression_dotproduct’ was not declared in this scope
         typename MTF::expression_substitution<binary_expression_dotproduct<scalar_type, functor_type, param_functor_type, math_library>,param_deriv>::type, void>::type;
                                               ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:105:135: error: wrong number of template arguments (4, should be 2)
         typename MTF::expression_substitution<binary_expression_dotproduct<scalar_type, functor_type, param_functor_type, math_library>,param_deriv>::type, void>::type;
                                                                                                                                       ^
In file included from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:47:0,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_MetaTemplateFunctions/Adhoc.h:18:34: note: provided for ‘template<class, class> struct BC::MTF::expression_substitution’
   template<class, class>  struct expression_substitution;
                                  ^~~~~~~~~~~~~~~~~~~~~~~
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:12:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:105:148: error: template argument 2 is invalid
         typename MTF::expression_substitution<binary_expression_dotproduct<scalar_type, functor_type, param_functor_type, math_library>,param_deriv>::type, void>::type;
                                                                                                                                                    ^
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:105:149: error: expected identifier before ‘::’ token
         typename MTF::expression_substitution<binary_expression_dotproduct<scalar_type, functor_type, param_functor_type, math_library>,param_deriv>::type, void>::type;
                                                                                                                                                     ^~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:108:47: error: ‘binary_expression_dotproduct’ was not declared in this scope
         typename MTF::expression_substitution<binary_expression_dotproduct<scalar_type, functor_type, param_functor_type, math_library>,
                                               ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:108:135: error: wrong number of template arguments (4, should be 2)
         typename MTF::expression_substitution<binary_expression_dotproduct<scalar_type, functor_type, param_functor_type, math_library>,
                                                                                                                                       ^
In file included from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:47:0,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_MetaTemplateFunctions/Adhoc.h:18:34: note: provided for ‘template<class, class> struct BC::MTF::expression_substitution’
   template<class, class>  struct expression_substitution;
                                  ^~~~~~~~~~~~~~~~~~~~~~~
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:12:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:109:42: error: template argument 2 is invalid
         Matrix<functor_type, math_library>>::type, void>::type;
                                          ^~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:109:44: error: expected identifier before ‘::’ token
         Matrix<functor_type, math_library>>::type, void>::type;
                                            ^~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:111:62: error: ‘vecType’ was not declared in this scope
   using type    =  typename MTF::IF_ELSE<evaluate_to_vector, vecType,
                                                              ^~~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:112:52: error: ‘matType’ was not declared in this scope
          typename MTF::IF_ELSE<evaluate_to_matrix, matType,
                                                    ^~~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:113:53: error: ‘outerType’ was not declared in this scope
           typename MTF::IF_ELSE<evaluate_to_mat_vv, outerType,
                                                     ^~~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:116:11: error: template argument 2 is invalid
           >::type
           ^
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:117:10: error: template argument 2 is invalid
          >::type
          ^
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:117:10: error: template argument 3 is invalid
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:118:9: error: template argument 2 is invalid
         >::type;
         ^
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:118:9: error: template argument 3 is invalid
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:121:27: error: ‘type’ does not name a type
   using expression_type = type;
                           ^~~~
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:13:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Utility.h: In member function ‘auto BC::Tensor_Utility<deriv, <template-parameter-1-2> >::eval() const’:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Utility.h:34:45: error: expected ‘(’ before ‘<’ token
   return typename MTF::shell_of<deriv>::type<_scalar<deriv>, _mathlib<deriv>>(this->asDerived());
                                             ^
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Utility.h:34:60: error: expected primary-expression before ‘,’ token
   return typename MTF::shell_of<deriv>::type<_scalar<deriv>, _mathlib<deriv>>(this->asDerived());
                                                            ^
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Utility.h:34:76: error: expected primary-expression before ‘>’ token
   return typename MTF::shell_of<deriv>::type<_scalar<deriv>, _mathlib<deriv>>(this->asDerived());
                                                                            ^~
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:15:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h: At global scope:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h:74:54: error: expected ‘;’ before ‘<’ token
  using derived_alt = typename shell_of<derived>::type<T, Mathlib>;
                                                      ^
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h:77:26: error: ‘derived_alt’ does not name a type
  TensorInitializer(const derived_alt<U>&  tensor) : black_cat_array(tensor.innerShape()) {
                          ^~~~~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h:77:37: error: expected ‘,’ or ‘...’ before ‘<’ token
  TensorInitializer(const derived_alt<U>&  tensor) : black_cat_array(tensor.innerShape()) {
                                     ^
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h: In constructor ‘BC::TensorInitializer<_tensor<t, ml>, typename std::enable_if<BC::MTF::isCorePure<t>::conditional, void>::type>::TensorInitializer(int)’:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h:77:69: error: ‘tensor’ was not declared in this scope
  TensorInitializer(const derived_alt<U>&  tensor) : black_cat_array(tensor.innerShape()) {
                                                                     ^~~~~~
In file included from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10:0,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/TensorBase.h: At global scope:
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:38:71: error: expected ‘;’ before ‘<’ token
  template<class    U> using deriv   = typename shell_of<derived>::type<U, Mathlib>;
                                                                       ^
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:39:76: error: expected ‘;’ before ‘<’ token
  template<class... U> using functor = typename shell_of<functor_type>::type<U...>;
                                                                            ^
../UnitTests/../BC_Internals/BC_Core/TensorBase.h: In member function ‘auto BC::TensorBase<derived>::operator[](int)’:
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:83:68: error: expected ‘(’ before ‘<’ token
     auto operator [] (int i)    { return typename base<RANK>::slice<decltype(slice(0)), Mathlib>(slice(i)); }
                                                                    ^
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:83:69: error: expected primary-expression before ‘decltype’
     auto operator [] (int i)    { return typename base<RANK>::slice<decltype(slice(0)), Mathlib>(slice(i)); }
                                                                     ^~~~~~~~
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:83:69: error: expected ‘;’ before ‘decltype’
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:83:87: error: expected unqualified-id before ‘,’ token
     auto operator [] (int i)    { return typename base<RANK>::slice<decltype(slice(0)), Mathlib>(slice(i)); }
                                                                                       ^
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:83:96: error: expected initializer before ‘>’ token
     auto operator [] (int i)    { return typename base<RANK>::slice<decltype(slice(0)), Mathlib>(slice(i)); }
                                                                                                ^
../UnitTests/../BC_Internals/BC_Core/TensorBase.h: In member function ‘const auto BC::TensorBase<derived>::operator[](int) const’:
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:84:74: error: expected ‘(’ before ‘<’ token
  const auto operator [] (int i) const { return typename base<RANK>::slice<decltype(slice(0)), Mathlib>(slice(i)); }
                                                                          ^
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:84:75: error: expected primary-expression before ‘decltype’
  const auto operator [] (int i) const { return typename base<RANK>::slice<decltype(slice(0)), Mathlib>(slice(i)); }
                                                                           ^~~~~~~~
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:84:75: error: expected ‘;’ before ‘decltype’
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:84:93: error: expected unqualified-id before ‘,’ token
  const auto operator [] (int i) const { return typename base<RANK>::slice<decltype(slice(0)), Mathlib>(slice(i)); }
                                                                                             ^
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:84:102: error: expected initializer before ‘>’ token
  const auto operator [] (int i) const { return typename base<RANK>::slice<decltype(slice(0)), Mathlib>(slice(i)); }
                                                                                                      ^
In file included from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:50:0,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Vector.h: At global scope:
../UnitTests/../BC_Internals/BC_Core/Vector.h:45:15: error: ‘unary_expression_transpose’ was not declared in this scope
  const Vector<unary_expression_transpose<typename MTF::determine_scalar<T>::type, typename parent_class::functor_type>, Mathlib> t() const {
               ^~~~~~~~~~~~~~~~~~~~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Vector.h:45:118: error: template argument 1 is invalid
  const Vector<unary_expression_transpose<typename MTF::determine_scalar<T>::type, typename parent_class::functor_type>, Mathlib> t() const {
                                                                                                                      ^
../UnitTests/../BC_Internals/BC_Core/Vector.h:45:119: error: expected unqualified-id before ‘,’ token
  const Vector<unary_expression_transpose<typename MTF::determine_scalar<T>::type, typename parent_class::functor_type>, Mathlib> t() const {
                                                                                                                       ^
In file included from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:51:0,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Matrix.h:47:15: error: ‘unary_expression_transpose’ was not declared in this scope
  const Matrix<unary_expression_transpose<typename MTF::determine_scalar<T>::type, typename parent_class::functor_type>, Mathlib> t() const {
               ^~~~~~~~~~~~~~~~~~~~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Matrix.h:47:118: error: template argument 1 is invalid
  const Matrix<unary_expression_transpose<typename MTF::determine_scalar<T>::type, typename parent_class::functor_type>, Mathlib> t() const {
                                                                                                                      ^
../UnitTests/../BC_Internals/BC_Core/Matrix.h:47:119: error: expected unqualified-id before ‘,’ token
  const Matrix<unary_expression_transpose<typename MTF::determine_scalar<T>::type, typename parent_class::functor_type>, Mathlib> t() const {
                                                                                                                       ^
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:15:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h: In instantiation of ‘class BC::TensorInitializer<BC::Vector<BC::binary_expression<float, BC::mul, BC::Tensor_Core<BC::Vector<float> >, BC::Tensor_Core<BC::Vector<float> > >, BC::CPU>, void>’:
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:21:7:   required from ‘class BC::TensorBase<BC::Vector<BC::binary_expression<float, BC::mul, BC::Tensor_Core<BC::Vector<float> >, BC::Tensor_Core<BC::Vector<float> > >, BC::CPU> >’
../UnitTests/../BC_Internals/BC_Core/Vector.h:17:7:   required from ‘class BC::Vector<BC::binary_expression<float, BC::mul, BC::Tensor_Core<BC::Vector<float> >, BC::Tensor_Core<BC::Vector<float> > >, BC::CPU>’
../UnitTests/SpeedTests.h:43:19:   required from here
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h:28:15: error: ‘BC::TensorInitializer<derived, expression_tensor>::black_cat_array’ has incomplete type
  functor_type black_cat_array;
               ^~~~~~~~~~~~~~~
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:12:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:26:41: note: declaration of ‘using functor_type = BC::_functor<BC::Vector<BC::binary_expression<float, BC::mul, BC::Tensor_Core<BC::Vector<float> >, BC::Tensor_Core<BC::Vector<float> > >, BC::CPU> > {aka class BC::binary_expression<float, BC::mul, BC::Tensor_Core<BC::Vector<float> >, BC::Tensor_Core<BC::Vector<float> > >}’
 template<class,class,class,class> class binary_expression;
                                         ^~~~~~~~~~~~~~~~~
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:15:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h: In instantiation of ‘class BC::TensorInitializer<BC::Vector<BC::binary_expression<float, BC::assign, BC::Tensor_Core<BC::Vector<float> >, BC::binary_expression<float, BC::mul, BC::Tensor_Core<BC::Vector<float> >, BC::Tensor_Core<BC::Vector<float> > > >, BC::CPU>, void>’:
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:21:7:   required from ‘class BC::TensorBase<BC::Vector<BC::binary_expression<float, BC::assign, BC::Tensor_Core<BC::Vector<float> >, BC::binary_expression<float, BC::mul, BC::Tensor_Core<BC::Vector<float> >, BC::Tensor_Core<BC::Vector<float> > > >, BC::CPU> >’
../UnitTests/../BC_Internals/BC_Core/Vector.h:17:7:   required from ‘class BC::Vector<BC::binary_expression<float, BC::assign, BC::Tensor_Core<BC::Vector<float> >, BC::binary_expression<float, BC::mul, BC::Tensor_Core<BC::Vector<float> >, BC::Tensor_Core<BC::Vector<float> > > >, BC::CPU>’
../UnitTests/SpeedTests.h:43:24:   required from here
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h:28:15: error: ‘BC::TensorInitializer<derived, expression_tensor>::black_cat_array’ has incomplete type
  functor_type black_cat_array;
               ^~~~~~~~~~~~~~~
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:12:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:26:41: note: declaration of ‘using functor_type = BC::_functor<BC::Vector<BC::binary_expression<float, BC::assign, BC::Tensor_Core<BC::Vector<float> >, BC::binary_expression<float, BC::mul, BC::Tensor_Core<BC::Vector<float> >, BC::Tensor_Core<BC::Vector<float> > > >, BC::CPU> > {aka class BC::binary_expression<float, BC::assign, BC::Tensor_Core<BC::Vector<float> >, BC::binary_expression<float, BC::mul, BC::Tensor_Core<BC::Vector<float> >, BC::Tensor_Core<BC::Vector<float> > > >}’
 template<class,class,class,class> class binary_expression;
                                         ^~~~~~~~~~~~~~~~~
In file included from ../UnitTests/main.cpp:4:0:
../UnitTests/SpeedTests.h: In function ‘int speedTestsScalarIteration()’:
../UnitTests/SpeedTests.h:136:9: error: ‘using mat = class BC::Matrix<float> {aka class BC::Matrix<float>}’ has no member named ‘t’
   c = a.t() * b;
         ^
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:15:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h: In instantiation of ‘class BC::TensorInitializer<BC::Matrix<BC::binary_expression<float, BC::add, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> > >, BC::CPU>, void>’:
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:21:7:   required from ‘class BC::TensorBase<BC::Matrix<BC::binary_expression<float, BC::add, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> > >, BC::CPU> >’
../UnitTests/../BC_Internals/BC_Core/Matrix.h:17:7:   required from ‘class BC::Matrix<BC::binary_expression<float, BC::add, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> > >, BC::CPU>’
../UnitTests/SpeedTests.h:146:23:   required from here
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h:28:15: error: ‘BC::TensorInitializer<derived, expression_tensor>::black_cat_array’ has incomplete type
  functor_type black_cat_array;
               ^~~~~~~~~~~~~~~
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:12:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:26:41: note: declaration of ‘using functor_type = BC::_functor<BC::Matrix<BC::binary_expression<float, BC::add, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> > >, BC::CPU> > {aka class BC::binary_expression<float, BC::add, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> > >}’
 template<class,class,class,class> class binary_expression;
                                         ^~~~~~~~~~~~~~~~~
In file included from ../UnitTests/main.cpp:4:0:
../UnitTests/SpeedTests.h:146:15: error: no match for ‘operator*’ (operand types are ‘BC::Tensor_Operations<BC::Matrix<float> >::impl<BC::Matrix<float>, BC::add>::type {aka BC::Matrix<BC::binary_expression<float, BC::add, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> > >, BC::CPU>}’ and ‘BC::Tensor_Operations<BC::Matrix<float> >::impl<BC::Matrix<float>, BC::add>::type {aka BC::Matrix<BC::binary_expression<float, BC::add, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> > >, BC::CPU>}’)
   c = (c + a) * (d + b);
       ~~~~~~~~^~~~~~~~~
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:12:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:153:33: note: candidate: template<class pDeriv, class voider> typename BC::Tensor_Operations< <template-parameter-1-1> >::dp_impl<param_deriv>::type BC::Tensor_Operations< <template-parameter-1-1> >::operator*(const BC::Tensor_Operations<param_deriv>&) const [with pDeriv = pDeriv; voider = voider; derived = BC::Matrix<BC::binary_expression<float, BC::add, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> > >, BC::CPU>]
  typename dp_impl<pDeriv>::type operator *(const Tensor_Operations<pDeriv>& param) const {
                                 ^~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:153:33: note:   template argument deduction/substitution failed:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:152:25: error: no type named ‘type’ in ‘struct std::enable_if<false, void>’
  template<class pDeriv, class voider = typename std::enable_if<dp_impl<pDeriv>::short_params || dp_impl<pDeriv>::short_params>::type>
                         ^~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:164:33: note: candidate: template<class pDeriv, class voider, int foo> typename BC::Tensor_Operations< <template-parameter-1-1> >::dp_impl<param_deriv>::type BC::Tensor_Operations< <template-parameter-1-1> >::operator*(const BC::Tensor_Operations<param_deriv>&) const [with pDeriv = pDeriv; voider = voider; int foo = foo; derived = BC::Matrix<BC::binary_expression<float, BC::add, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> > >, BC::CPU>]
  typename dp_impl<pDeriv>::type operator *(const Tensor_Operations<pDeriv>& param) const {
                                 ^~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:164:33: note:   template argument deduction/substitution failed:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h: In substitution of ‘template<class pDeriv, class voider, int foo> typename BC::Tensor_Operations< <template-parameter-1-1> >::dp_impl<param_deriv>::type BC::Tensor_Operations< <template-parameter-1-1> >::operator*(const BC::Tensor_Operations<param_deriv>&) const [with pDeriv = BC::Matrix<BC::binary_expression<float, BC::add, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> > >, BC::CPU>; voider = void; int foo = 0]’:
../UnitTests/SpeedTests.h:146:23:   required from here
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:164:33: error: no type named ‘type’ in ‘struct BC::Tensor_Operations<BC::Matrix<BC::binary_expression<float, BC::add, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> > >, BC::CPU> >::dp_impl<BC::Matrix<BC::binary_expression<float, BC::add, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> > >, BC::CPU> >’
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:169:43: note: candidate: const BC::alternate_asterix_denoter<derived> BC::Tensor_Operations< <template-parameter-1-1> >::operator*() const [with derived = BC::Matrix<BC::binary_expression<float, BC::add, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> > >, BC::CPU>]
  const alternate_asterix_denoter<derived> operator * () const {
                                           ^~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:169:43: note:   candidate expects 0 arguments, 1 provided
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:174:35: note: candidate: template<class pDeriv> typename BC::Tensor_Operations< <template-parameter-1-1> >::impl<pDeriv, BC::mul>::type BC::Tensor_Operations< <template-parameter-1-1> >::operator*(const BC::alternate_asterix_denoter<pDeriv>&) const [with pDeriv = pDeriv; derived = BC::Matrix<BC::binary_expression<float, BC::add, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> > >, BC::CPU>]
  typename impl<pDeriv, mul>::type operator *(const alternate_asterix_denoter<pDeriv>& param) const {
                                   ^~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:174:35: note:   template argument deduction/substitution failed:
In file included from ../UnitTests/main.cpp:4:0:
../UnitTests/SpeedTests.h:146:23: note:   ‘BC::Tensor_Operations<BC::Matrix<float> >::impl<BC::Matrix<float>, BC::add>::type {aka BC::Matrix<BC::binary_expression<float, BC::add, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> > >, BC::CPU>}’ is not derived from ‘const BC::alternate_asterix_denoter<derived>’
   c = (c + a) * (d + b);
                       ^
../UnitTests/main.cpp: In function ‘auto test()’:
../UnitTests/main.cpp:40:8: error: ‘using mat = class BC::Matrix<float> {aka class BC::Matrix<float>}’ has no member named ‘t’
  d = a.t();
        ^
../UnitTests/main.cpp:41:8: error: ‘using mat = class BC::Matrix<float> {aka class BC::Matrix<float>}’ has no member named ‘t’
  e = b.t();
        ^
../UnitTests/main.cpp:47:8: error: no match for ‘operator*’ (operand types are ‘mat {aka BC::Matrix<float>}’ and ‘mat {aka BC::Matrix<float>}’)
  c = d * e;
      ~~^~~
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:12:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:153:33: note: candidate: template<class pDeriv, class voider> typename BC::Tensor_Operations< <template-parameter-1-1> >::dp_impl<param_deriv>::type BC::Tensor_Operations< <template-parameter-1-1> >::operator*(const BC::Tensor_Operations<param_deriv>&) const [with pDeriv = pDeriv; voider = voider; derived = BC::Matrix<float>]
  typename dp_impl<pDeriv>::type operator *(const Tensor_Operations<pDeriv>& param) const {
                                 ^~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:153:33: note:   template argument deduction/substitution failed:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:152:25: error: no type named ‘type’ in ‘struct std::enable_if<false, void>’
  template<class pDeriv, class voider = typename std::enable_if<dp_impl<pDeriv>::short_params || dp_impl<pDeriv>::short_params>::type>
                         ^~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:164:33: note: candidate: template<class pDeriv, class voider, int foo> typename BC::Tensor_Operations< <template-parameter-1-1> >::dp_impl<param_deriv>::type BC::Tensor_Operations< <template-parameter-1-1> >::operator*(const BC::Tensor_Operations<param_deriv>&) const [with pDeriv = pDeriv; voider = voider; int foo = foo; derived = BC::Matrix<float>]
  typename dp_impl<pDeriv>::type operator *(const Tensor_Operations<pDeriv>& param) const {
                                 ^~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:164:33: note:   template argument deduction/substitution failed:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h: In substitution of ‘template<class pDeriv, class voider, int foo> typename BC::Tensor_Operations< <template-parameter-1-1> >::dp_impl<param_deriv>::type BC::Tensor_Operations< <template-parameter-1-1> >::operator*(const BC::Tensor_Operations<param_deriv>&) const [with pDeriv = BC::Matrix<float>; voider = void; int foo = 0]’:
../UnitTests/main.cpp:47:10:   required from here
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:164:33: error: no type named ‘type’ in ‘struct BC::Tensor_Operations<BC::Matrix<float> >::dp_impl<BC::Matrix<float> >’
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:169:43: note: candidate: const BC::alternate_asterix_denoter<derived> BC::Tensor_Operations< <template-parameter-1-1> >::operator*() const [with derived = BC::Matrix<float>]
  const alternate_asterix_denoter<derived> operator * () const {
                                           ^~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:169:43: note:   candidate expects 0 arguments, 1 provided
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:174:35: note: candidate: template<class pDeriv> typename BC::Tensor_Operations< <template-parameter-1-1> >::impl<pDeriv, BC::mul>::type BC::Tensor_Operations< <template-parameter-1-1> >::operator*(const BC::alternate_asterix_denoter<pDeriv>&) const [with pDeriv = pDeriv; derived = BC::Matrix<float>]
  typename impl<pDeriv, mul>::type operator *(const alternate_asterix_denoter<pDeriv>& param) const {
                                   ^~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:174:35: note:   template argument deduction/substitution failed:
../UnitTests/main.cpp:47:10: note:   ‘mat {aka BC::Matrix<float>}’ is not derived from ‘const BC::alternate_asterix_denoter<derived>’
  c = d * e;
          ^
../UnitTests/main.cpp:50:8: error: ‘using mat = class BC::Matrix<float> {aka class BC::Matrix<float>}’ has no member named ‘t’
  c = a.t() * b.t();
        ^
../UnitTests/main.cpp:50:16: error: ‘using mat = class BC::Matrix<float> {aka class BC::Matrix<float>}’ has no member named ‘t’
  c = a.t() * b.t();
                ^
../UnitTests/main.cpp:53:8: error: ‘using mat = class BC::Matrix<float> {aka class BC::Matrix<float>}’ has no member named ‘t’
  c = a.t() * e;
        ^
../UnitTests/main.cpp:56:12: error: ‘using mat = class BC::Matrix<float> {aka class BC::Matrix<float>}’ has no member named ‘t’
  c = d * b.t();
            ^
../UnitTests/main.cpp:59:8: error: no match for ‘operator*’ (operand types are ‘mat {aka BC::Matrix<float>}’ and ‘scal {aka BC::Scalar<float, BC::CPU>}’)
  c = d * scal(2) * e;
      ~~^~~~~~~~~
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:12:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:153:33: note: candidate: template<class pDeriv, class voider> typename BC::Tensor_Operations< <template-parameter-1-1> >::dp_impl<param_deriv>::type BC::Tensor_Operations< <template-parameter-1-1> >::operator*(const BC::Tensor_Operations<param_deriv>&) const [with pDeriv = pDeriv; voider = voider; derived = BC::Matrix<float>]
  typename dp_impl<pDeriv>::type operator *(const Tensor_Operations<pDeriv>& param) const {
                                 ^~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:153:33: note:   template argument deduction/substitution failed:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h: In substitution of ‘template<class pDeriv, class voider> typename BC::Tensor_Operations< <template-parameter-1-1> >::dp_impl<param_deriv>::type BC::Tensor_Operations< <template-parameter-1-1> >::operator*(const BC::Tensor_Operations<param_deriv>&) const [with pDeriv = BC::Scalar<float, BC::CPU>; voider = void]’:
../UnitTests/main.cpp:59:16:   required from here
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:153:33: error: no type named ‘type’ in ‘struct BC::Tensor_Operations<BC::Matrix<float> >::dp_impl<BC::Scalar<float, BC::CPU> >’
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:164:33: note: candidate: template<class pDeriv, class voider, int foo> typename BC::Tensor_Operations< <template-parameter-1-1> >::dp_impl<param_deriv>::type BC::Tensor_Operations< <template-parameter-1-1> >::operator*(const BC::Tensor_Operations<param_deriv>&) const [with pDeriv = pDeriv; voider = voider; int foo = foo; derived = BC::Matrix<float>]
  typename dp_impl<pDeriv>::type operator *(const Tensor_Operations<pDeriv>& param) const {
                                 ^~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:164:33: note:   template argument deduction/substitution failed:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:163:3: error: no type named ‘type’ in ‘struct std::enable_if<false, void>’
   class voider = typename std::enable_if<!dp_impl<pDeriv>::short_params && !dp_impl<pDeriv>::short_params>::type, int foo = 0>
   ^~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:169:43: note: candidate: const BC::alternate_asterix_denoter<derived> BC::Tensor_Operations< <template-parameter-1-1> >::operator*() const [with derived = BC::Matrix<float>]
  const alternate_asterix_denoter<derived> operator * () const {
                                           ^~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:169:43: note:   candidate expects 0 arguments, 1 provided
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:174:35: note: candidate: template<class pDeriv> typename BC::Tensor_Operations< <template-parameter-1-1> >::impl<pDeriv, BC::mul>::type BC::Tensor_Operations< <template-parameter-1-1> >::operator*(const BC::alternate_asterix_denoter<pDeriv>&) const [with pDeriv = pDeriv; derived = BC::Matrix<float>]
  typename impl<pDeriv, mul>::type operator *(const alternate_asterix_denoter<pDeriv>& param) const {
                                   ^~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:174:35: note:   template argument deduction/substitution failed:
../UnitTests/main.cpp:59:16: note:   ‘scal {aka BC::Scalar<float, BC::CPU>}’ is not derived from ‘const BC::alternate_asterix_denoter<derived>’
  c = d * scal(2) * e;
                ^
../UnitTests/main.cpp:62:14: error: no match for ‘operator*’ (operand types are ‘scal {aka BC::Scalar<float, BC::CPU>}’ and ‘mat {aka BC::Matrix<float>}’)
  c = scal(2) * d * e;
      ~~~~~~~~^~~
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:12:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:153:33: note: candidate: template<class pDeriv, class voider> typename BC::Tensor_Operations< <template-parameter-1-1> >::dp_impl<param_deriv>::type BC::Tensor_Operations< <template-parameter-1-1> >::operator*(const BC::Tensor_Operations<param_deriv>&) const [with pDeriv = pDeriv; voider = voider; derived = BC::Scalar<float, BC::CPU>]
  typename dp_impl<pDeriv>::type operator *(const Tensor_Operations<pDeriv>& param) const {
                                 ^~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:153:33: note:   template argument deduction/substitution failed:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h: In substitution of ‘template<class pDeriv, class voider> typename BC::Tensor_Operations< <template-parameter-1-1> >::dp_impl<param_deriv>::type BC::Tensor_Operations< <template-parameter-1-1> >::operator*(const BC::Tensor_Operations<param_deriv>&) const [with pDeriv = BC::Matrix<float>; voider = void]’:
../UnitTests/main.cpp:62:16:   required from here
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:153:33: error: no type named ‘type’ in ‘struct BC::Tensor_Operations<BC::Scalar<float, BC::CPU> >::dp_impl<BC::Matrix<float> >’
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:164:33: note: candidate: template<class pDeriv, class voider, int foo> typename BC::Tensor_Operations< <template-parameter-1-1> >::dp_impl<param_deriv>::type BC::Tensor_Operations< <template-parameter-1-1> >::operator*(const BC::Tensor_Operations<param_deriv>&) const [with pDeriv = pDeriv; voider = voider; int foo = foo; derived = BC::Scalar<float, BC::CPU>]
  typename dp_impl<pDeriv>::type operator *(const Tensor_Operations<pDeriv>& param) const {
                                 ^~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:164:33: note:   template argument deduction/substitution failed:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:163:3: error: no type named ‘type’ in ‘struct std::enable_if<false, void>’
   class voider = typename std::enable_if<!dp_impl<pDeriv>::short_params && !dp_impl<pDeriv>::short_params>::type, int foo = 0>
   ^~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:169:43: note: candidate: const BC::alternate_asterix_denoter<derived> BC::Tensor_Operations< <template-parameter-1-1> >::operator*() const [with derived = BC::Scalar<float, BC::CPU>]
  const alternate_asterix_denoter<derived> operator * () const {
                                           ^~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:169:43: note:   candidate expects 0 arguments, 1 provided
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:174:35: note: candidate: template<class pDeriv> typename BC::Tensor_Operations< <template-parameter-1-1> >::impl<pDeriv, BC::mul>::type BC::Tensor_Operations< <template-parameter-1-1> >::operator*(const BC::alternate_asterix_denoter<pDeriv>&) const [with pDeriv = pDeriv; derived = BC::Scalar<float, BC::CPU>]
  typename impl<pDeriv, mul>::type operator *(const alternate_asterix_denoter<pDeriv>& param) const {
                                   ^~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:174:35: note:   template argument deduction/substitution failed:
../UnitTests/main.cpp:62:16: note:   ‘mat {aka BC::Matrix<float>}’ is not derived from ‘const BC::alternate_asterix_denoter<derived>’
  c = scal(2) * d * e;
                ^
../UnitTests/main.cpp:64:8: error: no match for ‘operator*’ (operand types are ‘mat {aka BC::Matrix<float>}’ and ‘mat {aka BC::Matrix<float>}’)
  c = d * e * scal(2); ////This is the only version that is not accounted for (it is also the least common notation)
      ~~^~~
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:12:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:153:33: note: candidate: template<class pDeriv, class voider> typename BC::Tensor_Operations< <template-parameter-1-1> >::dp_impl<param_deriv>::type BC::Tensor_Operations< <template-parameter-1-1> >::operator*(const BC::Tensor_Operations<param_deriv>&) const [with pDeriv = pDeriv; voider = voider; derived = BC::Matrix<float>]
  typename dp_impl<pDeriv>::type operator *(const Tensor_Operations<pDeriv>& param) const {
                                 ^~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:153:33: note:   template argument deduction/substitution failed:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:152:25: error: no type named ‘type’ in ‘struct std::enable_if<false, void>’
  template<class pDeriv, class voider = typename std::enable_if<dp_impl<pDeriv>::short_params || dp_impl<pDeriv>::short_params>::type>
                         ^~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:164:33: note: candidate: template<class pDeriv, class voider, int foo> typename BC::Tensor_Operations< <template-parameter-1-1> >::dp_impl<param_deriv>::type BC::Tensor_Operations< <template-parameter-1-1> >::operator*(const BC::Tensor_Operations<param_deriv>&) const [with pDeriv = pDeriv; voider = voider; int foo = foo; derived = BC::Matrix<float>]
  typename dp_impl<pDeriv>::type operator *(const Tensor_Operations<pDeriv>& param) const {
                                 ^~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:164:33: note:   template argument deduction/substitution failed:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h: In substitution of ‘template<class pDeriv, class voider, int foo> typename BC::Tensor_Operations< <template-parameter-1-1> >::dp_impl<param_deriv>::type BC::Tensor_Operations< <template-parameter-1-1> >::operator*(const BC::Tensor_Operations<param_deriv>&) const [with pDeriv = BC::Matrix<float>; voider = void; int foo = 0]’:
../UnitTests/main.cpp:64:10:   required from here
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:164:33: error: no type named ‘type’ in ‘struct BC::Tensor_Operations<BC::Matrix<float> >::dp_impl<BC::Matrix<float> >’
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:169:43: note: candidate: const BC::alternate_asterix_denoter<derived> BC::Tensor_Operations< <template-parameter-1-1> >::operator*() const [with derived = BC::Matrix<float>]
  const alternate_asterix_denoter<derived> operator * () const {
                                           ^~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:169:43: note:   candidate expects 0 arguments, 1 provided
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:174:35: note: candidate: template<class pDeriv> typename BC::Tensor_Operations< <template-parameter-1-1> >::impl<pDeriv, BC::mul>::type BC::Tensor_Operations< <template-parameter-1-1> >::operator*(const BC::alternate_asterix_denoter<pDeriv>&) const [with pDeriv = pDeriv; derived = BC::Matrix<float>]
  typename impl<pDeriv, mul>::type operator *(const alternate_asterix_denoter<pDeriv>& param) const {
                                   ^~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:174:35: note:   template argument deduction/substitution failed:
../UnitTests/main.cpp:64:10: note:   ‘mat {aka BC::Matrix<float>}’ is not derived from ‘const BC::alternate_asterix_denoter<derived>’
  c = d * e * scal(2); ////This is the only version that is not accounted for (it is also the least common notation)
          ^
../UnitTests/main.cpp:66:8: error: no match for ‘operator*’ (operand types are ‘mat {aka BC::Matrix<float>}’ and ‘scal {aka BC::Scalar<float, BC::CPU>}’)
  c = d * scal(2) * e;
      ~~^~~~~~~~~
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:12:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:153:33: note: candidate: template<class pDeriv, class voider> typename BC::Tensor_Operations< <template-parameter-1-1> >::dp_impl<param_deriv>::type BC::Tensor_Operations< <template-parameter-1-1> >::operator*(const BC::Tensor_Operations<param_deriv>&) const [with pDeriv = pDeriv; voider = voider; derived = BC::Matrix<float>]
  typename dp_impl<pDeriv>::type operator *(const Tensor_Operations<pDeriv>& param) const {
                                 ^~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:153:33: note:   template argument deduction/substitution failed:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h: In substitution of ‘template<class pDeriv, class voider> typename BC::Tensor_Operations< <template-parameter-1-1> >::dp_impl<param_deriv>::type BC::Tensor_Operations< <template-parameter-1-1> >::operator*(const BC::Tensor_Operations<param_deriv>&) const [with pDeriv = BC::Scalar<float, BC::CPU>; voider = void]’:
../UnitTests/main.cpp:66:16:   required from here
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:153:33: error: no type named ‘type’ in ‘struct BC::Tensor_Operations<BC::Matrix<float> >::dp_impl<BC::Scalar<float, BC::CPU> >’
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:164:33: note: candidate: template<class pDeriv, class voider, int foo> typename BC::Tensor_Operations< <template-parameter-1-1> >::dp_impl<param_deriv>::type BC::Tensor_Operations< <template-parameter-1-1> >::operator*(const BC::Tensor_Operations<param_deriv>&) const [with pDeriv = pDeriv; voider = voider; int foo = foo; derived = BC::Matrix<float>]
  typename dp_impl<pDeriv>::type operator *(const Tensor_Operations<pDeriv>& param) const {
                                 ^~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:164:33: note:   template argument deduction/substitution failed:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:163:3: error: no type named ‘type’ in ‘struct std::enable_if<false, void>’
   class voider = typename std::enable_if<!dp_impl<pDeriv>::short_params && !dp_impl<pDeriv>::short_params>::type, int foo = 0>
   ^~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:169:43: note: candidate: const BC::alternate_asterix_denoter<derived> BC::Tensor_Operations< <template-parameter-1-1> >::operator*() const [with derived = BC::Matrix<float>]
  const alternate_asterix_denoter<derived> operator * () const {
                                           ^~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:169:43: note:   candidate expects 0 arguments, 1 provided
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:174:35: note: candidate: template<class pDeriv> typename BC::Tensor_Operations< <template-parameter-1-1> >::impl<pDeriv, BC::mul>::type BC::Tensor_Operations< <template-parameter-1-1> >::operator*(const BC::alternate_asterix_denoter<pDeriv>&) const [with pDeriv = pDeriv; derived = BC::Matrix<float>]
  typename impl<pDeriv, mul>::type operator *(const alternate_asterix_denoter<pDeriv>& param) const {
                                   ^~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:174:35: note:   template argument deduction/substitution failed:
../UnitTests/main.cpp:66:16: note:   ‘scal {aka BC::Scalar<float, BC::CPU>}’ is not derived from ‘const BC::alternate_asterix_denoter<derived>’
  c = d * scal(2) * e;
                ^
../UnitTests/main.cpp:76:8: error: ‘using mat = class BC::Matrix<float> {aka class BC::Matrix<float>}’ has no member named ‘t’
  c = a.t() * b.t();
        ^
../UnitTests/main.cpp:76:16: error: ‘using mat = class BC::Matrix<float> {aka class BC::Matrix<float>}’ has no member named ‘t’
  c = a.t() * b.t();
                ^
../UnitTests/main.cpp:80:8: error: ‘using mat = class BC::Matrix<float> {aka class BC::Matrix<float>}’ has no member named ‘t’
  c = a.t() * A * (b.t() * A);
        ^
../UnitTests/main.cpp:80:21: error: ‘using mat = class BC::Matrix<float> {aka class BC::Matrix<float>}’ has no member named ‘t’
  c = a.t() * A * (b.t() * A);
                     ^
../UnitTests/main.cpp:94:14: error: invalid operands of types ‘void’ and ‘void’ to binary ‘operator+’
  d[1] = d[1] + d[1];
         ~~~~~^~~~~~
../UnitTests/main.cpp:99:8: error: invalid types ‘void[int]’ for array subscript
  d[1][1] = d[1][1] + d[1][1];
        ^
../UnitTests/main.cpp:99:18: error: invalid types ‘void[int]’ for array subscript
  d[1][1] = d[1][1] + d[1][1];
                  ^
../UnitTests/main.cpp:99:28: error: invalid types ‘void[int]’ for array subscript
  d[1][1] = d[1][1] + d[1][1];
                            ^
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:13:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Utility.h: In instantiation of ‘void BC::Tensor_Utility<deriv, typename std::enable_if<(isPrim<typename BC::determine_functor< <template-parameter-1-1> >::fscal> || BC::MTF::isCore<typename BC::determine_functor< <template-parameter-1-1> >::type>::conditional), void>::type>::read(std::ifstream&, bool, bool) [with deriv = BC::Matrix<double>; typename std::enable_if<(isPrim<typename BC::determine_functor< <template-parameter-1-1> >::fscal> || BC::MTF::isCore<typename BC::determine_functor< <template-parameter-1-1> >::type>::conditional), void>::type = void; std::ifstream = std::basic_ifstream<char>]’:
../UnitTests/main.cpp:113:15:   required from here
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Utility.h:132:22: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
    for (int i = 0; i < dims.size(); ++i) {
                    ~~^~~~~~~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Utility.h:138:92: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
    MATHLIB::HostToDevice(asDerived().data().core(), &data[data[0] + 1], asDerived().size() > data.size() ? data.size() : asDerived().size());
                                                                                             
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:13:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Utility.h:140:86: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
    MATHLIB::HostToDevice(asDerived().data().core(), &data[0],     asDerived().size() > data.size() ? data.size() : asDerived().size());
                                                                                       
In file included from ../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Core_Slice.h:17:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Core.h:13,
                 from ../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h:12,
                 from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:15,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Core_Scalar.h: In instantiation of ‘BC::Tensor_Scalar<PARENT>::Tensor_Scalar(BC::Tensor_Scalar<PARENT>::scalar*, const PARENT&) [with PARENT = BC::Tensor_Core<BC::Matrix<float> >; BC::Tensor_Scalar<PARENT>::scalar = float]’:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h:33:63:   required from ‘BC::TensorInitializer<derived, expression_tensor>::TensorInitializer(const params& ...) [with params = {float*, BC::Tensor_Core<BC::Matrix<float, BC::CPU> >}; derived = BC::Scalar<BC::Tensor_Scalar<BC::Tensor_Core<BC::Matrix<float> > >, BC::CPU>; expression_tensor = void]’
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:50:51:   required from ‘BC::TensorBase<derived>::TensorBase(const params& ...) [with params = {float*, BC::Tensor_Core<BC::Matrix<float, BC::CPU> >}; derived = BC::Scalar<BC::Tensor_Scalar<BC::Tensor_Core<BC::Matrix<float> > >, BC::CPU>]’
../UnitTests/../BC_Internals/BC_Core/Scalar.h:61:97:   required from ‘BC::Scalar< <template-parameter-1-1>, ML>::Scalar(const var1&, const var2&, const params& ...) [with var1 = float*; var2 = BC::Tensor_Core<BC::Matrix<float> >; params = {}; T = BC::Tensor_Scalar<BC::Tensor_Core<BC::Matrix<float> > >; Mathlib = BC::CPU]’
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:92:19:   required from ‘auto BC::TensorBase<derived>::getScalar(int) [with derived = BC::Matrix<float>]’
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:96:52:   required from ‘auto BC::TensorBase<derived>::operator()(int) [with derived = BC::Matrix<float>]’
../UnitTests/main.cpp:33:6:   required from here
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Core_Scalar.h:36:10: warning: ‘BC::Tensor_Scalar<BC::Tensor_Core<BC::Matrix<float> > >::array_slice’ will be initialized after [-Wreorder]
  scalar* array_slice;
          ^~~~~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Core_Scalar.h:35:16: warning:   ‘const BC::Tensor_Core<BC::Matrix<float> >& BC::Tensor_Scalar<BC::Tensor_Core<BC::Matrix<float> > >::parent’ [-Wreorder]
  const PARENT& parent;
                ^~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Core_Scalar.h:41:2: warning:   when initialized here [-Wreorder]
  Tensor_Scalar(scalar* array, const PARENT& parent_) : array_slice(array), parent(parent_) {}
  ^~~~~~~~~~~~~
In file included from ../UnitTests/../BC_Internals/BC_MathLibraries/Mathematics_CPU.h:15:0,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:32,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_MathLibraries/BC_PrintFunctions.h: In instantiation of ‘void BC::printHelper(const T&, int_ranks, int, std::__cxx11::string, int) [with T = const float*; int_ranks = int*; std::__cxx11::string = std::__cxx11::basic_string<char>]’:
../UnitTests/../BC_Internals/BC_MathLibraries/BC_PrintFunctions.h:102:13:   required from ‘void BC::print(const T&, RANKS, int, int) [with T = const float*; RANKS = int*]’
../UnitTests/../BC_Internals/BC_MathLibraries/Mathematics_CPU.h:98:12:   required from ‘static void BC::CPU::print(T, RANKS, int, int) [with T = const float*; RANKS = int*]’
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Utility.h:75:17:   required from ‘void BC::Tensor_Utility<deriv, typename std::enable_if<(isPrim<typename BC::determine_functor< <template-parameter-1-1> >::fscal> || BC::MTF::isCore<typename BC::determine_functor< <template-parameter-1-1> >::type>::conditional), void>::type>::print() const [with deriv = BC::Matrix<float>; typename std::enable_if<(isPrim<typename BC::determine_functor< <template-parameter-1-1> >::fscal> || BC::MTF::isCore<typename BC::determine_functor< <template-parameter-1-1> >::type>::conditional), void>::type = void]’
../UnitTests/main.cpp:37:10:   required from here
../UnitTests/../BC_Internals/BC_MathLibraries/BC_PrintFunctions.h:43:38: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
     str = str.substr(0, str.length() < printSpace ? str.length() : printSpace);
                                       
../UnitTests/../BC_Internals/BC_MathLibraries/BC_PrintFunctions.h:46:22: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
     if (str.length() < printSpace)
                       
../UnitTests/../BC_Internals/BC_MathLibraries/BC_PrintFunctions.h:67:37: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
    str = str.substr(0, str.length() < printSpace ? str.length() : printSpace);
                                      
../UnitTests/../BC_Internals/BC_MathLibraries/BC_PrintFunctions.h:70:21: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
    if (str.length() < printSpace)
                      
../UnitTests/../BC_Internals/BC_MathLibraries/BC_PrintFunctions.h: In instantiation of ‘void BC::printHelper(const T&, int_ranks, int, std::__cxx11::string, int) [with T = const double*; int_ranks = int*; std::__cxx11::string = std::__cxx11::basic_string<char>]’:
../UnitTests/../BC_Internals/BC_MathLibraries/BC_PrintFunctions.h:102:13:   required from ‘void BC::print(const T&, RANKS, int, int) [with T = const double*; RANKS = int*]’
../UnitTests/../BC_Internals/BC_MathLibraries/Mathematics_CPU.h:98:12:   required from ‘static void BC::CPU::print(T, RANKS, int, int) [with T = const double*; RANKS = int*]’
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Utility.h:75:17:   required from ‘void BC::Tensor_Utility<deriv, typename std::enable_if<(isPrim<typename BC::determine_functor< <template-parameter-1-1> >::fscal> || BC::MTF::isCore<typename BC::determine_functor< <template-parameter-1-1> >::type>::conditional), void>::type>::print() const [with deriv = BC::Matrix<double>; typename std::enable_if<(isPrim<typename BC::determine_functor< <template-parameter-1-1> >::fscal> || BC::MTF::isCore<typename BC::determine_functor< <template-parameter-1-1> >::type>::conditional), void>::type = void]’
../UnitTests/main.cpp:114:14:   required from here
../UnitTests/../BC_Internals/BC_MathLibraries/BC_PrintFunctions.h:43:38: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
     str = str.substr(0, str.length() < printSpace ? str.length() : printSpace);
                                       
../UnitTests/../BC_Internals/BC_MathLibraries/BC_PrintFunctions.h:46:22: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
     if (str.length() < printSpace)
                       
../UnitTests/../BC_Internals/BC_MathLibraries/BC_PrintFunctions.h:67:37: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
    str = str.substr(0, str.length() < printSpace ? str.length() : printSpace);
                                      
../UnitTests/../BC_Internals/BC_MathLibraries/BC_PrintFunctions.h:70:21: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
    if (str.length() < printSpace)
                      
make: *** [UnitTests/main.o] Error 1
UnitTests/subdir.mk:18: recipe for target 'UnitTests/main.o' failed
17:11:43 **** Incremental Build of configuration Debug for project BlackCat_LibraryCPU ****
make all 
Building file: ../UnitTests/main.cpp
Invoking: GCC C++ Compiler
g++ -O0 -g3 -Wall -c -fmessage-length=0 -MMD -MP -MF"UnitTests/main.d" -MT"UnitTests/main.o" -o "UnitTests/main.o" "../UnitTests/main.cpp"
In file included from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:32:0,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_MathLibraries/Mathematics_CPU.h:74:0: warning: ignoring #pragma omp parallel [-Wunknown-pragmas]
 #pragma omp parallel for
 
../UnitTests/../BC_Internals/BC_MathLibraries/Mathematics_CPU.h:78:0: warning: ignoring #pragma omp barrier [-Wunknown-pragmas]
 #pragma omp barrier
 
../UnitTests/../BC_Internals/BC_MathLibraries/Mathematics_CPU.h:88:0: warning: ignoring #pragma omp parallel [-Wunknown-pragmas]
 #pragma omp parallel for
 
../UnitTests/../BC_Internals/BC_MathLibraries/Mathematics_CPU.h:92:0: warning: ignoring #pragma omp barrier [-Wunknown-pragmas]
 #pragma omp barrier
 
In file included from ../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Core_Slice.h:17:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Core.h:13,
                 from ../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h:12,
                 from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:15,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Core_Scalar.h:22:0: warning: "__BCinline__" redefined
 #define __BCinline__
 
In file included from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:29:0,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Expressions/BlackCat_Internal_Definitions.h:25:0: note: this is the location of the previous definition
 #define __BCinline__ __BC_gcpu__ __attribute__((always_inline))
 
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:13:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Utility.h: In member function ‘auto BC::Tensor_Utility<deriv, <template-parameter-1-2> >::eval() const’:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Utility.h:34:45: error: expected ‘(’ before ‘<’ token
   return typename MTF::shell_of<deriv>::type<_scalar<deriv>, _mathlib<deriv>>(this->asDerived());
                                             ^
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Utility.h:34:60: error: expected primary-expression before ‘,’ token
   return typename MTF::shell_of<deriv>::type<_scalar<deriv>, _mathlib<deriv>>(this->asDerived());
                                                            ^
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Utility.h:34:76: error: expected primary-expression before ‘>’ token
   return typename MTF::shell_of<deriv>::type<_scalar<deriv>, _mathlib<deriv>>(this->asDerived());
                                                                            ^~
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:15:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h: At global scope:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h:74:54: error: expected ‘;’ before ‘<’ token
  using derived_alt = typename shell_of<derived>::type<T, Mathlib>;
                                                      ^
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h:77:26: error: ‘derived_alt’ does not name a type
  TensorInitializer(const derived_alt<U>&  tensor) : black_cat_array(tensor.innerShape()) {
                          ^~~~~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h:77:37: error: expected ‘,’ or ‘...’ before ‘<’ token
  TensorInitializer(const derived_alt<U>&  tensor) : black_cat_array(tensor.innerShape()) {
                                     ^
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h: In constructor ‘BC::TensorInitializer<_tensor<t, ml>, typename std::enable_if<BC::MTF::isCorePure<t>::conditional, void>::type>::TensorInitializer(int)’:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h:77:69: error: ‘tensor’ was not declared in this scope
  TensorInitializer(const derived_alt<U>&  tensor) : black_cat_array(tensor.innerShape()) {
                                                                     ^~~~~~
In file included from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10:0,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/TensorBase.h: At global scope:
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:38:71: error: expected ‘;’ before ‘<’ token
  template<class    U> using deriv   = typename shell_of<derived>::type<U, Mathlib>;
                                                                       ^
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:39:76: error: expected ‘;’ before ‘<’ token
  template<class... U> using functor = typename shell_of<functor_type>::type<U...>;
                                                                            ^
../UnitTests/../BC_Internals/BC_Core/TensorBase.h: In member function ‘auto BC::TensorBase<derived>::operator[](int)’:
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:83:68: error: expected ‘(’ before ‘<’ token
     auto operator [] (int i)    { return typename base<RANK>::slice<decltype(slice(0)), Mathlib>(slice(i)); }
                                                                    ^
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:83:69: error: expected primary-expression before ‘decltype’
     auto operator [] (int i)    { return typename base<RANK>::slice<decltype(slice(0)), Mathlib>(slice(i)); }
                                                                     ^~~~~~~~
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:83:69: error: expected ‘;’ before ‘decltype’
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:83:87: error: expected unqualified-id before ‘,’ token
     auto operator [] (int i)    { return typename base<RANK>::slice<decltype(slice(0)), Mathlib>(slice(i)); }
                                                                                       ^
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:83:96: error: expected initializer before ‘>’ token
     auto operator [] (int i)    { return typename base<RANK>::slice<decltype(slice(0)), Mathlib>(slice(i)); }
                                                                                                ^
../UnitTests/../BC_Internals/BC_Core/TensorBase.h: In member function ‘const auto BC::TensorBase<derived>::operator[](int) const’:
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:84:74: error: expected ‘(’ before ‘<’ token
  const auto operator [] (int i) const { return typename base<RANK>::slice<decltype(slice(0)), Mathlib>(slice(i)); }
                                                                          ^
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:84:75: error: expected primary-expression before ‘decltype’
  const auto operator [] (int i) const { return typename base<RANK>::slice<decltype(slice(0)), Mathlib>(slice(i)); }
                                                                           ^~~~~~~~
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:84:75: error: expected ‘;’ before ‘decltype’
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:84:93: error: expected unqualified-id before ‘,’ token
  const auto operator [] (int i) const { return typename base<RANK>::slice<decltype(slice(0)), Mathlib>(slice(i)); }
                                                                                             ^
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:84:102: error: expected initializer before ‘>’ token
  const auto operator [] (int i) const { return typename base<RANK>::slice<decltype(slice(0)), Mathlib>(slice(i)); }
                                                                                                      ^
In file included from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:50:0,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Vector.h: At global scope:
../UnitTests/../BC_Internals/BC_Core/Vector.h:45:15: error: ‘unary_expression_transpose’ was not declared in this scope
  const Vector<unary_expression_transpose<typename MTF::determine_scalar<T>::type, typename parent_class::functor_type>, Mathlib> t() const {
               ^~~~~~~~~~~~~~~~~~~~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Vector.h:45:118: error: template argument 1 is invalid
  const Vector<unary_expression_transpose<typename MTF::determine_scalar<T>::type, typename parent_class::functor_type>, Mathlib> t() const {
                                                                                                                      ^
../UnitTests/../BC_Internals/BC_Core/Vector.h:45:119: error: expected unqualified-id before ‘,’ token
  const Vector<unary_expression_transpose<typename MTF::determine_scalar<T>::type, typename parent_class::functor_type>, Mathlib> t() const {
                                                                                                                       ^
In file included from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:51:0,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Matrix.h:47:15: error: ‘unary_expression_transpose’ was not declared in this scope
  const Matrix<unary_expression_transpose<typename MTF::determine_scalar<T>::type, typename parent_class::functor_type>, Mathlib> t() const {
               ^~~~~~~~~~~~~~~~~~~~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Matrix.h:47:118: error: template argument 1 is invalid
  const Matrix<unary_expression_transpose<typename MTF::determine_scalar<T>::type, typename parent_class::functor_type>, Mathlib> t() const {
                                                                                                                      ^
../UnitTests/../BC_Internals/BC_Core/Matrix.h:47:119: error: expected unqualified-id before ‘,’ token
  const Matrix<unary_expression_transpose<typename MTF::determine_scalar<T>::type, typename parent_class::functor_type>, Mathlib> t() const {
                                                                                                                       ^
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:15:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h: In instantiation of ‘class BC::TensorInitializer<BC::Vector<BC::binary_expression<float, BC::mul, BC::Tensor_Core<BC::Vector<float> >, BC::Tensor_Core<BC::Vector<float> > >, BC::CPU>, void>’:
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:21:7:   required from ‘class BC::TensorBase<BC::Vector<BC::binary_expression<float, BC::mul, BC::Tensor_Core<BC::Vector<float> >, BC::Tensor_Core<BC::Vector<float> > >, BC::CPU> >’
../UnitTests/../BC_Internals/BC_Core/Vector.h:17:7:   required from ‘class BC::Vector<BC::binary_expression<float, BC::mul, BC::Tensor_Core<BC::Vector<float> >, BC::Tensor_Core<BC::Vector<float> > >, BC::CPU>’
../UnitTests/SpeedTests.h:43:19:   required from here
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h:28:15: error: ‘BC::TensorInitializer<derived, expression_tensor>::black_cat_array’ has incomplete type
  functor_type black_cat_array;
               ^~~~~~~~~~~~~~~
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:12:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:26:41: note: declaration of ‘using functor_type = BC::_functor<BC::Vector<BC::binary_expression<float, BC::mul, BC::Tensor_Core<BC::Vector<float> >, BC::Tensor_Core<BC::Vector<float> > >, BC::CPU> > {aka class BC::binary_expression<float, BC::mul, BC::Tensor_Core<BC::Vector<float> >, BC::Tensor_Core<BC::Vector<float> > >}’
 template<class,class,class,class> class binary_expression;
                                         ^~~~~~~~~~~~~~~~~
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:15:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h: In instantiation of ‘class BC::TensorInitializer<BC::Vector<BC::binary_expression<float, BC::assign, BC::Tensor_Core<BC::Vector<float> >, BC::binary_expression<float, BC::mul, BC::Tensor_Core<BC::Vector<float> >, BC::Tensor_Core<BC::Vector<float> > > >, BC::CPU>, void>’:
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:21:7:   required from ‘class BC::TensorBase<BC::Vector<BC::binary_expression<float, BC::assign, BC::Tensor_Core<BC::Vector<float> >, BC::binary_expression<float, BC::mul, BC::Tensor_Core<BC::Vector<float> >, BC::Tensor_Core<BC::Vector<float> > > >, BC::CPU> >’
../UnitTests/../BC_Internals/BC_Core/Vector.h:17:7:   required from ‘class BC::Vector<BC::binary_expression<float, BC::assign, BC::Tensor_Core<BC::Vector<float> >, BC::binary_expression<float, BC::mul, BC::Tensor_Core<BC::Vector<float> >, BC::Tensor_Core<BC::Vector<float> > > >, BC::CPU>’
../UnitTests/SpeedTests.h:43:24:   required from here
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h:28:15: error: ‘BC::TensorInitializer<derived, expression_tensor>::black_cat_array’ has incomplete type
  functor_type black_cat_array;
               ^~~~~~~~~~~~~~~
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:12:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:26:41: note: declaration of ‘using functor_type = BC::_functor<BC::Vector<BC::binary_expression<float, BC::assign, BC::Tensor_Core<BC::Vector<float> >, BC::binary_expression<float, BC::mul, BC::Tensor_Core<BC::Vector<float> >, BC::Tensor_Core<BC::Vector<float> > > >, BC::CPU> > {aka class BC::binary_expression<float, BC::assign, BC::Tensor_Core<BC::Vector<float> >, BC::binary_expression<float, BC::mul, BC::Tensor_Core<BC::Vector<float> >, BC::Tensor_Core<BC::Vector<float> > > >}’
 template<class,class,class,class> class binary_expression;
                                         ^~~~~~~~~~~~~~~~~
In file included from ../UnitTests/main.cpp:4:0:
../UnitTests/SpeedTests.h: In function ‘int speedTestsScalarIteration()’:
../UnitTests/SpeedTests.h:136:9: error: ‘using mat = class BC::Matrix<float> {aka class BC::Matrix<float>}’ has no member named ‘t’
   c = a.t() * b;
         ^
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:15:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h: In instantiation of ‘class BC::TensorInitializer<BC::Matrix<BC::binary_expression<float, BC::add, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> > >, BC::CPU>, void>’:
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:21:7:   required from ‘class BC::TensorBase<BC::Matrix<BC::binary_expression<float, BC::add, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> > >, BC::CPU> >’
../UnitTests/../BC_Internals/BC_Core/Matrix.h:17:7:   required from ‘class BC::Matrix<BC::binary_expression<float, BC::add, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> > >, BC::CPU>’
../UnitTests/SpeedTests.h:146:23:   required from here
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h:28:15: error: ‘BC::TensorInitializer<derived, expression_tensor>::black_cat_array’ has incomplete type
  functor_type black_cat_array;
               ^~~~~~~~~~~~~~~
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:12:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:26:41: note: declaration of ‘using functor_type = BC::_functor<BC::Matrix<BC::binary_expression<float, BC::add, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> > >, BC::CPU> > {aka class BC::binary_expression<float, BC::add, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> > >}’
 template<class,class,class,class> class binary_expression;
                                         ^~~~~~~~~~~~~~~~~
../UnitTests/main.cpp: In function ‘auto test()’:
../UnitTests/main.cpp:40:8: error: ‘using mat = class BC::Matrix<float> {aka class BC::Matrix<float>}’ has no member named ‘t’
  d = a.t();
        ^
../UnitTests/main.cpp:41:8: error: ‘using mat = class BC::Matrix<float> {aka class BC::Matrix<float>}’ has no member named ‘t’
  e = b.t();
        ^
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:15:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h: In instantiation of ‘class BC::TensorInitializer<BC::Matrix<BC::binary_expression_dotproduct<float, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::CPU>, void>’:
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:21:7:   required from ‘class BC::TensorBase<BC::Matrix<BC::binary_expression_dotproduct<float, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::CPU> >’
../UnitTests/../BC_Internals/BC_Core/Matrix.h:17:7:   required from ‘class BC::Matrix<BC::binary_expression_dotproduct<float, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::CPU>’
../UnitTests/main.cpp:47:10:   required from here
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h:28:15: error: ‘BC::TensorInitializer<derived, expression_tensor>::black_cat_array’ has incomplete type
  functor_type black_cat_array;
               ^~~~~~~~~~~~~~~
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:12:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:29:41: note: declaration of ‘using functor_type = BC::_functor<BC::Matrix<BC::binary_expression_dotproduct<float, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::CPU> > {aka class BC::binary_expression_dotproduct<float, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>}’
 template<class,class,class,class> class binary_expression_dotproduct;
                                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
../UnitTests/main.cpp:50:8: error: ‘using mat = class BC::Matrix<float> {aka class BC::Matrix<float>}’ has no member named ‘t’
  c = a.t() * b.t();
        ^
../UnitTests/main.cpp:50:16: error: ‘using mat = class BC::Matrix<float> {aka class BC::Matrix<float>}’ has no member named ‘t’
  c = a.t() * b.t();
                ^
../UnitTests/main.cpp:53:8: error: ‘using mat = class BC::Matrix<float> {aka class BC::Matrix<float>}’ has no member named ‘t’
  c = a.t() * e;
        ^
../UnitTests/main.cpp:56:12: error: ‘using mat = class BC::Matrix<float> {aka class BC::Matrix<float>}’ has no member named ‘t’
  c = d * b.t();
            ^
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:15:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h: In instantiation of ‘class BC::TensorInitializer<BC::Matrix<BC::binary_expression_scalar_R<float, BC::mul, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >, BC::CPU>, void>’:
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:21:7:   required from ‘class BC::TensorBase<BC::Matrix<BC::binary_expression_scalar_R<float, BC::mul, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >, BC::CPU> >’
../UnitTests/../BC_Internals/BC_Core/Matrix.h:17:7:   required from ‘class BC::Matrix<BC::binary_expression_scalar_R<float, BC::mul, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >, BC::CPU>’
../UnitTests/main.cpp:59:16:   required from here
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h:28:15: error: ‘BC::TensorInitializer<derived, expression_tensor>::black_cat_array’ has incomplete type
  functor_type black_cat_array;
               ^~~~~~~~~~~~~~~
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:12:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:28:41: note: declaration of ‘using functor_type = BC::_functor<BC::Matrix<BC::binary_expression_scalar_R<float, BC::mul, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >, BC::CPU> > {aka class BC::binary_expression_scalar_R<float, BC::mul, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >}’
 template<class,class,class,class> class binary_expression_scalar_R;
                                         ^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:15:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h: In instantiation of ‘class BC::TensorInitializer<BC::Matrix<BC::binary_expression_dotproduct<float, BC::binary_expression_scalar_R<float, BC::mul, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::CPU>, void>’:
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:21:7:   required from ‘class BC::TensorBase<BC::Matrix<BC::binary_expression_dotproduct<float, BC::binary_expression_scalar_R<float, BC::mul, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::CPU> >’
../UnitTests/../BC_Internals/BC_Core/Matrix.h:17:7:   required from ‘class BC::Matrix<BC::binary_expression_dotproduct<float, BC::binary_expression_scalar_R<float, BC::mul, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::CPU>’
../UnitTests/main.cpp:59:20:   required from here
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h:28:15: error: ‘BC::TensorInitializer<derived, expression_tensor>::black_cat_array’ has incomplete type
  functor_type black_cat_array;
               ^~~~~~~~~~~~~~~
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:12:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:29:41: note: declaration of ‘using functor_type = BC::_functor<BC::Matrix<BC::binary_expression_dotproduct<float, BC::binary_expression_scalar_R<float, BC::mul, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::CPU> > {aka class BC::binary_expression_dotproduct<float, BC::binary_expression_scalar_R<float, BC::mul, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>}’
 template<class,class,class,class> class binary_expression_dotproduct;
                                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:15:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h: In instantiation of ‘class BC::TensorInitializer<BC::Matrix<BC::binary_expression_scalar_L<float, BC::mul, BC::Tensor_Core<BC::Scalar<float, BC::CPU> >, BC::Tensor_Core<BC::Matrix<float> > >, BC::CPU>, void>’:
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:21:7:   required from ‘class BC::TensorBase<BC::Matrix<BC::binary_expression_scalar_L<float, BC::mul, BC::Tensor_Core<BC::Scalar<float, BC::CPU> >, BC::Tensor_Core<BC::Matrix<float> > >, BC::CPU> >’
../UnitTests/../BC_Internals/BC_Core/Matrix.h:17:7:   required from ‘class BC::Matrix<BC::binary_expression_scalar_L<float, BC::mul, BC::Tensor_Core<BC::Scalar<float, BC::CPU> >, BC::Tensor_Core<BC::Matrix<float> > >, BC::CPU>’
../UnitTests/main.cpp:62:16:   required from here
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h:28:15: error: ‘BC::TensorInitializer<derived, expression_tensor>::black_cat_array’ has incomplete type
  functor_type black_cat_array;
               ^~~~~~~~~~~~~~~
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:12:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:27:41: note: declaration of ‘using functor_type = BC::_functor<BC::Matrix<BC::binary_expression_scalar_L<float, BC::mul, BC::Tensor_Core<BC::Scalar<float, BC::CPU> >, BC::Tensor_Core<BC::Matrix<float> > >, BC::CPU> > {aka class BC::binary_expression_scalar_L<float, BC::mul, BC::Tensor_Core<BC::Scalar<float, BC::CPU> >, BC::Tensor_Core<BC::Matrix<float> > >}’
 template<class,class,class,class> class binary_expression_scalar_L;
                                         ^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:15:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h: In instantiation of ‘class BC::TensorInitializer<BC::Matrix<BC::binary_expression_dotproduct<float, BC::binary_expression_scalar_L<float, BC::mul, BC::Tensor_Core<BC::Scalar<float, BC::CPU> >, BC::Tensor_Core<BC::Matrix<float> > >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::CPU>, void>’:
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:21:7:   required from ‘class BC::TensorBase<BC::Matrix<BC::binary_expression_dotproduct<float, BC::binary_expression_scalar_L<float, BC::mul, BC::Tensor_Core<BC::Scalar<float, BC::CPU> >, BC::Tensor_Core<BC::Matrix<float> > >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::CPU> >’
../UnitTests/../BC_Internals/BC_Core/Matrix.h:17:7:   required from ‘class BC::Matrix<BC::binary_expression_dotproduct<float, BC::binary_expression_scalar_L<float, BC::mul, BC::Tensor_Core<BC::Scalar<float, BC::CPU> >, BC::Tensor_Core<BC::Matrix<float> > >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::CPU>’
../UnitTests/main.cpp:62:20:   required from here
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h:28:15: error: ‘BC::TensorInitializer<derived, expression_tensor>::black_cat_array’ has incomplete type
  functor_type black_cat_array;
               ^~~~~~~~~~~~~~~
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:12:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:29:41: note: declaration of ‘using functor_type = BC::_functor<BC::Matrix<BC::binary_expression_dotproduct<float, BC::binary_expression_scalar_L<float, BC::mul, BC::Tensor_Core<BC::Scalar<float, BC::CPU> >, BC::Tensor_Core<BC::Matrix<float> > >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::CPU> > {aka class BC::binary_expression_dotproduct<float, BC::binary_expression_scalar_L<float, BC::mul, BC::Tensor_Core<BC::Scalar<float, BC::CPU> >, BC::Tensor_Core<BC::Matrix<float> > >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>}’
 template<class,class,class,class> class binary_expression_dotproduct;
                                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:15:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h: In instantiation of ‘class BC::TensorInitializer<BC::Matrix<BC::binary_expression_scalar_R<float, BC::mul, BC::binary_expression_dotproduct<float, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >, BC::CPU>, void>’:
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:21:7:   required from ‘class BC::TensorBase<BC::Matrix<BC::binary_expression_scalar_R<float, BC::mul, BC::binary_expression_dotproduct<float, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >, BC::CPU> >’
../UnitTests/../BC_Internals/BC_Core/Matrix.h:17:7:   required from ‘class BC::Matrix<BC::binary_expression_scalar_R<float, BC::mul, BC::binary_expression_dotproduct<float, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >, BC::CPU>’
../UnitTests/main.cpp:64:20:   required from here
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h:28:15: error: ‘BC::TensorInitializer<derived, expression_tensor>::black_cat_array’ has incomplete type
  functor_type black_cat_array;
               ^~~~~~~~~~~~~~~
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:12:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:28:41: note: declaration of ‘using functor_type = BC::_functor<BC::Matrix<BC::binary_expression_scalar_R<float, BC::mul, BC::binary_expression_dotproduct<float, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >, BC::CPU> > {aka class BC::binary_expression_scalar_R<float, BC::mul, BC::binary_expression_dotproduct<float, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >}’
 template<class,class,class,class> class binary_expression_scalar_R;
                                         ^~~~~~~~~~~~~~~~~~~~~~~~~~
../UnitTests/main.cpp:76:8: error: ‘using mat = class BC::Matrix<float> {aka class BC::Matrix<float>}’ has no member named ‘t’
  c = a.t() * b.t();
        ^
../UnitTests/main.cpp:76:16: error: ‘using mat = class BC::Matrix<float> {aka class BC::Matrix<float>}’ has no member named ‘t’
  c = a.t() * b.t();
                ^
../UnitTests/main.cpp:80:8: error: ‘using mat = class BC::Matrix<float> {aka class BC::Matrix<float>}’ has no member named ‘t’
  c = a.t() * A * (b.t() * A);
        ^
../UnitTests/main.cpp:80:21: error: ‘using mat = class BC::Matrix<float> {aka class BC::Matrix<float>}’ has no member named ‘t’
  c = a.t() * A * (b.t() * A);
                     ^
../UnitTests/main.cpp:94:14: error: invalid operands of types ‘void’ and ‘void’ to binary ‘operator+’
  d[1] = d[1] + d[1];
         ~~~~~^~~~~~
../UnitTests/main.cpp:99:8: error: invalid types ‘void[int]’ for array subscript
  d[1][1] = d[1][1] + d[1][1];
        ^
../UnitTests/main.cpp:99:18: error: invalid types ‘void[int]’ for array subscript
  d[1][1] = d[1][1] + d[1][1];
                  ^
../UnitTests/main.cpp:99:28: error: invalid types ‘void[int]’ for array subscript
  d[1][1] = d[1][1] + d[1][1];
                            ^
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:13:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Utility.h: In instantiation of ‘void BC::Tensor_Utility<deriv, typename std::enable_if<(isPrim<typename BC::determine_functor< <template-parameter-1-1> >::fscal> || BC::MTF::isCore<typename BC::determine_functor< <template-parameter-1-1> >::type>::conditional), void>::type>::read(std::ifstream&, bool, bool) [with deriv = BC::Matrix<double>; typename std::enable_if<(isPrim<typename BC::determine_functor< <template-parameter-1-1> >::fscal> || BC::MTF::isCore<typename BC::determine_functor< <template-parameter-1-1> >::type>::conditional), void>::type = void; std::ifstream = std::basic_ifstream<char>]’:
../UnitTests/main.cpp:113:15:   required from here
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Utility.h:132:22: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
    for (int i = 0; i < dims.size(); ++i) {
                    ~~^~~~~~~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Utility.h:138:92: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
    MATHLIB::HostToDevice(asDerived().data().core(), &data[data[0] + 1], asDerived().size() > data.size() ? data.size() : asDerived().size());
                                                                                             
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:13:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Utility.h:140:86: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
    MATHLIB::HostToDevice(asDerived().data().core(), &data[0],     asDerived().size() > data.size() ? data.size() : asDerived().size());
                                                                                       
In file included from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:32:0,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_MathLibraries/Mathematics_CPU.h: In instantiation of ‘static void BC::CPU::copy(T&, const J&, int) [with T = BC::Tensor_Core<BC::Matrix<float> >; J = BC::binary_expression_dotproduct<float, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>]’:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:218:21:   required from ‘derived& BC::Tensor_Operations< <template-parameter-1-1> >::operator=(const BC::Tensor_Operations<param_deriv>&) [with pDeriv = BC::Matrix<BC::binary_expression_dotproduct<float, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::CPU>; derived = BC::Matrix<float>]’
../UnitTests/../BC_Internals/BC_Core/Matrix.h:45:83:   required from ‘BC::Matrix< <template-parameter-1-1>, ML>& BC::Matrix< <template-parameter-1-1>, ML>::operator=(const BC::Matrix<U, Mathlib>&) [with U = BC::binary_expression_dotproduct<float, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>; T = float; Mathlib = BC::CPU]’
../UnitTests/main.cpp:47:10:   required from here
../UnitTests/../BC_Internals/BC_MathLibraries/Mathematics_CPU.h:70:13: error: no match for ‘operator[]’ (operand types are ‘const BC::binary_expression_dotproduct<float, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>’ and ‘int’)
     t[i] = j[i];
            ~^
../UnitTests/../BC_Internals/BC_MathLibraries/Mathematics_CPU.h:76:12: error: no match for ‘operator[]’ (operand types are ‘const BC::binary_expression_dotproduct<float, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>’ and ‘int’)
    t[i] = j[i];
           ~^
../UnitTests/../BC_Internals/BC_MathLibraries/Mathematics_CPU.h: In instantiation of ‘static void BC::CPU::copy(T&, const J&, int) [with T = BC::Tensor_Core<BC::Matrix<float> >; J = BC::binary_expression_dotproduct<float, BC::binary_expression_scalar_R<float, BC::mul, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>]’:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:218:21:   required from ‘derived& BC::Tensor_Operations< <template-parameter-1-1> >::operator=(const BC::Tensor_Operations<param_deriv>&) [with pDeriv = BC::Matrix<BC::binary_expression_dotproduct<float, BC::binary_expression_scalar_R<float, BC::mul, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::CPU>; derived = BC::Matrix<float>]’
../UnitTests/../BC_Internals/BC_Core/Matrix.h:45:83:   required from ‘BC::Matrix< <template-parameter-1-1>, ML>& BC::Matrix< <template-parameter-1-1>, ML>::operator=(const BC::Matrix<U, Mathlib>&) [with U = BC::binary_expression_dotproduct<float, BC::binary_expression_scalar_R<float, BC::mul, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>; T = float; Mathlib = BC::CPU]’
../UnitTests/main.cpp:59:20:   required from here
../UnitTests/../BC_Internals/BC_MathLibraries/Mathematics_CPU.h:70:13: error: no match for ‘operator[]’ (operand types are ‘const BC::binary_expression_dotproduct<float, BC::binary_expression_scalar_R<float, BC::mul, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>’ and ‘int’)
     t[i] = j[i];
            ~^
../UnitTests/../BC_Internals/BC_MathLibraries/Mathematics_CPU.h:76:12: error: no match for ‘operator[]’ (operand types are ‘const BC::binary_expression_dotproduct<float, BC::binary_expression_scalar_R<float, BC::mul, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>’ and ‘int’)
    t[i] = j[i];
           ~^
../UnitTests/../BC_Internals/BC_MathLibraries/Mathematics_CPU.h: In instantiation of ‘static void BC::CPU::copy(T&, const J&, int) [with T = BC::Tensor_Core<BC::Matrix<float> >; J = BC::binary_expression_dotproduct<float, BC::binary_expression_scalar_L<float, BC::mul, BC::Tensor_Core<BC::Scalar<float, BC::CPU> >, BC::Tensor_Core<BC::Matrix<float> > >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>]’:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:218:21:   required from ‘derived& BC::Tensor_Operations< <template-parameter-1-1> >::operator=(const BC::Tensor_Operations<param_deriv>&) [with pDeriv = BC::Matrix<BC::binary_expression_dotproduct<float, BC::binary_expression_scalar_L<float, BC::mul, BC::Tensor_Core<BC::Scalar<float, BC::CPU> >, BC::Tensor_Core<BC::Matrix<float> > >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::CPU>; derived = BC::Matrix<float>]’
../UnitTests/../BC_Internals/BC_Core/Matrix.h:45:83:   required from ‘BC::Matrix< <template-parameter-1-1>, ML>& BC::Matrix< <template-parameter-1-1>, ML>::operator=(const BC::Matrix<U, Mathlib>&) [with U = BC::binary_expression_dotproduct<float, BC::binary_expression_scalar_L<float, BC::mul, BC::Tensor_Core<BC::Scalar<float, BC::CPU> >, BC::Tensor_Core<BC::Matrix<float> > >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>; T = float; Mathlib = BC::CPU]’
../UnitTests/main.cpp:62:20:   required from here
../UnitTests/../BC_Internals/BC_MathLibraries/Mathematics_CPU.h:70:13: error: no match for ‘operator[]’ (operand types are ‘const BC::binary_expression_dotproduct<float, BC::binary_expression_scalar_L<float, BC::mul, BC::Tensor_Core<BC::Scalar<float, BC::CPU> >, BC::Tensor_Core<BC::Matrix<float> > >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>’ and ‘int’)
     t[i] = j[i];
            ~^
../UnitTests/../BC_Internals/BC_MathLibraries/Mathematics_CPU.h:76:12: error: no match for ‘operator[]’ (operand types are ‘const BC::binary_expression_dotproduct<float, BC::binary_expression_scalar_L<float, BC::mul, BC::Tensor_Core<BC::Scalar<float, BC::CPU> >, BC::Tensor_Core<BC::Matrix<float> > >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>’ and ‘int’)
    t[i] = j[i];
           ~^
../UnitTests/../BC_Internals/BC_MathLibraries/Mathematics_CPU.h: In instantiation of ‘static void BC::CPU::copy(T&, const J&, int) [with T = BC::Tensor_Core<BC::Matrix<float> >; J = BC::binary_expression_scalar_R<float, BC::mul, BC::binary_expression_dotproduct<float, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >]’:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:218:21:   required from ‘derived& BC::Tensor_Operations< <template-parameter-1-1> >::operator=(const BC::Tensor_Operations<param_deriv>&) [with pDeriv = BC::Matrix<BC::binary_expression_scalar_R<float, BC::mul, BC::binary_expression_dotproduct<float, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >, BC::CPU>; derived = BC::Matrix<float>]’
../UnitTests/../BC_Internals/BC_Core/Matrix.h:45:83:   required from ‘BC::Matrix< <template-parameter-1-1>, ML>& BC::Matrix< <template-parameter-1-1>, ML>::operator=(const BC::Matrix<U, Mathlib>&) [with U = BC::binary_expression_scalar_R<float, BC::mul, BC::binary_expression_dotproduct<float, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >; T = float; Mathlib = BC::CPU]’
../UnitTests/main.cpp:64:20:   required from here
../UnitTests/../BC_Internals/BC_MathLibraries/Mathematics_CPU.h:70:13: error: no match for ‘operator[]’ (operand types are ‘const BC::binary_expression_scalar_R<float, BC::mul, BC::binary_expression_dotproduct<float, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >’ and ‘int’)
     t[i] = j[i];
            ~^
../UnitTests/../BC_Internals/BC_MathLibraries/Mathematics_CPU.h:76:12: error: no match for ‘operator[]’ (operand types are ‘const BC::binary_expression_scalar_R<float, BC::mul, BC::binary_expression_dotproduct<float, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >’ and ‘int’)
    t[i] = j[i];
           ~^
In file included from ../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Core_Slice.h:17:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Core.h:13,
                 from ../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h:12,
                 from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:15,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Core_Scalar.h: In instantiation of ‘BC::Tensor_Scalar<PARENT>::Tensor_Scalar(BC::Tensor_Scalar<PARENT>::scalar*, const PARENT&) [with PARENT = BC::Tensor_Core<BC::Matrix<float> >; BC::Tensor_Scalar<PARENT>::scalar = float]’:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h:33:63:   required from ‘BC::TensorInitializer<derived, expression_tensor>::TensorInitializer(const params& ...) [with params = {float*, BC::Tensor_Core<BC::Matrix<float, BC::CPU> >}; derived = BC::Scalar<BC::Tensor_Scalar<BC::Tensor_Core<BC::Matrix<float> > >, BC::CPU>; expression_tensor = void]’
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:50:51:   required from ‘BC::TensorBase<derived>::TensorBase(const params& ...) [with params = {float*, BC::Tensor_Core<BC::Matrix<float, BC::CPU> >}; derived = BC::Scalar<BC::Tensor_Scalar<BC::Tensor_Core<BC::Matrix<float> > >, BC::CPU>]’
../UnitTests/../BC_Internals/BC_Core/Scalar.h:61:97:   required from ‘BC::Scalar< <template-parameter-1-1>, ML>::Scalar(const var1&, const var2&, const params& ...) [with var1 = float*; var2 = BC::Tensor_Core<BC::Matrix<float> >; params = {}; T = BC::Tensor_Scalar<BC::Tensor_Core<BC::Matrix<float> > >; Mathlib = BC::CPU]’
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:92:19:   required from ‘auto BC::TensorBase<derived>::getScalar(int) [with derived = BC::Matrix<float>]’
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:96:52:   required from ‘auto BC::TensorBase<derived>::operator()(int) [with derived = BC::Matrix<float>]’
../UnitTests/main.cpp:33:6:   required from here
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Core_Scalar.h:36:10: warning: ‘BC::Tensor_Scalar<BC::Tensor_Core<BC::Matrix<float> > >::array_slice’ will be initialized after [-Wreorder]
  scalar* array_slice;
          ^~~~~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Core_Scalar.h:35:16: warning:   ‘const BC::Tensor_Core<BC::Matrix<float> >& BC::Tensor_Scalar<BC::Tensor_Core<BC::Matrix<float> > >::parent’ [-Wreorder]
  const PARENT& parent;
                ^~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Core_Scalar.h:41:2: warning:   when initialized here [-Wreorder]
  Tensor_Scalar(scalar* array, const PARENT& parent_) : array_slice(array), parent(parent_) {}
  ^~~~~~~~~~~~~
In file included from ../UnitTests/../BC_Internals/BC_MathLibraries/Mathematics_CPU.h:15:0,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:32,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_MathLibraries/BC_PrintFunctions.h: In instantiation of ‘void BC::printHelper(const T&, int_ranks, int, std::__cxx11::string, int) [with T = const float*; int_ranks = int*; std::__cxx11::string = std::__cxx11::basic_string<char>]’:
../UnitTests/../BC_Internals/BC_MathLibraries/BC_PrintFunctions.h:102:13:   required from ‘void BC::print(const T&, RANKS, int, int) [with T = const float*; RANKS = int*]’
../UnitTests/../BC_Internals/BC_MathLibraries/Mathematics_CPU.h:98:12:   required from ‘static void BC::CPU::print(T, RANKS, int, int) [with T = const float*; RANKS = int*]’
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Utility.h:75:17:   required from ‘void BC::Tensor_Utility<deriv, typename std::enable_if<(isPrim<typename BC::determine_functor< <template-parameter-1-1> >::fscal> || BC::MTF::isCore<typename BC::determine_functor< <template-parameter-1-1> >::type>::conditional), void>::type>::print() const [with deriv = BC::Matrix<float>; typename std::enable_if<(isPrim<typename BC::determine_functor< <template-parameter-1-1> >::fscal> || BC::MTF::isCore<typename BC::determine_functor< <template-parameter-1-1> >::type>::conditional), void>::type = void]’
../UnitTests/main.cpp:37:10:   required from here
../UnitTests/../BC_Internals/BC_MathLibraries/BC_PrintFunctions.h:43:38: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
     str = str.substr(0, str.length() < printSpace ? str.length() : printSpace);
                                       
../UnitTests/../BC_Internals/BC_MathLibraries/BC_PrintFunctions.h:46:22: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
     if (str.length() < printSpace)
                       
../UnitTests/../BC_Internals/BC_MathLibraries/BC_PrintFunctions.h:67:37: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
    str = str.substr(0, str.length() < printSpace ? str.length() : printSpace);
                                      
../UnitTests/../BC_Internals/BC_MathLibraries/BC_PrintFunctions.h:70:21: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
    if (str.length() < printSpace)
                      
../UnitTests/../BC_Internals/BC_MathLibraries/BC_PrintFunctions.h: In instantiation of ‘void BC::printHelper(const T&, int_ranks, int, std::__cxx11::string, int) [with T = const double*; int_ranks = int*; std::__cxx11::string = std::__cxx11::basic_string<char>]’:
../UnitTests/../BC_Internals/BC_MathLibraries/BC_PrintFunctions.h:102:13:   required from ‘void BC::print(const T&, RANKS, int, int) [with T = const double*; RANKS = int*]’
../UnitTests/../BC_Internals/BC_MathLibraries/Mathematics_CPU.h:98:12:   required from ‘static void BC::CPU::print(T, RANKS, int, int) [with T = const double*; RANKS = int*]’
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Utility.h:75:17:   required from ‘void BC::Tensor_Utility<deriv, typename std::enable_if<(isPrim<typename BC::determine_functor< <template-parameter-1-1> >::fscal> || BC::MTF::isCore<typename BC::determine_functor< <template-parameter-1-1> >::type>::conditional), void>::type>::print() const [with deriv = BC::Matrix<double>; typename std::enable_if<(isPrim<typename BC::determine_functor< <template-parameter-1-1> >::fscal> || BC::MTF::isCore<typename BC::determine_functor< <template-parameter-1-1> >::type>::conditional), void>::type = void]’
../UnitTests/main.cpp:114:14:   required from here
../UnitTests/../BC_Internals/BC_MathLibraries/BC_PrintFunctions.h:43:38: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
     str = str.substr(0, str.length() < printSpace ? str.length() : printSpace);
                                       
../UnitTests/../BC_Internals/BC_MathLibraries/BC_PrintFunctions.h:46:22: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
     if (str.length() < printSpace)
                       
../UnitTests/../BC_Internals/BC_MathLibraries/BC_PrintFunctions.h:67:37: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
    str = str.substr(0, str.length() < printSpace ? str.length() : printSpace);
                                      
../UnitTests/../BC_Internals/BC_MathLibraries/BC_PrintFunctions.h:70:21: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
    if (str.length() < printSpace)
                      
make: *** [UnitTests/main.o] Error 1
UnitTests/subdir.mk:18: recipe for target 'UnitTests/main.o' failed
17:12:02 **** Incremental Build of configuration Debug for project BlackCat_LibraryCPU ****
make all 
Building file: ../UnitTests/main.cpp
Invoking: GCC C++ Compiler
g++ -O0 -g3 -Wall -c -fmessage-length=0 -MMD -MP -MF"UnitTests/main.d" -MT"UnitTests/main.o" -o "UnitTests/main.o" "../UnitTests/main.cpp"
In file included from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:32:0,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_MathLibraries/Mathematics_CPU.h:74:0: warning: ignoring #pragma omp parallel [-Wunknown-pragmas]
 #pragma omp parallel for
 
../UnitTests/../BC_Internals/BC_MathLibraries/Mathematics_CPU.h:78:0: warning: ignoring #pragma omp barrier [-Wunknown-pragmas]
 #pragma omp barrier
 
../UnitTests/../BC_Internals/BC_MathLibraries/Mathematics_CPU.h:88:0: warning: ignoring #pragma omp parallel [-Wunknown-pragmas]
 #pragma omp parallel for
 
../UnitTests/../BC_Internals/BC_MathLibraries/Mathematics_CPU.h:92:0: warning: ignoring #pragma omp barrier [-Wunknown-pragmas]
 #pragma omp barrier
 
In file included from ../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Core_Slice.h:17:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Core.h:13,
                 from ../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h:12,
                 from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:15,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Core_Scalar.h:22:0: warning: "__BCinline__" redefined
 #define __BCinline__
 
In file included from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:29:0,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Expressions/BlackCat_Internal_Definitions.h:25:0: note: this is the location of the previous definition
 #define __BCinline__ __BC_gcpu__ __attribute__((always_inline))
 
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:13:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Utility.h: In member function ‘auto BC::Tensor_Utility<deriv, <template-parameter-1-2> >::eval() const’:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Utility.h:34:45: error: expected ‘(’ before ‘<’ token
   return typename MTF::shell_of<deriv>::type<_scalar<deriv>, _mathlib<deriv>>(this->asDerived());
                                             ^
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Utility.h:34:60: error: expected primary-expression before ‘,’ token
   return typename MTF::shell_of<deriv>::type<_scalar<deriv>, _mathlib<deriv>>(this->asDerived());
                                                            ^
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Utility.h:34:76: error: expected primary-expression before ‘>’ token
   return typename MTF::shell_of<deriv>::type<_scalar<deriv>, _mathlib<deriv>>(this->asDerived());
                                                                            ^~
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:15:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h: At global scope:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h:74:54: error: expected ‘;’ before ‘<’ token
  using derived_alt = typename shell_of<derived>::type<T, Mathlib>;
                                                      ^
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h:77:26: error: ‘derived_alt’ does not name a type
  TensorInitializer(const derived_alt<U>&  tensor) : black_cat_array(tensor.innerShape()) {
                          ^~~~~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h:77:37: error: expected ‘,’ or ‘...’ before ‘<’ token
  TensorInitializer(const derived_alt<U>&  tensor) : black_cat_array(tensor.innerShape()) {
                                     ^
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h: In constructor ‘BC::TensorInitializer<_tensor<t, ml>, typename std::enable_if<BC::MTF::isCorePure<t>::conditional, void>::type>::TensorInitializer(int)’:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h:77:69: error: ‘tensor’ was not declared in this scope
  TensorInitializer(const derived_alt<U>&  tensor) : black_cat_array(tensor.innerShape()) {
                                                                     ^~~~~~
In file included from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10:0,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/TensorBase.h: At global scope:
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:38:71: error: expected ‘;’ before ‘<’ token
  template<class    U> using deriv   = typename shell_of<derived>::type<U, Mathlib>;
                                                                       ^
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:39:76: error: expected ‘;’ before ‘<’ token
  template<class... U> using functor = typename shell_of<functor_type>::type<U...>;
                                                                            ^
../UnitTests/../BC_Internals/BC_Core/TensorBase.h: In member function ‘auto BC::TensorBase<derived>::operator[](int)’:
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:83:68: error: expected ‘(’ before ‘<’ token
     auto operator [] (int i)    { return typename base<RANK>::slice<decltype(slice(0)), Mathlib>(slice(i)); }
                                                                    ^
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:83:69: error: expected primary-expression before ‘decltype’
     auto operator [] (int i)    { return typename base<RANK>::slice<decltype(slice(0)), Mathlib>(slice(i)); }
                                                                     ^~~~~~~~
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:83:69: error: expected ‘;’ before ‘decltype’
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:83:87: error: expected unqualified-id before ‘,’ token
     auto operator [] (int i)    { return typename base<RANK>::slice<decltype(slice(0)), Mathlib>(slice(i)); }
                                                                                       ^
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:83:96: error: expected initializer before ‘>’ token
     auto operator [] (int i)    { return typename base<RANK>::slice<decltype(slice(0)), Mathlib>(slice(i)); }
                                                                                                ^
../UnitTests/../BC_Internals/BC_Core/TensorBase.h: In member function ‘const auto BC::TensorBase<derived>::operator[](int) const’:
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:84:74: error: expected ‘(’ before ‘<’ token
  const auto operator [] (int i) const { return typename base<RANK>::slice<decltype(slice(0)), Mathlib>(slice(i)); }
                                                                          ^
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:84:75: error: expected primary-expression before ‘decltype’
  const auto operator [] (int i) const { return typename base<RANK>::slice<decltype(slice(0)), Mathlib>(slice(i)); }
                                                                           ^~~~~~~~
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:84:75: error: expected ‘;’ before ‘decltype’
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:84:93: error: expected unqualified-id before ‘,’ token
  const auto operator [] (int i) const { return typename base<RANK>::slice<decltype(slice(0)), Mathlib>(slice(i)); }
                                                                                             ^
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:84:102: error: expected initializer before ‘>’ token
  const auto operator [] (int i) const { return typename base<RANK>::slice<decltype(slice(0)), Mathlib>(slice(i)); }
                                                                                                      ^
In file included from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:50:0,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Vector.h: At global scope:
../UnitTests/../BC_Internals/BC_Core/Vector.h:45:15: error: ‘unary_expression_transpose’ was not declared in this scope
  const Vector<unary_expression_transpose<typename MTF::determine_scalar<T>::type, typename parent_class::functor_type>, Mathlib> t() const {
               ^~~~~~~~~~~~~~~~~~~~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Vector.h:45:118: error: template argument 1 is invalid
  const Vector<unary_expression_transpose<typename MTF::determine_scalar<T>::type, typename parent_class::functor_type>, Mathlib> t() const {
                                                                                                                      ^
../UnitTests/../BC_Internals/BC_Core/Vector.h:45:119: error: expected unqualified-id before ‘,’ token
  const Vector<unary_expression_transpose<typename MTF::determine_scalar<T>::type, typename parent_class::functor_type>, Mathlib> t() const {
                                                                                                                       ^
In file included from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:51:0,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Matrix.h:47:15: error: ‘unary_expression_transpose’ was not declared in this scope
  const Matrix<unary_expression_transpose<typename MTF::determine_scalar<T>::type, typename parent_class::functor_type>, Mathlib> t() const {
               ^~~~~~~~~~~~~~~~~~~~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Matrix.h:47:118: error: template argument 1 is invalid
  const Matrix<unary_expression_transpose<typename MTF::determine_scalar<T>::type, typename parent_class::functor_type>, Mathlib> t() const {
                                                                                                                      ^
../UnitTests/../BC_Internals/BC_Core/Matrix.h:47:119: error: expected unqualified-id before ‘,’ token
  const Matrix<unary_expression_transpose<typename MTF::determine_scalar<T>::type, typename parent_class::functor_type>, Mathlib> t() const {
                                                                                                                       ^
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:15:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h: In instantiation of ‘class BC::TensorInitializer<BC::Vector<BC::binary_expression<float, BC::mul, BC::Tensor_Core<BC::Vector<float> >, BC::Tensor_Core<BC::Vector<float> > >, BC::CPU>, void>’:
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:21:7:   required from ‘class BC::TensorBase<BC::Vector<BC::binary_expression<float, BC::mul, BC::Tensor_Core<BC::Vector<float> >, BC::Tensor_Core<BC::Vector<float> > >, BC::CPU> >’
../UnitTests/../BC_Internals/BC_Core/Vector.h:17:7:   required from ‘class BC::Vector<BC::binary_expression<float, BC::mul, BC::Tensor_Core<BC::Vector<float> >, BC::Tensor_Core<BC::Vector<float> > >, BC::CPU>’
../UnitTests/SpeedTests.h:43:19:   required from here
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h:28:15: error: ‘BC::TensorInitializer<derived, expression_tensor>::black_cat_array’ has incomplete type
  functor_type black_cat_array;
               ^~~~~~~~~~~~~~~
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:12:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:26:41: note: declaration of ‘using functor_type = BC::_functor<BC::Vector<BC::binary_expression<float, BC::mul, BC::Tensor_Core<BC::Vector<float> >, BC::Tensor_Core<BC::Vector<float> > >, BC::CPU> > {aka class BC::binary_expression<float, BC::mul, BC::Tensor_Core<BC::Vector<float> >, BC::Tensor_Core<BC::Vector<float> > >}’
 template<class,class,class,class> class binary_expression;
                                         ^~~~~~~~~~~~~~~~~
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:15:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h: In instantiation of ‘class BC::TensorInitializer<BC::Vector<BC::binary_expression<float, BC::assign, BC::Tensor_Core<BC::Vector<float> >, BC::binary_expression<float, BC::mul, BC::Tensor_Core<BC::Vector<float> >, BC::Tensor_Core<BC::Vector<float> > > >, BC::CPU>, void>’:
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:21:7:   required from ‘class BC::TensorBase<BC::Vector<BC::binary_expression<float, BC::assign, BC::Tensor_Core<BC::Vector<float> >, BC::binary_expression<float, BC::mul, BC::Tensor_Core<BC::Vector<float> >, BC::Tensor_Core<BC::Vector<float> > > >, BC::CPU> >’
../UnitTests/../BC_Internals/BC_Core/Vector.h:17:7:   required from ‘class BC::Vector<BC::binary_expression<float, BC::assign, BC::Tensor_Core<BC::Vector<float> >, BC::binary_expression<float, BC::mul, BC::Tensor_Core<BC::Vector<float> >, BC::Tensor_Core<BC::Vector<float> > > >, BC::CPU>’
../UnitTests/SpeedTests.h:43:24:   required from here
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h:28:15: error: ‘BC::TensorInitializer<derived, expression_tensor>::black_cat_array’ has incomplete type
  functor_type black_cat_array;
               ^~~~~~~~~~~~~~~
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:12:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:26:41: note: declaration of ‘using functor_type = BC::_functor<BC::Vector<BC::binary_expression<float, BC::assign, BC::Tensor_Core<BC::Vector<float> >, BC::binary_expression<float, BC::mul, BC::Tensor_Core<BC::Vector<float> >, BC::Tensor_Core<BC::Vector<float> > > >, BC::CPU> > {aka class BC::binary_expression<float, BC::assign, BC::Tensor_Core<BC::Vector<float> >, BC::binary_expression<float, BC::mul, BC::Tensor_Core<BC::Vector<float> >, BC::Tensor_Core<BC::Vector<float> > > >}’
 template<class,class,class,class> class binary_expression;
                                         ^~~~~~~~~~~~~~~~~
In file included from ../UnitTests/main.cpp:4:0:
../UnitTests/SpeedTests.h: In function ‘int speedTestsScalarIteration()’:
../UnitTests/SpeedTests.h:136:9: error: ‘using mat = class BC::Matrix<float> {aka class BC::Matrix<float>}’ has no member named ‘t’
   c = a.t() * b;
         ^
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:15:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h: In instantiation of ‘class BC::TensorInitializer<BC::Matrix<BC::binary_expression<float, BC::add, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> > >, BC::CPU>, void>’:
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:21:7:   required from ‘class BC::TensorBase<BC::Matrix<BC::binary_expression<float, BC::add, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> > >, BC::CPU> >’
../UnitTests/../BC_Internals/BC_Core/Matrix.h:17:7:   required from ‘class BC::Matrix<BC::binary_expression<float, BC::add, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> > >, BC::CPU>’
../UnitTests/SpeedTests.h:146:23:   required from here
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h:28:15: error: ‘BC::TensorInitializer<derived, expression_tensor>::black_cat_array’ has incomplete type
  functor_type black_cat_array;
               ^~~~~~~~~~~~~~~
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:12:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:26:41: note: declaration of ‘using functor_type = BC::_functor<BC::Matrix<BC::binary_expression<float, BC::add, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> > >, BC::CPU> > {aka class BC::binary_expression<float, BC::add, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> > >}’
 template<class,class,class,class> class binary_expression;
                                         ^~~~~~~~~~~~~~~~~
../UnitTests/main.cpp: In function ‘auto test()’:
../UnitTests/main.cpp:40:8: error: ‘using mat = class BC::Matrix<float> {aka class BC::Matrix<float>}’ has no member named ‘t’
  d = a.t();
        ^
../UnitTests/main.cpp:41:8: error: ‘using mat = class BC::Matrix<float> {aka class BC::Matrix<float>}’ has no member named ‘t’
  e = b.t();
        ^
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:15:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h: In instantiation of ‘class BC::TensorInitializer<BC::Matrix<BC::binary_expression_dotproduct<float, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::CPU>, void>’:
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:21:7:   required from ‘class BC::TensorBase<BC::Matrix<BC::binary_expression_dotproduct<float, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::CPU> >’
../UnitTests/../BC_Internals/BC_Core/Matrix.h:17:7:   required from ‘class BC::Matrix<BC::binary_expression_dotproduct<float, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::CPU>’
../UnitTests/main.cpp:47:10:   required from here
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h:28:15: error: ‘BC::TensorInitializer<derived, expression_tensor>::black_cat_array’ has incomplete type
  functor_type black_cat_array;
               ^~~~~~~~~~~~~~~
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:12:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:29:41: note: declaration of ‘using functor_type = BC::_functor<BC::Matrix<BC::binary_expression_dotproduct<float, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::CPU> > {aka class BC::binary_expression_dotproduct<float, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>}’
 template<class,class,class,class> class binary_expression_dotproduct;
                                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
../UnitTests/main.cpp:50:8: error: ‘using mat = class BC::Matrix<float> {aka class BC::Matrix<float>}’ has no member named ‘t’
  c = a.t() * b.t();
        ^
../UnitTests/main.cpp:50:16: error: ‘using mat = class BC::Matrix<float> {aka class BC::Matrix<float>}’ has no member named ‘t’
  c = a.t() * b.t();
                ^
../UnitTests/main.cpp:53:8: error: ‘using mat = class BC::Matrix<float> {aka class BC::Matrix<float>}’ has no member named ‘t’
  c = a.t() * e;
        ^
../UnitTests/main.cpp:56:12: error: ‘using mat = class BC::Matrix<float> {aka class BC::Matrix<float>}’ has no member named ‘t’
  c = d * b.t();
            ^
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:15:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h: In instantiation of ‘class BC::TensorInitializer<BC::Matrix<BC::binary_expression_scalar_R<float, BC::mul, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >, BC::CPU>, void>’:
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:21:7:   required from ‘class BC::TensorBase<BC::Matrix<BC::binary_expression_scalar_R<float, BC::mul, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >, BC::CPU> >’
../UnitTests/../BC_Internals/BC_Core/Matrix.h:17:7:   required from ‘class BC::Matrix<BC::binary_expression_scalar_R<float, BC::mul, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >, BC::CPU>’
../UnitTests/main.cpp:59:16:   required from here
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h:28:15: error: ‘BC::TensorInitializer<derived, expression_tensor>::black_cat_array’ has incomplete type
  functor_type black_cat_array;
               ^~~~~~~~~~~~~~~
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:12:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:28:41: note: declaration of ‘using functor_type = BC::_functor<BC::Matrix<BC::binary_expression_scalar_R<float, BC::mul, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >, BC::CPU> > {aka class BC::binary_expression_scalar_R<float, BC::mul, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >}’
 template<class,class,class,class> class binary_expression_scalar_R;
                                         ^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:15:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h: In instantiation of ‘class BC::TensorInitializer<BC::Matrix<BC::binary_expression_dotproduct<float, BC::binary_expression_scalar_R<float, BC::mul, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::CPU>, void>’:
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:21:7:   required from ‘class BC::TensorBase<BC::Matrix<BC::binary_expression_dotproduct<float, BC::binary_expression_scalar_R<float, BC::mul, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::CPU> >’
../UnitTests/../BC_Internals/BC_Core/Matrix.h:17:7:   required from ‘class BC::Matrix<BC::binary_expression_dotproduct<float, BC::binary_expression_scalar_R<float, BC::mul, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::CPU>’
../UnitTests/main.cpp:59:20:   required from here
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h:28:15: error: ‘BC::TensorInitializer<derived, expression_tensor>::black_cat_array’ has incomplete type
  functor_type black_cat_array;
               ^~~~~~~~~~~~~~~
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:12:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:29:41: note: declaration of ‘using functor_type = BC::_functor<BC::Matrix<BC::binary_expression_dotproduct<float, BC::binary_expression_scalar_R<float, BC::mul, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::CPU> > {aka class BC::binary_expression_dotproduct<float, BC::binary_expression_scalar_R<float, BC::mul, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>}’
 template<class,class,class,class> class binary_expression_dotproduct;
                                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:15:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h: In instantiation of ‘class BC::TensorInitializer<BC::Matrix<BC::binary_expression_scalar_L<float, BC::mul, BC::Tensor_Core<BC::Scalar<float, BC::CPU> >, BC::Tensor_Core<BC::Matrix<float> > >, BC::CPU>, void>’:
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:21:7:   required from ‘class BC::TensorBase<BC::Matrix<BC::binary_expression_scalar_L<float, BC::mul, BC::Tensor_Core<BC::Scalar<float, BC::CPU> >, BC::Tensor_Core<BC::Matrix<float> > >, BC::CPU> >’
../UnitTests/../BC_Internals/BC_Core/Matrix.h:17:7:   required from ‘class BC::Matrix<BC::binary_expression_scalar_L<float, BC::mul, BC::Tensor_Core<BC::Scalar<float, BC::CPU> >, BC::Tensor_Core<BC::Matrix<float> > >, BC::CPU>’
../UnitTests/main.cpp:62:16:   required from here
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h:28:15: error: ‘BC::TensorInitializer<derived, expression_tensor>::black_cat_array’ has incomplete type
  functor_type black_cat_array;
               ^~~~~~~~~~~~~~~
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:12:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:27:41: note: declaration of ‘using functor_type = BC::_functor<BC::Matrix<BC::binary_expression_scalar_L<float, BC::mul, BC::Tensor_Core<BC::Scalar<float, BC::CPU> >, BC::Tensor_Core<BC::Matrix<float> > >, BC::CPU> > {aka class BC::binary_expression_scalar_L<float, BC::mul, BC::Tensor_Core<BC::Scalar<float, BC::CPU> >, BC::Tensor_Core<BC::Matrix<float> > >}’
 template<class,class,class,class> class binary_expression_scalar_L;
                                         ^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:15:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h: In instantiation of ‘class BC::TensorInitializer<BC::Matrix<BC::binary_expression_dotproduct<float, BC::binary_expression_scalar_L<float, BC::mul, BC::Tensor_Core<BC::Scalar<float, BC::CPU> >, BC::Tensor_Core<BC::Matrix<float> > >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::CPU>, void>’:
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:21:7:   required from ‘class BC::TensorBase<BC::Matrix<BC::binary_expression_dotproduct<float, BC::binary_expression_scalar_L<float, BC::mul, BC::Tensor_Core<BC::Scalar<float, BC::CPU> >, BC::Tensor_Core<BC::Matrix<float> > >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::CPU> >’
../UnitTests/../BC_Internals/BC_Core/Matrix.h:17:7:   required from ‘class BC::Matrix<BC::binary_expression_dotproduct<float, BC::binary_expression_scalar_L<float, BC::mul, BC::Tensor_Core<BC::Scalar<float, BC::CPU> >, BC::Tensor_Core<BC::Matrix<float> > >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::CPU>’
../UnitTests/main.cpp:62:20:   required from here
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h:28:15: error: ‘BC::TensorInitializer<derived, expression_tensor>::black_cat_array’ has incomplete type
  functor_type black_cat_array;
               ^~~~~~~~~~~~~~~
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:12:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:29:41: note: declaration of ‘using functor_type = BC::_functor<BC::Matrix<BC::binary_expression_dotproduct<float, BC::binary_expression_scalar_L<float, BC::mul, BC::Tensor_Core<BC::Scalar<float, BC::CPU> >, BC::Tensor_Core<BC::Matrix<float> > >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::CPU> > {aka class BC::binary_expression_dotproduct<float, BC::binary_expression_scalar_L<float, BC::mul, BC::Tensor_Core<BC::Scalar<float, BC::CPU> >, BC::Tensor_Core<BC::Matrix<float> > >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>}’
 template<class,class,class,class> class binary_expression_dotproduct;
                                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:15:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h: In instantiation of ‘class BC::TensorInitializer<BC::Matrix<BC::binary_expression_scalar_R<float, BC::mul, BC::binary_expression_dotproduct<float, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >, BC::CPU>, void>’:
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:21:7:   required from ‘class BC::TensorBase<BC::Matrix<BC::binary_expression_scalar_R<float, BC::mul, BC::binary_expression_dotproduct<float, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >, BC::CPU> >’
../UnitTests/../BC_Internals/BC_Core/Matrix.h:17:7:   required from ‘class BC::Matrix<BC::binary_expression_scalar_R<float, BC::mul, BC::binary_expression_dotproduct<float, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >, BC::CPU>’
../UnitTests/main.cpp:64:20:   required from here
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h:28:15: error: ‘BC::TensorInitializer<derived, expression_tensor>::black_cat_array’ has incomplete type
  functor_type black_cat_array;
               ^~~~~~~~~~~~~~~
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:12:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:28:41: note: declaration of ‘using functor_type = BC::_functor<BC::Matrix<BC::binary_expression_scalar_R<float, BC::mul, BC::binary_expression_dotproduct<float, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >, BC::CPU> > {aka class BC::binary_expression_scalar_R<float, BC::mul, BC::binary_expression_dotproduct<float, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >}’
 template<class,class,class,class> class binary_expression_scalar_R;
                                         ^~~~~~~~~~~~~~~~~~~~~~~~~~
../UnitTests/main.cpp:76:8: error: ‘using mat = class BC::Matrix<float> {aka class BC::Matrix<float>}’ has no member named ‘t’
  c = a.t() * b.t();
        ^
../UnitTests/main.cpp:76:16: error: ‘using mat = class BC::Matrix<float> {aka class BC::Matrix<float>}’ has no member named ‘t’
  c = a.t() * b.t();
                ^
../UnitTests/main.cpp:80:8: error: ‘using mat = class BC::Matrix<float> {aka class BC::Matrix<float>}’ has no member named ‘t’
  c = a.t() * A * (b.t() * A);
        ^
../UnitTests/main.cpp:80:21: error: ‘using mat = class BC::Matrix<float> {aka class BC::Matrix<float>}’ has no member named ‘t’
  c = a.t() * A * (b.t() * A);
                     ^
../UnitTests/main.cpp:94:14: error: invalid operands of types ‘void’ and ‘void’ to binary ‘operator+’
  d[1] = d[1] + d[1];
         ~~~~~^~~~~~
../UnitTests/main.cpp:99:8: error: invalid types ‘void[int]’ for array subscript
  d[1][1] = d[1][1] + d[1][1];
        ^
../UnitTests/main.cpp:99:18: error: invalid types ‘void[int]’ for array subscript
  d[1][1] = d[1][1] + d[1][1];
                  ^
../UnitTests/main.cpp:99:28: error: invalid types ‘void[int]’ for array subscript
  d[1][1] = d[1][1] + d[1][1];
                            ^
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:13:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Utility.h: In instantiation of ‘void BC::Tensor_Utility<deriv, typename std::enable_if<(isPrim<typename BC::determine_functor< <template-parameter-1-1> >::fscal> || BC::MTF::isCore<typename BC::determine_functor< <template-parameter-1-1> >::type>::conditional), void>::type>::read(std::ifstream&, bool, bool) [with deriv = BC::Matrix<double>; typename std::enable_if<(isPrim<typename BC::determine_functor< <template-parameter-1-1> >::fscal> || BC::MTF::isCore<typename BC::determine_functor< <template-parameter-1-1> >::type>::conditional), void>::type = void; std::ifstream = std::basic_ifstream<char>]’:
../UnitTests/main.cpp:113:15:   required from here
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Utility.h:132:22: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
    for (int i = 0; i < dims.size(); ++i) {
                    ~~^~~~~~~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Utility.h:138:92: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
    MATHLIB::HostToDevice(asDerived().data().core(), &data[data[0] + 1], asDerived().size() > data.size() ? data.size() : asDerived().size());
                                                                                             
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:13:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Utility.h:140:86: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
    MATHLIB::HostToDevice(asDerived().data().core(), &data[0],     asDerived().size() > data.size() ? data.size() : asDerived().size());
                                                                                       
In file included from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:32:0,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_MathLibraries/Mathematics_CPU.h: In instantiation of ‘static void BC::CPU::copy(T&, const J&, int) [with T = BC::Tensor_Core<BC::Matrix<float> >; J = BC::binary_expression_dotproduct<float, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>]’:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:218:21:   required from ‘derived& BC::Tensor_Operations< <template-parameter-1-1> >::operator=(const BC::Tensor_Operations<param_deriv>&) [with pDeriv = BC::Matrix<BC::binary_expression_dotproduct<float, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::CPU>; derived = BC::Matrix<float>]’
../UnitTests/../BC_Internals/BC_Core/Matrix.h:45:83:   required from ‘BC::Matrix< <template-parameter-1-1>, ML>& BC::Matrix< <template-parameter-1-1>, ML>::operator=(const BC::Matrix<U, Mathlib>&) [with U = BC::binary_expression_dotproduct<float, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>; T = float; Mathlib = BC::CPU]’
../UnitTests/main.cpp:47:10:   required from here
../UnitTests/../BC_Internals/BC_MathLibraries/Mathematics_CPU.h:70:13: error: no match for ‘operator[]’ (operand types are ‘const BC::binary_expression_dotproduct<float, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>’ and ‘int’)
     t[i] = j[i];
            ~^
../UnitTests/../BC_Internals/BC_MathLibraries/Mathematics_CPU.h:76:12: error: no match for ‘operator[]’ (operand types are ‘const BC::binary_expression_dotproduct<float, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>’ and ‘int’)
    t[i] = j[i];
           ~^
../UnitTests/../BC_Internals/BC_MathLibraries/Mathematics_CPU.h: In instantiation of ‘static void BC::CPU::copy(T&, const J&, int) [with T = BC::Tensor_Core<BC::Matrix<float> >; J = BC::binary_expression_dotproduct<float, BC::binary_expression_scalar_R<float, BC::mul, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>]’:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:218:21:   required from ‘derived& BC::Tensor_Operations< <template-parameter-1-1> >::operator=(const BC::Tensor_Operations<param_deriv>&) [with pDeriv = BC::Matrix<BC::binary_expression_dotproduct<float, BC::binary_expression_scalar_R<float, BC::mul, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::CPU>; derived = BC::Matrix<float>]’
../UnitTests/../BC_Internals/BC_Core/Matrix.h:45:83:   required from ‘BC::Matrix< <template-parameter-1-1>, ML>& BC::Matrix< <template-parameter-1-1>, ML>::operator=(const BC::Matrix<U, Mathlib>&) [with U = BC::binary_expression_dotproduct<float, BC::binary_expression_scalar_R<float, BC::mul, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>; T = float; Mathlib = BC::CPU]’
../UnitTests/main.cpp:59:20:   required from here
../UnitTests/../BC_Internals/BC_MathLibraries/Mathematics_CPU.h:70:13: error: no match for ‘operator[]’ (operand types are ‘const BC::binary_expression_dotproduct<float, BC::binary_expression_scalar_R<float, BC::mul, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>’ and ‘int’)
     t[i] = j[i];
            ~^
../UnitTests/../BC_Internals/BC_MathLibraries/Mathematics_CPU.h:76:12: error: no match for ‘operator[]’ (operand types are ‘const BC::binary_expression_dotproduct<float, BC::binary_expression_scalar_R<float, BC::mul, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>’ and ‘int’)
    t[i] = j[i];
           ~^
../UnitTests/../BC_Internals/BC_MathLibraries/Mathematics_CPU.h: In instantiation of ‘static void BC::CPU::copy(T&, const J&, int) [with T = BC::Tensor_Core<BC::Matrix<float> >; J = BC::binary_expression_dotproduct<float, BC::binary_expression_scalar_L<float, BC::mul, BC::Tensor_Core<BC::Scalar<float, BC::CPU> >, BC::Tensor_Core<BC::Matrix<float> > >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>]’:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:218:21:   required from ‘derived& BC::Tensor_Operations< <template-parameter-1-1> >::operator=(const BC::Tensor_Operations<param_deriv>&) [with pDeriv = BC::Matrix<BC::binary_expression_dotproduct<float, BC::binary_expression_scalar_L<float, BC::mul, BC::Tensor_Core<BC::Scalar<float, BC::CPU> >, BC::Tensor_Core<BC::Matrix<float> > >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::CPU>; derived = BC::Matrix<float>]’
../UnitTests/../BC_Internals/BC_Core/Matrix.h:45:83:   required from ‘BC::Matrix< <template-parameter-1-1>, ML>& BC::Matrix< <template-parameter-1-1>, ML>::operator=(const BC::Matrix<U, Mathlib>&) [with U = BC::binary_expression_dotproduct<float, BC::binary_expression_scalar_L<float, BC::mul, BC::Tensor_Core<BC::Scalar<float, BC::CPU> >, BC::Tensor_Core<BC::Matrix<float> > >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>; T = float; Mathlib = BC::CPU]’
../UnitTests/main.cpp:62:20:   required from here
../UnitTests/../BC_Internals/BC_MathLibraries/Mathematics_CPU.h:70:13: error: no match for ‘operator[]’ (operand types are ‘const BC::binary_expression_dotproduct<float, BC::binary_expression_scalar_L<float, BC::mul, BC::Tensor_Core<BC::Scalar<float, BC::CPU> >, BC::Tensor_Core<BC::Matrix<float> > >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>’ and ‘int’)
     t[i] = j[i];
            ~^
../UnitTests/../BC_Internals/BC_MathLibraries/Mathematics_CPU.h:76:12: error: no match for ‘operator[]’ (operand types are ‘const BC::binary_expression_dotproduct<float, BC::binary_expression_scalar_L<float, BC::mul, BC::Tensor_Core<BC::Scalar<float, BC::CPU> >, BC::Tensor_Core<BC::Matrix<float> > >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>’ and ‘int’)
    t[i] = j[i];
           ~^
../UnitTests/../BC_Internals/BC_MathLibraries/Mathematics_CPU.h: In instantiation of ‘static void BC::CPU::copy(T&, const J&, int) [with T = BC::Tensor_Core<BC::Matrix<float> >; J = BC::binary_expression_scalar_R<float, BC::mul, BC::binary_expression_dotproduct<float, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >]’:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:218:21:   required from ‘derived& BC::Tensor_Operations< <template-parameter-1-1> >::operator=(const BC::Tensor_Operations<param_deriv>&) [with pDeriv = BC::Matrix<BC::binary_expression_scalar_R<float, BC::mul, BC::binary_expression_dotproduct<float, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >, BC::CPU>; derived = BC::Matrix<float>]’
../UnitTests/../BC_Internals/BC_Core/Matrix.h:45:83:   required from ‘BC::Matrix< <template-parameter-1-1>, ML>& BC::Matrix< <template-parameter-1-1>, ML>::operator=(const BC::Matrix<U, Mathlib>&) [with U = BC::binary_expression_scalar_R<float, BC::mul, BC::binary_expression_dotproduct<float, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >; T = float; Mathlib = BC::CPU]’
../UnitTests/main.cpp:64:20:   required from here
../UnitTests/../BC_Internals/BC_MathLibraries/Mathematics_CPU.h:70:13: error: no match for ‘operator[]’ (operand types are ‘const BC::binary_expression_scalar_R<float, BC::mul, BC::binary_expression_dotproduct<float, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >’ and ‘int’)
     t[i] = j[i];
            ~^
../UnitTests/../BC_Internals/BC_MathLibraries/Mathematics_CPU.h:76:12: error: no match for ‘operator[]’ (operand types are ‘const BC::binary_expression_scalar_R<float, BC::mul, BC::binary_expression_dotproduct<float, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >’ and ‘int’)
    t[i] = j[i];
           ~^
In file included from ../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Core_Slice.h:17:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Core.h:13,
                 from ../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h:12,
                 from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:15,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Core_Scalar.h: In instantiation of ‘BC::Tensor_Scalar<PARENT>::Tensor_Scalar(BC::Tensor_Scalar<PARENT>::scalar*, const PARENT&) [with PARENT = BC::Tensor_Core<BC::Matrix<float> >; BC::Tensor_Scalar<PARENT>::scalar = float]’:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h:33:63:   required from ‘BC::TensorInitializer<derived, expression_tensor>::TensorInitializer(const params& ...) [with params = {float*, BC::Tensor_Core<BC::Matrix<float, BC::CPU> >}; derived = BC::Scalar<BC::Tensor_Scalar<BC::Tensor_Core<BC::Matrix<float> > >, BC::CPU>; expression_tensor = void]’
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:50:51:   required from ‘BC::TensorBase<derived>::TensorBase(const params& ...) [with params = {float*, BC::Tensor_Core<BC::Matrix<float, BC::CPU> >}; derived = BC::Scalar<BC::Tensor_Scalar<BC::Tensor_Core<BC::Matrix<float> > >, BC::CPU>]’
../UnitTests/../BC_Internals/BC_Core/Scalar.h:61:97:   required from ‘BC::Scalar< <template-parameter-1-1>, ML>::Scalar(const var1&, const var2&, const params& ...) [with var1 = float*; var2 = BC::Tensor_Core<BC::Matrix<float> >; params = {}; T = BC::Tensor_Scalar<BC::Tensor_Core<BC::Matrix<float> > >; Mathlib = BC::CPU]’
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:92:19:   required from ‘auto BC::TensorBase<derived>::getScalar(int) [with derived = BC::Matrix<float>]’
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:96:52:   required from ‘auto BC::TensorBase<derived>::operator()(int) [with derived = BC::Matrix<float>]’
../UnitTests/main.cpp:33:6:   required from here
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Core_Scalar.h:36:10: warning: ‘BC::Tensor_Scalar<BC::Tensor_Core<BC::Matrix<float> > >::array_slice’ will be initialized after [-Wreorder]
  scalar* array_slice;
          ^~~~~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Core_Scalar.h:35:16: warning:   ‘const BC::Tensor_Core<BC::Matrix<float> >& BC::Tensor_Scalar<BC::Tensor_Core<BC::Matrix<float> > >::parent’ [-Wreorder]
  const PARENT& parent;
                ^~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Core_Scalar.h:41:2: warning:   when initialized here [-Wreorder]
  Tensor_Scalar(scalar* array, const PARENT& parent_) : array_slice(array), parent(parent_) {}
  ^~~~~~~~~~~~~
In file included from ../UnitTests/../BC_Internals/BC_MathLibraries/Mathematics_CPU.h:15:0,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:32,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_MathLibraries/BC_PrintFunctions.h: In instantiation of ‘void BC::printHelper(const T&, int_ranks, int, std::__cxx11::string, int) [with T = const float*; int_ranks = int*; std::__cxx11::string = std::__cxx11::basic_string<char>]’:
../UnitTests/../BC_Internals/BC_MathLibraries/BC_PrintFunctions.h:102:13:   required from ‘void BC::print(const T&, RANKS, int, int) [with T = const float*; RANKS = int*]’
../UnitTests/../BC_Internals/BC_MathLibraries/Mathematics_CPU.h:98:12:   required from ‘static void BC::CPU::print(T, RANKS, int, int) [with T = const float*; RANKS = int*]’
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Utility.h:75:17:   required from ‘void BC::Tensor_Utility<deriv, typename std::enable_if<(isPrim<typename BC::determine_functor< <template-parameter-1-1> >::fscal> || BC::MTF::isCore<typename BC::determine_functor< <template-parameter-1-1> >::type>::conditional), void>::type>::print() const [with deriv = BC::Matrix<float>; typename std::enable_if<(isPrim<typename BC::determine_functor< <template-parameter-1-1> >::fscal> || BC::MTF::isCore<typename BC::determine_functor< <template-parameter-1-1> >::type>::conditional), void>::type = void]’
../UnitTests/main.cpp:37:10:   required from here
../UnitTests/../BC_Internals/BC_MathLibraries/BC_PrintFunctions.h:43:38: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
     str = str.substr(0, str.length() < printSpace ? str.length() : printSpace);
                                       
../UnitTests/../BC_Internals/BC_MathLibraries/BC_PrintFunctions.h:46:22: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
     if (str.length() < printSpace)
                       
../UnitTests/../BC_Internals/BC_MathLibraries/BC_PrintFunctions.h:67:37: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
    str = str.substr(0, str.length() < printSpace ? str.length() : printSpace);
                                      
../UnitTests/../BC_Internals/BC_MathLibraries/BC_PrintFunctions.h:70:21: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
    if (str.length() < printSpace)
                      
../UnitTests/../BC_Internals/BC_MathLibraries/BC_PrintFunctions.h: In instantiation of ‘void BC::printHelper(const T&, int_ranks, int, std::__cxx11::string, int) [with T = const double*; int_ranks = int*; std::__cxx11::string = std::__cxx11::basic_string<char>]’:
../UnitTests/../BC_Internals/BC_MathLibraries/BC_PrintFunctions.h:102:13:   required from ‘void BC::print(const T&, RANKS, int, int) [with T = const double*; RANKS = int*]’
../UnitTests/../BC_Internals/BC_MathLibraries/Mathematics_CPU.h:98:12:   required from ‘static void BC::CPU::print(T, RANKS, int, int) [with T = const double*; RANKS = int*]’
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Utility.h:75:17:   required from ‘void BC::Tensor_Utility<deriv, typename std::enable_if<(isPrim<typename BC::determine_functor< <template-parameter-1-1> >::fscal> || BC::MTF::isCore<typename BC::determine_functor< <template-parameter-1-1> >::type>::conditional), void>::type>::print() const [with deriv = BC::Matrix<double>; typename std::enable_if<(isPrim<typename BC::determine_functor< <template-parameter-1-1> >::fscal> || BC::MTF::isCore<typename BC::determine_functor< <template-parameter-1-1> >::type>::conditional), void>::type = void]’
../UnitTests/main.cpp:114:14:   required from here
../UnitTests/../BC_Internals/BC_MathLibraries/BC_PrintFunctions.h:43:38: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
     str = str.substr(0, str.length() < printSpace ? str.length() : printSpace);
                                       
../UnitTests/../BC_Internals/BC_MathLibraries/BC_PrintFunctions.h:46:22: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
     if (str.length() < printSpace)
                       
../UnitTests/../BC_Internals/BC_MathLibraries/BC_PrintFunctions.h:67:37: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
    str = str.substr(0, str.length() < printSpace ? str.length() : printSpace);
                                      
../UnitTests/../BC_Internals/BC_MathLibraries/BC_PrintFunctions.h:70:21: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
    if (str.length() < printSpace)
                      
make: *** [UnitTests/main.o] Error 1
UnitTests/subdir.mk:18: recipe for target 'UnitTests/main.o' failed
17:12:14 **** Incremental Build of configuration Debug for project BlackCat_LibraryCPU ****
make all 
Building file: ../UnitTests/main.cpp
Invoking: GCC C++ Compiler
g++ -O0 -g3 -Wall -c -fmessage-length=0 -MMD -MP -MF"UnitTests/main.d" -MT"UnitTests/main.o" -o "UnitTests/main.o" "../UnitTests/main.cpp"
In file included from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:32:0,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_MathLibraries/Mathematics_CPU.h:74:0: warning: ignoring #pragma omp parallel [-Wunknown-pragmas]
 #pragma omp parallel for
 
../UnitTests/../BC_Internals/BC_MathLibraries/Mathematics_CPU.h:78:0: warning: ignoring #pragma omp barrier [-Wunknown-pragmas]
 #pragma omp barrier
 
../UnitTests/../BC_Internals/BC_MathLibraries/Mathematics_CPU.h:88:0: warning: ignoring #pragma omp parallel [-Wunknown-pragmas]
 #pragma omp parallel for
 
../UnitTests/../BC_Internals/BC_MathLibraries/Mathematics_CPU.h:92:0: warning: ignoring #pragma omp barrier [-Wunknown-pragmas]
 #pragma omp barrier
 
In file included from ../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Core_Slice.h:17:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Core.h:13,
                 from ../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h:12,
                 from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:15,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Core_Scalar.h:22:0: warning: "__BCinline__" redefined
 #define __BCinline__
 
In file included from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:29:0,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Expressions/BlackCat_Internal_Definitions.h:25:0: note: this is the location of the previous definition
 #define __BCinline__ __BC_gcpu__ __attribute__((always_inline))
 
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:13:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Utility.h: In member function ‘auto BC::Tensor_Utility<deriv, <template-parameter-1-2> >::eval() const’:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Utility.h:34:51: error: expected primary-expression before ‘,’ token
   return MTF::shell_of<deriv>::type<_scalar<deriv>, _mathlib<deriv>>(this->asDerived());
                                                   ^
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Utility.h:34:67: error: expected primary-expression before ‘>’ token
   return MTF::shell_of<deriv>::type<_scalar<deriv>, _mathlib<deriv>>(this->asDerived());
                                                                   ^~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Utility.h: In member function ‘void BC::Tensor_Utility<deriv, <template-parameter-1-2> >::print() const’:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Utility.h:37:3: error: need ‘typename’ before ‘BC::Tensor_Utility<deriv, <template-parameter-1-2> >::MATHLIB:: prin’ because ‘BC::Tensor_Utility<deriv, <template-parameter-1-2> >::MATHLIB’ is a dependent scope
   MATHLIB::prin t(asDerived().data(), asDerived().innerShape(), asDerived().rank(), 8);
   ^~~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Utility.h:37:17: error: expected ‘;’ before ‘t’
   MATHLIB::prin t(asDerived().data(), asDerived().innerShape(), asDerived().rank(), 8);
                 ^
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:15:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h: At global scope:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h:74:54: error: expected ‘;’ before ‘<’ token
  using derived_alt = typename shell_of<derived>::type<T, Mathlib>;
                                                      ^
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h:77:26: error: ‘derived_alt’ does not name a type
  TensorInitializer(const derived_alt<U>&  tensor) : black_cat_array(tensor.innerShape()) {
                          ^~~~~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h:77:37: error: expected ‘,’ or ‘...’ before ‘<’ token
  TensorInitializer(const derived_alt<U>&  tensor) : black_cat_array(tensor.innerShape()) {
                                     ^
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h: In constructor ‘BC::TensorInitializer<_tensor<t, ml>, typename std::enable_if<BC::MTF::isCorePure<t>::conditional, void>::type>::TensorInitializer(int)’:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h:77:69: error: ‘tensor’ was not declared in this scope
  TensorInitializer(const derived_alt<U>&  tensor) : black_cat_array(tensor.innerShape()) {
                                                                     ^~~~~~
In file included from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10:0,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/TensorBase.h: At global scope:
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:38:71: error: expected ‘;’ before ‘<’ token
  template<class    U> using deriv   = typename shell_of<derived>::type<U, Mathlib>;
                                                                       ^
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:39:76: error: expected ‘;’ before ‘<’ token
  template<class... U> using functor = typename shell_of<functor_type>::type<U...>;
                                                                            ^
../UnitTests/../BC_Internals/BC_Core/TensorBase.h: In member function ‘auto BC::TensorBase<derived>::operator[](int)’:
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:83:68: error: expected ‘(’ before ‘<’ token
     auto operator [] (int i)    { return typename base<RANK>::slice<decltype(slice(0)), Mathlib>(slice(i)); }
                                                                    ^
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:83:69: error: expected primary-expression before ‘decltype’
     auto operator [] (int i)    { return typename base<RANK>::slice<decltype(slice(0)), Mathlib>(slice(i)); }
                                                                     ^~~~~~~~
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:83:69: error: expected ‘;’ before ‘decltype’
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:83:87: error: expected unqualified-id before ‘,’ token
     auto operator [] (int i)    { return typename base<RANK>::slice<decltype(slice(0)), Mathlib>(slice(i)); }
                                                                                       ^
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:83:96: error: expected initializer before ‘>’ token
     auto operator [] (int i)    { return typename base<RANK>::slice<decltype(slice(0)), Mathlib>(slice(i)); }
                                                                                                ^
../UnitTests/../BC_Internals/BC_Core/TensorBase.h: In member function ‘const auto BC::TensorBase<derived>::operator[](int) const’:
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:84:74: error: expected ‘(’ before ‘<’ token
  const auto operator [] (int i) const { return typename base<RANK>::slice<decltype(slice(0)), Mathlib>(slice(i)); }
                                                                          ^
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:84:75: error: expected primary-expression before ‘decltype’
  const auto operator [] (int i) const { return typename base<RANK>::slice<decltype(slice(0)), Mathlib>(slice(i)); }
                                                                           ^~~~~~~~
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:84:75: error: expected ‘;’ before ‘decltype’
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:84:93: error: expected unqualified-id before ‘,’ token
  const auto operator [] (int i) const { return typename base<RANK>::slice<decltype(slice(0)), Mathlib>(slice(i)); }
                                                                                             ^
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:84:102: error: expected initializer before ‘>’ token
  const auto operator [] (int i) const { return typename base<RANK>::slice<decltype(slice(0)), Mathlib>(slice(i)); }
                                                                                                      ^
In file included from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:50:0,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Vector.h: At global scope:
../UnitTests/../BC_Internals/BC_Core/Vector.h:45:15: error: ‘unary_expression_transpose’ was not declared in this scope
  const Vector<unary_expression_transpose<typename MTF::determine_scalar<T>::type, typename parent_class::functor_type>, Mathlib> t() const {
               ^~~~~~~~~~~~~~~~~~~~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Vector.h:45:118: error: template argument 1 is invalid
  const Vector<unary_expression_transpose<typename MTF::determine_scalar<T>::type, typename parent_class::functor_type>, Mathlib> t() const {
                                                                                                                      ^
../UnitTests/../BC_Internals/BC_Core/Vector.h:45:119: error: expected unqualified-id before ‘,’ token
  const Vector<unary_expression_transpose<typename MTF::determine_scalar<T>::type, typename parent_class::functor_type>, Mathlib> t() const {
                                                                                                                       ^
In file included from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:51:0,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Matrix.h:47:15: error: ‘unary_expression_transpose’ was not declared in this scope
  const Matrix<unary_expression_transpose<typename MTF::determine_scalar<T>::type, typename parent_class::functor_type>, Mathlib> t() const {
               ^~~~~~~~~~~~~~~~~~~~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Matrix.h:47:118: error: template argument 1 is invalid
  const Matrix<unary_expression_transpose<typename MTF::determine_scalar<T>::type, typename parent_class::functor_type>, Mathlib> t() const {
                                                                                                                      ^
../UnitTests/../BC_Internals/BC_Core/Matrix.h:47:119: error: expected unqualified-id before ‘,’ token
  const Matrix<unary_expression_transpose<typename MTF::determine_scalar<T>::type, typename parent_class::functor_type>, Mathlib> t() const {
                                                                                                                       ^
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:15:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h: In instantiation of ‘class BC::TensorInitializer<BC::Vector<BC::binary_expression<float, BC::mul, BC::Tensor_Core<BC::Vector<float> >, BC::Tensor_Core<BC::Vector<float> > >, BC::CPU>, void>’:
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:21:7:   required from ‘class BC::TensorBase<BC::Vector<BC::binary_expression<float, BC::mul, BC::Tensor_Core<BC::Vector<float> >, BC::Tensor_Core<BC::Vector<float> > >, BC::CPU> >’
../UnitTests/../BC_Internals/BC_Core/Vector.h:17:7:   required from ‘class BC::Vector<BC::binary_expression<float, BC::mul, BC::Tensor_Core<BC::Vector<float> >, BC::Tensor_Core<BC::Vector<float> > >, BC::CPU>’
../UnitTests/SpeedTests.h:43:19:   required from here
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h:28:15: error: ‘BC::TensorInitializer<derived, expression_tensor>::black_cat_array’ has incomplete type
  functor_type black_cat_array;
               ^~~~~~~~~~~~~~~
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:12:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:26:41: note: declaration of ‘using functor_type = BC::_functor<BC::Vector<BC::binary_expression<float, BC::mul, BC::Tensor_Core<BC::Vector<float> >, BC::Tensor_Core<BC::Vector<float> > >, BC::CPU> > {aka class BC::binary_expression<float, BC::mul, BC::Tensor_Core<BC::Vector<float> >, BC::Tensor_Core<BC::Vector<float> > >}’
 template<class,class,class,class> class binary_expression;
                                         ^~~~~~~~~~~~~~~~~
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:15:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h: In instantiation of ‘class BC::TensorInitializer<BC::Vector<BC::binary_expression<float, BC::assign, BC::Tensor_Core<BC::Vector<float> >, BC::binary_expression<float, BC::mul, BC::Tensor_Core<BC::Vector<float> >, BC::Tensor_Core<BC::Vector<float> > > >, BC::CPU>, void>’:
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:21:7:   required from ‘class BC::TensorBase<BC::Vector<BC::binary_expression<float, BC::assign, BC::Tensor_Core<BC::Vector<float> >, BC::binary_expression<float, BC::mul, BC::Tensor_Core<BC::Vector<float> >, BC::Tensor_Core<BC::Vector<float> > > >, BC::CPU> >’
../UnitTests/../BC_Internals/BC_Core/Vector.h:17:7:   required from ‘class BC::Vector<BC::binary_expression<float, BC::assign, BC::Tensor_Core<BC::Vector<float> >, BC::binary_expression<float, BC::mul, BC::Tensor_Core<BC::Vector<float> >, BC::Tensor_Core<BC::Vector<float> > > >, BC::CPU>’
../UnitTests/SpeedTests.h:43:24:   required from here
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h:28:15: error: ‘BC::TensorInitializer<derived, expression_tensor>::black_cat_array’ has incomplete type
  functor_type black_cat_array;
               ^~~~~~~~~~~~~~~
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:12:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:26:41: note: declaration of ‘using functor_type = BC::_functor<BC::Vector<BC::binary_expression<float, BC::assign, BC::Tensor_Core<BC::Vector<float> >, BC::binary_expression<float, BC::mul, BC::Tensor_Core<BC::Vector<float> >, BC::Tensor_Core<BC::Vector<float> > > >, BC::CPU> > {aka class BC::binary_expression<float, BC::assign, BC::Tensor_Core<BC::Vector<float> >, BC::binary_expression<float, BC::mul, BC::Tensor_Core<BC::Vector<float> >, BC::Tensor_Core<BC::Vector<float> > > >}’
 template<class,class,class,class> class binary_expression;
                                         ^~~~~~~~~~~~~~~~~
In file included from ../UnitTests/main.cpp:4:0:
../UnitTests/SpeedTests.h: In function ‘int speedTestsScalarIteration()’:
../UnitTests/SpeedTests.h:136:9: error: ‘using mat = class BC::Matrix<float> {aka class BC::Matrix<float>}’ has no member named ‘t’
   c = a.t() * b;
         ^
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:15:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h: In instantiation of ‘class BC::TensorInitializer<BC::Matrix<BC::binary_expression<float, BC::add, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> > >, BC::CPU>, void>’:
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:21:7:   required from ‘class BC::TensorBase<BC::Matrix<BC::binary_expression<float, BC::add, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> > >, BC::CPU> >’
../UnitTests/../BC_Internals/BC_Core/Matrix.h:17:7:   required from ‘class BC::Matrix<BC::binary_expression<float, BC::add, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> > >, BC::CPU>’
../UnitTests/SpeedTests.h:146:23:   required from here
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h:28:15: error: ‘BC::TensorInitializer<derived, expression_tensor>::black_cat_array’ has incomplete type
  functor_type black_cat_array;
               ^~~~~~~~~~~~~~~
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:12:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:26:41: note: declaration of ‘using functor_type = BC::_functor<BC::Matrix<BC::binary_expression<float, BC::add, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> > >, BC::CPU> > {aka class BC::binary_expression<float, BC::add, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> > >}’
 template<class,class,class,class> class binary_expression;
                                         ^~~~~~~~~~~~~~~~~
../UnitTests/main.cpp: In function ‘auto test()’:
../UnitTests/main.cpp:40:8: error: ‘using mat = class BC::Matrix<float> {aka class BC::Matrix<float>}’ has no member named ‘t’
  d = a.t();
        ^
../UnitTests/main.cpp:41:8: error: ‘using mat = class BC::Matrix<float> {aka class BC::Matrix<float>}’ has no member named ‘t’
  e = b.t();
        ^
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:15:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h: In instantiation of ‘class BC::TensorInitializer<BC::Matrix<BC::binary_expression_dotproduct<float, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::CPU>, void>’:
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:21:7:   required from ‘class BC::TensorBase<BC::Matrix<BC::binary_expression_dotproduct<float, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::CPU> >’
../UnitTests/../BC_Internals/BC_Core/Matrix.h:17:7:   required from ‘class BC::Matrix<BC::binary_expression_dotproduct<float, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::CPU>’
../UnitTests/main.cpp:47:10:   required from here
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h:28:15: error: ‘BC::TensorInitializer<derived, expression_tensor>::black_cat_array’ has incomplete type
  functor_type black_cat_array;
               ^~~~~~~~~~~~~~~
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:12:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:29:41: note: declaration of ‘using functor_type = BC::_functor<BC::Matrix<BC::binary_expression_dotproduct<float, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::CPU> > {aka class BC::binary_expression_dotproduct<float, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>}’
 template<class,class,class,class> class binary_expression_dotproduct;
                                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
../UnitTests/main.cpp:50:8: error: ‘using mat = class BC::Matrix<float> {aka class BC::Matrix<float>}’ has no member named ‘t’
  c = a.t() * b.t();
        ^
../UnitTests/main.cpp:50:16: error: ‘using mat = class BC::Matrix<float> {aka class BC::Matrix<float>}’ has no member named ‘t’
  c = a.t() * b.t();
                ^
../UnitTests/main.cpp:53:8: error: ‘using mat = class BC::Matrix<float> {aka class BC::Matrix<float>}’ has no member named ‘t’
  c = a.t() * e;
        ^
../UnitTests/main.cpp:56:12: error: ‘using mat = class BC::Matrix<float> {aka class BC::Matrix<float>}’ has no member named ‘t’
  c = d * b.t();
            ^
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:15:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h: In instantiation of ‘class BC::TensorInitializer<BC::Matrix<BC::binary_expression_scalar_R<float, BC::mul, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >, BC::CPU>, void>’:
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:21:7:   required from ‘class BC::TensorBase<BC::Matrix<BC::binary_expression_scalar_R<float, BC::mul, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >, BC::CPU> >’
../UnitTests/../BC_Internals/BC_Core/Matrix.h:17:7:   required from ‘class BC::Matrix<BC::binary_expression_scalar_R<float, BC::mul, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >, BC::CPU>’
../UnitTests/main.cpp:59:16:   required from here
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h:28:15: error: ‘BC::TensorInitializer<derived, expression_tensor>::black_cat_array’ has incomplete type
  functor_type black_cat_array;
               ^~~~~~~~~~~~~~~
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:12:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:28:41: note: declaration of ‘using functor_type = BC::_functor<BC::Matrix<BC::binary_expression_scalar_R<float, BC::mul, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >, BC::CPU> > {aka class BC::binary_expression_scalar_R<float, BC::mul, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >}’
 template<class,class,class,class> class binary_expression_scalar_R;
                                         ^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:15:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h: In instantiation of ‘class BC::TensorInitializer<BC::Matrix<BC::binary_expression_dotproduct<float, BC::binary_expression_scalar_R<float, BC::mul, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::CPU>, void>’:
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:21:7:   required from ‘class BC::TensorBase<BC::Matrix<BC::binary_expression_dotproduct<float, BC::binary_expression_scalar_R<float, BC::mul, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::CPU> >’
../UnitTests/../BC_Internals/BC_Core/Matrix.h:17:7:   required from ‘class BC::Matrix<BC::binary_expression_dotproduct<float, BC::binary_expression_scalar_R<float, BC::mul, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::CPU>’
../UnitTests/main.cpp:59:20:   required from here
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h:28:15: error: ‘BC::TensorInitializer<derived, expression_tensor>::black_cat_array’ has incomplete type
  functor_type black_cat_array;
               ^~~~~~~~~~~~~~~
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:12:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:29:41: note: declaration of ‘using functor_type = BC::_functor<BC::Matrix<BC::binary_expression_dotproduct<float, BC::binary_expression_scalar_R<float, BC::mul, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::CPU> > {aka class BC::binary_expression_dotproduct<float, BC::binary_expression_scalar_R<float, BC::mul, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>}’
 template<class,class,class,class> class binary_expression_dotproduct;
                                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:15:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h: In instantiation of ‘class BC::TensorInitializer<BC::Matrix<BC::binary_expression_scalar_L<float, BC::mul, BC::Tensor_Core<BC::Scalar<float, BC::CPU> >, BC::Tensor_Core<BC::Matrix<float> > >, BC::CPU>, void>’:
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:21:7:   required from ‘class BC::TensorBase<BC::Matrix<BC::binary_expression_scalar_L<float, BC::mul, BC::Tensor_Core<BC::Scalar<float, BC::CPU> >, BC::Tensor_Core<BC::Matrix<float> > >, BC::CPU> >’
../UnitTests/../BC_Internals/BC_Core/Matrix.h:17:7:   required from ‘class BC::Matrix<BC::binary_expression_scalar_L<float, BC::mul, BC::Tensor_Core<BC::Scalar<float, BC::CPU> >, BC::Tensor_Core<BC::Matrix<float> > >, BC::CPU>’
../UnitTests/main.cpp:62:16:   required from here
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h:28:15: error: ‘BC::TensorInitializer<derived, expression_tensor>::black_cat_array’ has incomplete type
  functor_type black_cat_array;
               ^~~~~~~~~~~~~~~
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:12:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:27:41: note: declaration of ‘using functor_type = BC::_functor<BC::Matrix<BC::binary_expression_scalar_L<float, BC::mul, BC::Tensor_Core<BC::Scalar<float, BC::CPU> >, BC::Tensor_Core<BC::Matrix<float> > >, BC::CPU> > {aka class BC::binary_expression_scalar_L<float, BC::mul, BC::Tensor_Core<BC::Scalar<float, BC::CPU> >, BC::Tensor_Core<BC::Matrix<float> > >}’
 template<class,class,class,class> class binary_expression_scalar_L;
                                         ^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:15:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h: In instantiation of ‘class BC::TensorInitializer<BC::Matrix<BC::binary_expression_dotproduct<float, BC::binary_expression_scalar_L<float, BC::mul, BC::Tensor_Core<BC::Scalar<float, BC::CPU> >, BC::Tensor_Core<BC::Matrix<float> > >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::CPU>, void>’:
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:21:7:   required from ‘class BC::TensorBase<BC::Matrix<BC::binary_expression_dotproduct<float, BC::binary_expression_scalar_L<float, BC::mul, BC::Tensor_Core<BC::Scalar<float, BC::CPU> >, BC::Tensor_Core<BC::Matrix<float> > >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::CPU> >’
../UnitTests/../BC_Internals/BC_Core/Matrix.h:17:7:   required from ‘class BC::Matrix<BC::binary_expression_dotproduct<float, BC::binary_expression_scalar_L<float, BC::mul, BC::Tensor_Core<BC::Scalar<float, BC::CPU> >, BC::Tensor_Core<BC::Matrix<float> > >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::CPU>’
../UnitTests/main.cpp:62:20:   required from here
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h:28:15: error: ‘BC::TensorInitializer<derived, expression_tensor>::black_cat_array’ has incomplete type
  functor_type black_cat_array;
               ^~~~~~~~~~~~~~~
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:12:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:29:41: note: declaration of ‘using functor_type = BC::_functor<BC::Matrix<BC::binary_expression_dotproduct<float, BC::binary_expression_scalar_L<float, BC::mul, BC::Tensor_Core<BC::Scalar<float, BC::CPU> >, BC::Tensor_Core<BC::Matrix<float> > >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::CPU> > {aka class BC::binary_expression_dotproduct<float, BC::binary_expression_scalar_L<float, BC::mul, BC::Tensor_Core<BC::Scalar<float, BC::CPU> >, BC::Tensor_Core<BC::Matrix<float> > >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>}’
 template<class,class,class,class> class binary_expression_dotproduct;
                                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:15:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h: In instantiation of ‘class BC::TensorInitializer<BC::Matrix<BC::binary_expression_scalar_R<float, BC::mul, BC::binary_expression_dotproduct<float, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >, BC::CPU>, void>’:
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:21:7:   required from ‘class BC::TensorBase<BC::Matrix<BC::binary_expression_scalar_R<float, BC::mul, BC::binary_expression_dotproduct<float, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >, BC::CPU> >’
../UnitTests/../BC_Internals/BC_Core/Matrix.h:17:7:   required from ‘class BC::Matrix<BC::binary_expression_scalar_R<float, BC::mul, BC::binary_expression_dotproduct<float, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >, BC::CPU>’
../UnitTests/main.cpp:64:20:   required from here
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h:28:15: error: ‘BC::TensorInitializer<derived, expression_tensor>::black_cat_array’ has incomplete type
  functor_type black_cat_array;
               ^~~~~~~~~~~~~~~
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:12:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:28:41: note: declaration of ‘using functor_type = BC::_functor<BC::Matrix<BC::binary_expression_scalar_R<float, BC::mul, BC::binary_expression_dotproduct<float, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >, BC::CPU> > {aka class BC::binary_expression_scalar_R<float, BC::mul, BC::binary_expression_dotproduct<float, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >}’
 template<class,class,class,class> class binary_expression_scalar_R;
                                         ^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:13:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Utility.h: In instantiation of ‘auto BC::Tensor_Utility<deriv, <template-parameter-1-2> >::eval() const [with deriv = BC::Matrix<BC::binary_expression<float, BC::add, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> > >, BC::CPU>; <template-parameter-1-2> = void]’:
../UnitTests/main.cpp:75:15:   required from here
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Utility.h:34:36: error: dependent-name ‘BC::MTF::shell_of<deriv>::type’ is parsed as a non-type, but instantiation yields a type
   return MTF::shell_of<deriv>::type<_scalar<deriv>, _mathlib<deriv>>(this->asDerived());
          ~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Utility.h:34:36: note: say ‘typename BC::MTF::shell_of<deriv>::type’ if a type is meant
../UnitTests/main.cpp:76:8: error: ‘using mat = class BC::Matrix<float> {aka class BC::Matrix<float>}’ has no member named ‘t’
  c = a.t() * b.t();
        ^
../UnitTests/main.cpp:76:16: error: ‘using mat = class BC::Matrix<float> {aka class BC::Matrix<float>}’ has no member named ‘t’
  c = a.t() * b.t();
                ^
../UnitTests/main.cpp:80:8: error: ‘using mat = class BC::Matrix<float> {aka class BC::Matrix<float>}’ has no member named ‘t’
  c = a.t() * A * (b.t() * A);
        ^
../UnitTests/main.cpp:80:21: error: ‘using mat = class BC::Matrix<float> {aka class BC::Matrix<float>}’ has no member named ‘t’
  c = a.t() * A * (b.t() * A);
                     ^
../UnitTests/main.cpp:94:14: error: invalid operands of types ‘void’ and ‘void’ to binary ‘operator+’
  d[1] = d[1] + d[1];
         ~~~~~^~~~~~
../UnitTests/main.cpp:99:8: error: invalid types ‘void[int]’ for array subscript
  d[1][1] = d[1][1] + d[1][1];
        ^
../UnitTests/main.cpp:99:18: error: invalid types ‘void[int]’ for array subscript
  d[1][1] = d[1][1] + d[1][1];
                  ^
../UnitTests/main.cpp:99:28: error: invalid types ‘void[int]’ for array subscript
  d[1][1] = d[1][1] + d[1][1];
                            ^
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:13:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Utility.h: In instantiation of ‘void BC::Tensor_Utility<deriv, typename std::enable_if<(isPrim<typename BC::determine_functor< <template-parameter-1-1> >::fscal> || BC::MTF::isCore<typename BC::determine_functor< <template-parameter-1-1> >::type>::conditional), void>::type>::read(std::ifstream&, bool, bool) [with deriv = BC::Matrix<double>; typename std::enable_if<(isPrim<typename BC::determine_functor< <template-parameter-1-1> >::fscal> || BC::MTF::isCore<typename BC::determine_functor< <template-parameter-1-1> >::type>::conditional), void>::type = void; std::ifstream = std::basic_ifstream<char>]’:
../UnitTests/main.cpp:113:15:   required from here
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Utility.h:132:22: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
    for (int i = 0; i < dims.size(); ++i) {
                    ~~^~~~~~~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Utility.h:138:92: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
    MATHLIB::HostToDevice(asDerived().data().core(), &data[data[0] + 1], asDerived().size() > data.size() ? data.size() : asDerived().size());
                                                                                             
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:13:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Utility.h:140:86: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
    MATHLIB::HostToDevice(asDerived().data().core(), &data[0],     asDerived().size() > data.size() ? data.size() : asDerived().size());
                                                                                       
In file included from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:32:0,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_MathLibraries/Mathematics_CPU.h: In instantiation of ‘static void BC::CPU::copy(T&, const J&, int) [with T = BC::Tensor_Core<BC::Matrix<float> >; J = BC::binary_expression_dotproduct<float, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>]’:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:218:21:   required from ‘derived& BC::Tensor_Operations< <template-parameter-1-1> >::operator=(const BC::Tensor_Operations<param_deriv>&) [with pDeriv = BC::Matrix<BC::binary_expression_dotproduct<float, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::CPU>; derived = BC::Matrix<float>]’
../UnitTests/../BC_Internals/BC_Core/Matrix.h:45:83:   required from ‘BC::Matrix< <template-parameter-1-1>, ML>& BC::Matrix< <template-parameter-1-1>, ML>::operator=(const BC::Matrix<U, Mathlib>&) [with U = BC::binary_expression_dotproduct<float, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>; T = float; Mathlib = BC::CPU]’
../UnitTests/main.cpp:47:10:   required from here
../UnitTests/../BC_Internals/BC_MathLibraries/Mathematics_CPU.h:70:13: error: no match for ‘operator[]’ (operand types are ‘const BC::binary_expression_dotproduct<float, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>’ and ‘int’)
     t[i] = j[i];
            ~^
../UnitTests/../BC_Internals/BC_MathLibraries/Mathematics_CPU.h:76:12: error: no match for ‘operator[]’ (operand types are ‘const BC::binary_expression_dotproduct<float, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>’ and ‘int’)
    t[i] = j[i];
           ~^
../UnitTests/../BC_Internals/BC_MathLibraries/Mathematics_CPU.h: In instantiation of ‘static void BC::CPU::copy(T&, const J&, int) [with T = BC::Tensor_Core<BC::Matrix<float> >; J = BC::binary_expression_dotproduct<float, BC::binary_expression_scalar_R<float, BC::mul, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>]’:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:218:21:   required from ‘derived& BC::Tensor_Operations< <template-parameter-1-1> >::operator=(const BC::Tensor_Operations<param_deriv>&) [with pDeriv = BC::Matrix<BC::binary_expression_dotproduct<float, BC::binary_expression_scalar_R<float, BC::mul, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::CPU>; derived = BC::Matrix<float>]’
../UnitTests/../BC_Internals/BC_Core/Matrix.h:45:83:   required from ‘BC::Matrix< <template-parameter-1-1>, ML>& BC::Matrix< <template-parameter-1-1>, ML>::operator=(const BC::Matrix<U, Mathlib>&) [with U = BC::binary_expression_dotproduct<float, BC::binary_expression_scalar_R<float, BC::mul, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>; T = float; Mathlib = BC::CPU]’
../UnitTests/main.cpp:59:20:   required from here
../UnitTests/../BC_Internals/BC_MathLibraries/Mathematics_CPU.h:70:13: error: no match for ‘operator[]’ (operand types are ‘const BC::binary_expression_dotproduct<float, BC::binary_expression_scalar_R<float, BC::mul, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>’ and ‘int’)
     t[i] = j[i];
            ~^
../UnitTests/../BC_Internals/BC_MathLibraries/Mathematics_CPU.h:76:12: error: no match for ‘operator[]’ (operand types are ‘const BC::binary_expression_dotproduct<float, BC::binary_expression_scalar_R<float, BC::mul, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>’ and ‘int’)
    t[i] = j[i];
           ~^
../UnitTests/../BC_Internals/BC_MathLibraries/Mathematics_CPU.h: In instantiation of ‘static void BC::CPU::copy(T&, const J&, int) [with T = BC::Tensor_Core<BC::Matrix<float> >; J = BC::binary_expression_dotproduct<float, BC::binary_expression_scalar_L<float, BC::mul, BC::Tensor_Core<BC::Scalar<float, BC::CPU> >, BC::Tensor_Core<BC::Matrix<float> > >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>]’:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:218:21:   required from ‘derived& BC::Tensor_Operations< <template-parameter-1-1> >::operator=(const BC::Tensor_Operations<param_deriv>&) [with pDeriv = BC::Matrix<BC::binary_expression_dotproduct<float, BC::binary_expression_scalar_L<float, BC::mul, BC::Tensor_Core<BC::Scalar<float, BC::CPU> >, BC::Tensor_Core<BC::Matrix<float> > >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::CPU>; derived = BC::Matrix<float>]’
../UnitTests/../BC_Internals/BC_Core/Matrix.h:45:83:   required from ‘BC::Matrix< <template-parameter-1-1>, ML>& BC::Matrix< <template-parameter-1-1>, ML>::operator=(const BC::Matrix<U, Mathlib>&) [with U = BC::binary_expression_dotproduct<float, BC::binary_expression_scalar_L<float, BC::mul, BC::Tensor_Core<BC::Scalar<float, BC::CPU> >, BC::Tensor_Core<BC::Matrix<float> > >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>; T = float; Mathlib = BC::CPU]’
../UnitTests/main.cpp:62:20:   required from here
../UnitTests/../BC_Internals/BC_MathLibraries/Mathematics_CPU.h:70:13: error: no match for ‘operator[]’ (operand types are ‘const BC::binary_expression_dotproduct<float, BC::binary_expression_scalar_L<float, BC::mul, BC::Tensor_Core<BC::Scalar<float, BC::CPU> >, BC::Tensor_Core<BC::Matrix<float> > >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>’ and ‘int’)
     t[i] = j[i];
            ~^
../UnitTests/../BC_Internals/BC_MathLibraries/Mathematics_CPU.h:76:12: error: no match for ‘operator[]’ (operand types are ‘const BC::binary_expression_dotproduct<float, BC::binary_expression_scalar_L<float, BC::mul, BC::Tensor_Core<BC::Scalar<float, BC::CPU> >, BC::Tensor_Core<BC::Matrix<float> > >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>’ and ‘int’)
    t[i] = j[i];
           ~^
../UnitTests/../BC_Internals/BC_MathLibraries/Mathematics_CPU.h: In instantiation of ‘static void BC::CPU::copy(T&, const J&, int) [with T = BC::Tensor_Core<BC::Matrix<float> >; J = BC::binary_expression_scalar_R<float, BC::mul, BC::binary_expression_dotproduct<float, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >]’:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:218:21:   required from ‘derived& BC::Tensor_Operations< <template-parameter-1-1> >::operator=(const BC::Tensor_Operations<param_deriv>&) [with pDeriv = BC::Matrix<BC::binary_expression_scalar_R<float, BC::mul, BC::binary_expression_dotproduct<float, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >, BC::CPU>; derived = BC::Matrix<float>]’
../UnitTests/../BC_Internals/BC_Core/Matrix.h:45:83:   required from ‘BC::Matrix< <template-parameter-1-1>, ML>& BC::Matrix< <template-parameter-1-1>, ML>::operator=(const BC::Matrix<U, Mathlib>&) [with U = BC::binary_expression_scalar_R<float, BC::mul, BC::binary_expression_dotproduct<float, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >; T = float; Mathlib = BC::CPU]’
../UnitTests/main.cpp:64:20:   required from here
../UnitTests/../BC_Internals/BC_MathLibraries/Mathematics_CPU.h:70:13: error: no match for ‘operator[]’ (operand types are ‘const BC::binary_expression_scalar_R<float, BC::mul, BC::binary_expression_dotproduct<float, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >’ and ‘int’)
     t[i] = j[i];
            ~^
../UnitTests/../BC_Internals/BC_MathLibraries/Mathematics_CPU.h:76:12: error: no match for ‘operator[]’ (operand types are ‘const BC::binary_expression_scalar_R<float, BC::mul, BC::binary_expression_dotproduct<float, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >’ and ‘int’)
    t[i] = j[i];
           ~^
In file included from ../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Core_Slice.h:17:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Core.h:13,
                 from ../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h:12,
                 from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:15,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Core_Scalar.h: In instantiation of ‘BC::Tensor_Scalar<PARENT>::Tensor_Scalar(BC::Tensor_Scalar<PARENT>::scalar*, const PARENT&) [with PARENT = BC::Tensor_Core<BC::Matrix<float> >; BC::Tensor_Scalar<PARENT>::scalar = float]’:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h:33:63:   required from ‘BC::TensorInitializer<derived, expression_tensor>::TensorInitializer(const params& ...) [with params = {float*, BC::Tensor_Core<BC::Matrix<float, BC::CPU> >}; derived = BC::Scalar<BC::Tensor_Scalar<BC::Tensor_Core<BC::Matrix<float> > >, BC::CPU>; expression_tensor = void]’
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:50:51:   required from ‘BC::TensorBase<derived>::TensorBase(const params& ...) [with params = {float*, BC::Tensor_Core<BC::Matrix<float, BC::CPU> >}; derived = BC::Scalar<BC::Tensor_Scalar<BC::Tensor_Core<BC::Matrix<float> > >, BC::CPU>]’
../UnitTests/../BC_Internals/BC_Core/Scalar.h:61:97:   required from ‘BC::Scalar< <template-parameter-1-1>, ML>::Scalar(const var1&, const var2&, const params& ...) [with var1 = float*; var2 = BC::Tensor_Core<BC::Matrix<float> >; params = {}; T = BC::Tensor_Scalar<BC::Tensor_Core<BC::Matrix<float> > >; Mathlib = BC::CPU]’
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:92:19:   required from ‘auto BC::TensorBase<derived>::getScalar(int) [with derived = BC::Matrix<float>]’
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:96:52:   required from ‘auto BC::TensorBase<derived>::operator()(int) [with derived = BC::Matrix<float>]’
../UnitTests/main.cpp:33:6:   required from here
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Core_Scalar.h:36:10: warning: ‘BC::Tensor_Scalar<BC::Tensor_Core<BC::Matrix<float> > >::array_slice’ will be initialized after [-Wreorder]
  scalar* array_slice;
          ^~~~~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Core_Scalar.h:35:16: warning:   ‘const BC::Tensor_Core<BC::Matrix<float> >& BC::Tensor_Scalar<BC::Tensor_Core<BC::Matrix<float> > >::parent’ [-Wreorder]
  const PARENT& parent;
                ^~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Core_Scalar.h:41:2: warning:   when initialized here [-Wreorder]
  Tensor_Scalar(scalar* array, const PARENT& parent_) : array_slice(array), parent(parent_) {}
  ^~~~~~~~~~~~~
In file included from ../UnitTests/../BC_Internals/BC_MathLibraries/Mathematics_CPU.h:15:0,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:32,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_MathLibraries/BC_PrintFunctions.h: In instantiation of ‘void BC::printHelper(const T&, int_ranks, int, std::__cxx11::string, int) [with T = const float*; int_ranks = int*; std::__cxx11::string = std::__cxx11::basic_string<char>]’:
../UnitTests/../BC_Internals/BC_MathLibraries/BC_PrintFunctions.h:102:13:   required from ‘void BC::print(const T&, RANKS, int, int) [with T = const float*; RANKS = int*]’
../UnitTests/../BC_Internals/BC_MathLibraries/Mathematics_CPU.h:98:12:   required from ‘static void BC::CPU::print(T, RANKS, int, int) [with T = const float*; RANKS = int*]’
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Utility.h:75:17:   required from ‘void BC::Tensor_Utility<deriv, typename std::enable_if<(isPrim<typename BC::determine_functor< <template-parameter-1-1> >::fscal> || BC::MTF::isCore<typename BC::determine_functor< <template-parameter-1-1> >::type>::conditional), void>::type>::print() const [with deriv = BC::Matrix<float>; typename std::enable_if<(isPrim<typename BC::determine_functor< <template-parameter-1-1> >::fscal> || BC::MTF::isCore<typename BC::determine_functor< <template-parameter-1-1> >::type>::conditional), void>::type = void]’
../UnitTests/main.cpp:37:10:   required from here
../UnitTests/../BC_Internals/BC_MathLibraries/BC_PrintFunctions.h:43:38: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
     str = str.substr(0, str.length() < printSpace ? str.length() : printSpace);
                                       
../UnitTests/../BC_Internals/BC_MathLibraries/BC_PrintFunctions.h:46:22: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
     if (str.length() < printSpace)
                       
../UnitTests/../BC_Internals/BC_MathLibraries/BC_PrintFunctions.h:67:37: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
    str = str.substr(0, str.length() < printSpace ? str.length() : printSpace);
                                      
../UnitTests/../BC_Internals/BC_MathLibraries/BC_PrintFunctions.h:70:21: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
    if (str.length() < printSpace)
                      
../UnitTests/../BC_Internals/BC_MathLibraries/BC_PrintFunctions.h: In instantiation of ‘void BC::printHelper(const T&, int_ranks, int, std::__cxx11::string, int) [with T = const double*; int_ranks = int*; std::__cxx11::string = std::__cxx11::basic_string<char>]’:
../UnitTests/../BC_Internals/BC_MathLibraries/BC_PrintFunctions.h:102:13:   required from ‘void BC::print(const T&, RANKS, int, int) [with T = const double*; RANKS = int*]’
../UnitTests/../BC_Internals/BC_MathLibraries/Mathematics_CPU.h:98:12:   required from ‘static void BC::CPU::print(T, RANKS, int, int) [with T = const double*; RANKS = int*]’
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Utility.h:75:17:   required from ‘void BC::Tensor_Utility<deriv, typename std::enable_if<(isPrim<typename BC::determine_functor< <template-parameter-1-1> >::fscal> || BC::MTF::isCore<typename BC::determine_functor< <template-parameter-1-1> >::type>::conditional), void>::type>::print() const [with deriv = BC::Matrix<double>; typename std::enable_if<(isPrim<typename BC::determine_functor< <template-parameter-1-1> >::fscal> || BC::MTF::isCore<typename BC::determine_functor< <template-parameter-1-1> >::type>::conditional), void>::type = void]’
../UnitTests/main.cpp:114:14:   required from here
../UnitTests/../BC_Internals/BC_MathLibraries/BC_PrintFunctions.h:43:38: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
     str = str.substr(0, str.length() < printSpace ? str.length() : printSpace);
                                       
../UnitTests/../BC_Internals/BC_MathLibraries/BC_PrintFunctions.h:46:22: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
     if (str.length() < printSpace)
                       
../UnitTests/../BC_Internals/BC_MathLibraries/BC_PrintFunctions.h:67:37: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
    str = str.substr(0, str.length() < printSpace ? str.length() : printSpace);
                                      
../UnitTests/../BC_Internals/BC_MathLibraries/BC_PrintFunctions.h:70:21: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
    if (str.length() < printSpace)
                      
make: *** [UnitTests/main.o] Error 1
UnitTests/subdir.mk:18: recipe for target 'UnitTests/main.o' failed
17:13:48 **** Incremental Build of configuration Debug for project BlackCat_LibraryCPU ****
make all 
Building file: ../UnitTests/main.cpp
Invoking: GCC C++ Compiler
g++ -O0 -g3 -Wall -c -fmessage-length=0 -MMD -MP -MF"UnitTests/main.d" -MT"UnitTests/main.o" -o "UnitTests/main.o" "../UnitTests/main.cpp"
In file included from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:32:0,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_MathLibraries/Mathematics_CPU.h:74:0: warning: ignoring #pragma omp parallel [-Wunknown-pragmas]
 #pragma omp parallel for
 
../UnitTests/../BC_Internals/BC_MathLibraries/Mathematics_CPU.h:78:0: warning: ignoring #pragma omp barrier [-Wunknown-pragmas]
 #pragma omp barrier
 
../UnitTests/../BC_Internals/BC_MathLibraries/Mathematics_CPU.h:88:0: warning: ignoring #pragma omp parallel [-Wunknown-pragmas]
 #pragma omp parallel for
 
../UnitTests/../BC_Internals/BC_MathLibraries/Mathematics_CPU.h:92:0: warning: ignoring #pragma omp barrier [-Wunknown-pragmas]
 #pragma omp barrier
 
In file included from ../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Core_Slice.h:17:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Core.h:13,
                 from ../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h:12,
                 from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:15,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Core_Scalar.h:22:0: warning: "__BCinline__" redefined
 #define __BCinline__
 
In file included from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:29:0,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Expressions/BlackCat_Internal_Definitions.h:25:0: note: this is the location of the previous definition
 #define __BCinline__ __BC_gcpu__ __attribute__((always_inline))
 
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:13:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Utility.h:35:12: error: need ‘typename’ before ‘BC::MTF::shell_of< <template-parameter-1-1> >::type’ because ‘BC::MTF::shell_of< <template-parameter-1-1> >’ is a dependent scope
  using t1= MTF::shell_of<deriv>::type;
            ^~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Utility.h:37:20: error: ‘t1’ does not name a type
  using eval_type = t1<_scalar<deriv>, _mathlib<deriv>>;
                    ^~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Utility.h: In member function ‘auto BC::Tensor_Utility<deriv, <template-parameter-1-2> >::eval() const’:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Utility.h:41:45: error: expected ‘(’ before ‘<’ token
   return typename MTF::shell_of<deriv>::type<_scalar<deriv>, _mathlib<deriv>>(this->asDerived());
                                             ^
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Utility.h:41:60: error: expected primary-expression before ‘,’ token
   return typename MTF::shell_of<deriv>::type<_scalar<deriv>, _mathlib<deriv>>(this->asDerived());
                                                            ^
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Utility.h:41:76: error: expected primary-expression before ‘>’ token
   return typename MTF::shell_of<deriv>::type<_scalar<deriv>, _mathlib<deriv>>(this->asDerived());
                                                                            ^~
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:15:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h: At global scope:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h:74:54: error: expected ‘;’ before ‘<’ token
  using derived_alt = typename shell_of<derived>::type<T, Mathlib>;
                                                      ^
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h:77:26: error: ‘derived_alt’ does not name a type
  TensorInitializer(const derived_alt<U>&  tensor) : black_cat_array(tensor.innerShape()) {
                          ^~~~~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h:77:37: error: expected ‘,’ or ‘...’ before ‘<’ token
  TensorInitializer(const derived_alt<U>&  tensor) : black_cat_array(tensor.innerShape()) {
                                     ^
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h: In constructor ‘BC::TensorInitializer<_tensor<t, ml>, typename std::enable_if<BC::MTF::isCorePure<t>::conditional, void>::type>::TensorInitializer(int)’:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h:77:69: error: ‘tensor’ was not declared in this scope
  TensorInitializer(const derived_alt<U>&  tensor) : black_cat_array(tensor.innerShape()) {
                                                                     ^~~~~~
In file included from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10:0,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/TensorBase.h: At global scope:
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:38:71: error: expected ‘;’ before ‘<’ token
  template<class    U> using deriv   = typename shell_of<derived>::type<U, Mathlib>;
                                                                       ^
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:39:76: error: expected ‘;’ before ‘<’ token
  template<class... U> using functor = typename shell_of<functor_type>::type<U...>;
                                                                            ^
../UnitTests/../BC_Internals/BC_Core/TensorBase.h: In member function ‘auto BC::TensorBase<derived>::operator[](int)’:
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:83:68: error: expected ‘(’ before ‘<’ token
     auto operator [] (int i)    { return typename base<RANK>::slice<decltype(slice(0)), Mathlib>(slice(i)); }
                                                                    ^
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:83:69: error: expected primary-expression before ‘decltype’
     auto operator [] (int i)    { return typename base<RANK>::slice<decltype(slice(0)), Mathlib>(slice(i)); }
                                                                     ^~~~~~~~
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:83:69: error: expected ‘;’ before ‘decltype’
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:83:87: error: expected unqualified-id before ‘,’ token
     auto operator [] (int i)    { return typename base<RANK>::slice<decltype(slice(0)), Mathlib>(slice(i)); }
                                                                                       ^
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:83:96: error: expected initializer before ‘>’ token
     auto operator [] (int i)    { return typename base<RANK>::slice<decltype(slice(0)), Mathlib>(slice(i)); }
                                                                                                ^
../UnitTests/../BC_Internals/BC_Core/TensorBase.h: In member function ‘const auto BC::TensorBase<derived>::operator[](int) const’:
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:84:74: error: expected ‘(’ before ‘<’ token
  const auto operator [] (int i) const { return typename base<RANK>::slice<decltype(slice(0)), Mathlib>(slice(i)); }
                                                                          ^
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:84:75: error: expected primary-expression before ‘decltype’
  const auto operator [] (int i) const { return typename base<RANK>::slice<decltype(slice(0)), Mathlib>(slice(i)); }
                                                                           ^~~~~~~~
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:84:75: error: expected ‘;’ before ‘decltype’
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:84:93: error: expected unqualified-id before ‘,’ token
  const auto operator [] (int i) const { return typename base<RANK>::slice<decltype(slice(0)), Mathlib>(slice(i)); }
                                                                                             ^
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:84:102: error: expected initializer before ‘>’ token
  const auto operator [] (int i) const { return typename base<RANK>::slice<decltype(slice(0)), Mathlib>(slice(i)); }
                                                                                                      ^
In file included from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:50:0,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Vector.h: At global scope:
../UnitTests/../BC_Internals/BC_Core/Vector.h:45:15: error: ‘unary_expression_transpose’ was not declared in this scope
  const Vector<unary_expression_transpose<typename MTF::determine_scalar<T>::type, typename parent_class::functor_type>, Mathlib> t() const {
               ^~~~~~~~~~~~~~~~~~~~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Vector.h:45:118: error: template argument 1 is invalid
  const Vector<unary_expression_transpose<typename MTF::determine_scalar<T>::type, typename parent_class::functor_type>, Mathlib> t() const {
                                                                                                                      ^
../UnitTests/../BC_Internals/BC_Core/Vector.h:45:119: error: expected unqualified-id before ‘,’ token
  const Vector<unary_expression_transpose<typename MTF::determine_scalar<T>::type, typename parent_class::functor_type>, Mathlib> t() const {
                                                                                                                       ^
In file included from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:51:0,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Matrix.h:47:15: error: ‘unary_expression_transpose’ was not declared in this scope
  const Matrix<unary_expression_transpose<typename MTF::determine_scalar<T>::type, typename parent_class::functor_type>, Mathlib> t() const {
               ^~~~~~~~~~~~~~~~~~~~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Matrix.h:47:118: error: template argument 1 is invalid
  const Matrix<unary_expression_transpose<typename MTF::determine_scalar<T>::type, typename parent_class::functor_type>, Mathlib> t() const {
                                                                                                                      ^
../UnitTests/../BC_Internals/BC_Core/Matrix.h:47:119: error: expected unqualified-id before ‘,’ token
  const Matrix<unary_expression_transpose<typename MTF::determine_scalar<T>::type, typename parent_class::functor_type>, Mathlib> t() const {
                                                                                                                       ^
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:15:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h: In instantiation of ‘class BC::TensorInitializer<BC::Vector<BC::binary_expression<float, BC::mul, BC::Tensor_Core<BC::Vector<float> >, BC::Tensor_Core<BC::Vector<float> > >, BC::CPU>, void>’:
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:21:7:   required from ‘class BC::TensorBase<BC::Vector<BC::binary_expression<float, BC::mul, BC::Tensor_Core<BC::Vector<float> >, BC::Tensor_Core<BC::Vector<float> > >, BC::CPU> >’
../UnitTests/../BC_Internals/BC_Core/Vector.h:17:7:   required from ‘class BC::Vector<BC::binary_expression<float, BC::mul, BC::Tensor_Core<BC::Vector<float> >, BC::Tensor_Core<BC::Vector<float> > >, BC::CPU>’
../UnitTests/SpeedTests.h:43:19:   required from here
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h:28:15: error: ‘BC::TensorInitializer<derived, expression_tensor>::black_cat_array’ has incomplete type
  functor_type black_cat_array;
               ^~~~~~~~~~~~~~~
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:12:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:26:41: note: declaration of ‘using functor_type = BC::_functor<BC::Vector<BC::binary_expression<float, BC::mul, BC::Tensor_Core<BC::Vector<float> >, BC::Tensor_Core<BC::Vector<float> > >, BC::CPU> > {aka class BC::binary_expression<float, BC::mul, BC::Tensor_Core<BC::Vector<float> >, BC::Tensor_Core<BC::Vector<float> > >}’
 template<class,class,class,class> class binary_expression;
                                         ^~~~~~~~~~~~~~~~~
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:15:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h: In instantiation of ‘class BC::TensorInitializer<BC::Vector<BC::binary_expression<float, BC::assign, BC::Tensor_Core<BC::Vector<float> >, BC::binary_expression<float, BC::mul, BC::Tensor_Core<BC::Vector<float> >, BC::Tensor_Core<BC::Vector<float> > > >, BC::CPU>, void>’:
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:21:7:   required from ‘class BC::TensorBase<BC::Vector<BC::binary_expression<float, BC::assign, BC::Tensor_Core<BC::Vector<float> >, BC::binary_expression<float, BC::mul, BC::Tensor_Core<BC::Vector<float> >, BC::Tensor_Core<BC::Vector<float> > > >, BC::CPU> >’
../UnitTests/../BC_Internals/BC_Core/Vector.h:17:7:   required from ‘class BC::Vector<BC::binary_expression<float, BC::assign, BC::Tensor_Core<BC::Vector<float> >, BC::binary_expression<float, BC::mul, BC::Tensor_Core<BC::Vector<float> >, BC::Tensor_Core<BC::Vector<float> > > >, BC::CPU>’
../UnitTests/SpeedTests.h:43:24:   required from here
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h:28:15: error: ‘BC::TensorInitializer<derived, expression_tensor>::black_cat_array’ has incomplete type
  functor_type black_cat_array;
               ^~~~~~~~~~~~~~~
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:12:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:26:41: note: declaration of ‘using functor_type = BC::_functor<BC::Vector<BC::binary_expression<float, BC::assign, BC::Tensor_Core<BC::Vector<float> >, BC::binary_expression<float, BC::mul, BC::Tensor_Core<BC::Vector<float> >, BC::Tensor_Core<BC::Vector<float> > > >, BC::CPU> > {aka class BC::binary_expression<float, BC::assign, BC::Tensor_Core<BC::Vector<float> >, BC::binary_expression<float, BC::mul, BC::Tensor_Core<BC::Vector<float> >, BC::Tensor_Core<BC::Vector<float> > > >}’
 template<class,class,class,class> class binary_expression;
                                         ^~~~~~~~~~~~~~~~~
In file included from ../UnitTests/main.cpp:4:0:
../UnitTests/SpeedTests.h: In function ‘int speedTestsScalarIteration()’:
../UnitTests/SpeedTests.h:136:9: error: ‘using mat = class BC::Matrix<float> {aka class BC::Matrix<float>}’ has no member named ‘t’
   c = a.t() * b;
         ^
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:15:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h: In instantiation of ‘class BC::TensorInitializer<BC::Matrix<BC::binary_expression<float, BC::add, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> > >, BC::CPU>, void>’:
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:21:7:   required from ‘class BC::TensorBase<BC::Matrix<BC::binary_expression<float, BC::add, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> > >, BC::CPU> >’
../UnitTests/../BC_Internals/BC_Core/Matrix.h:17:7:   required from ‘class BC::Matrix<BC::binary_expression<float, BC::add, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> > >, BC::CPU>’
../UnitTests/SpeedTests.h:146:23:   required from here
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h:28:15: error: ‘BC::TensorInitializer<derived, expression_tensor>::black_cat_array’ has incomplete type
  functor_type black_cat_array;
               ^~~~~~~~~~~~~~~
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:12:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:26:41: note: declaration of ‘using functor_type = BC::_functor<BC::Matrix<BC::binary_expression<float, BC::add, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> > >, BC::CPU> > {aka class BC::binary_expression<float, BC::add, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> > >}’
 template<class,class,class,class> class binary_expression;
                                         ^~~~~~~~~~~~~~~~~
../UnitTests/main.cpp: In function ‘auto test()’:
../UnitTests/main.cpp:40:8: error: ‘using mat = class BC::Matrix<float> {aka class BC::Matrix<float>}’ has no member named ‘t’
  d = a.t();
        ^
../UnitTests/main.cpp:41:8: error: ‘using mat = class BC::Matrix<float> {aka class BC::Matrix<float>}’ has no member named ‘t’
  e = b.t();
        ^
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:15:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h: In instantiation of ‘class BC::TensorInitializer<BC::Matrix<BC::binary_expression_dotproduct<float, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::CPU>, void>’:
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:21:7:   required from ‘class BC::TensorBase<BC::Matrix<BC::binary_expression_dotproduct<float, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::CPU> >’
../UnitTests/../BC_Internals/BC_Core/Matrix.h:17:7:   required from ‘class BC::Matrix<BC::binary_expression_dotproduct<float, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::CPU>’
../UnitTests/main.cpp:47:10:   required from here
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h:28:15: error: ‘BC::TensorInitializer<derived, expression_tensor>::black_cat_array’ has incomplete type
  functor_type black_cat_array;
               ^~~~~~~~~~~~~~~
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:12:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:29:41: note: declaration of ‘using functor_type = BC::_functor<BC::Matrix<BC::binary_expression_dotproduct<float, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::CPU> > {aka class BC::binary_expression_dotproduct<float, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>}’
 template<class,class,class,class> class binary_expression_dotproduct;
                                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
../UnitTests/main.cpp:50:8: error: ‘using mat = class BC::Matrix<float> {aka class BC::Matrix<float>}’ has no member named ‘t’
  c = a.t() * b.t();
        ^
../UnitTests/main.cpp:50:16: error: ‘using mat = class BC::Matrix<float> {aka class BC::Matrix<float>}’ has no member named ‘t’
  c = a.t() * b.t();
                ^
../UnitTests/main.cpp:53:8: error: ‘using mat = class BC::Matrix<float> {aka class BC::Matrix<float>}’ has no member named ‘t’
  c = a.t() * e;
        ^
../UnitTests/main.cpp:56:12: error: ‘using mat = class BC::Matrix<float> {aka class BC::Matrix<float>}’ has no member named ‘t’
  c = d * b.t();
            ^
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:15:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h: In instantiation of ‘class BC::TensorInitializer<BC::Matrix<BC::binary_expression_scalar_R<float, BC::mul, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >, BC::CPU>, void>’:
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:21:7:   required from ‘class BC::TensorBase<BC::Matrix<BC::binary_expression_scalar_R<float, BC::mul, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >, BC::CPU> >’
../UnitTests/../BC_Internals/BC_Core/Matrix.h:17:7:   required from ‘class BC::Matrix<BC::binary_expression_scalar_R<float, BC::mul, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >, BC::CPU>’
../UnitTests/main.cpp:59:16:   required from here
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h:28:15: error: ‘BC::TensorInitializer<derived, expression_tensor>::black_cat_array’ has incomplete type
  functor_type black_cat_array;
               ^~~~~~~~~~~~~~~
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:12:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:28:41: note: declaration of ‘using functor_type = BC::_functor<BC::Matrix<BC::binary_expression_scalar_R<float, BC::mul, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >, BC::CPU> > {aka class BC::binary_expression_scalar_R<float, BC::mul, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >}’
 template<class,class,class,class> class binary_expression_scalar_R;
                                         ^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:15:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h: In instantiation of ‘class BC::TensorInitializer<BC::Matrix<BC::binary_expression_dotproduct<float, BC::binary_expression_scalar_R<float, BC::mul, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::CPU>, void>’:
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:21:7:   required from ‘class BC::TensorBase<BC::Matrix<BC::binary_expression_dotproduct<float, BC::binary_expression_scalar_R<float, BC::mul, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::CPU> >’
../UnitTests/../BC_Internals/BC_Core/Matrix.h:17:7:   required from ‘class BC::Matrix<BC::binary_expression_dotproduct<float, BC::binary_expression_scalar_R<float, BC::mul, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::CPU>’
../UnitTests/main.cpp:59:20:   required from here
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h:28:15: error: ‘BC::TensorInitializer<derived, expression_tensor>::black_cat_array’ has incomplete type
  functor_type black_cat_array;
               ^~~~~~~~~~~~~~~
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:12:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:29:41: note: declaration of ‘using functor_type = BC::_functor<BC::Matrix<BC::binary_expression_dotproduct<float, BC::binary_expression_scalar_R<float, BC::mul, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::CPU> > {aka class BC::binary_expression_dotproduct<float, BC::binary_expression_scalar_R<float, BC::mul, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>}’
 template<class,class,class,class> class binary_expression_dotproduct;
                                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:15:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h: In instantiation of ‘class BC::TensorInitializer<BC::Matrix<BC::binary_expression_scalar_L<float, BC::mul, BC::Tensor_Core<BC::Scalar<float, BC::CPU> >, BC::Tensor_Core<BC::Matrix<float> > >, BC::CPU>, void>’:
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:21:7:   required from ‘class BC::TensorBase<BC::Matrix<BC::binary_expression_scalar_L<float, BC::mul, BC::Tensor_Core<BC::Scalar<float, BC::CPU> >, BC::Tensor_Core<BC::Matrix<float> > >, BC::CPU> >’
../UnitTests/../BC_Internals/BC_Core/Matrix.h:17:7:   required from ‘class BC::Matrix<BC::binary_expression_scalar_L<float, BC::mul, BC::Tensor_Core<BC::Scalar<float, BC::CPU> >, BC::Tensor_Core<BC::Matrix<float> > >, BC::CPU>’
../UnitTests/main.cpp:62:16:   required from here
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h:28:15: error: ‘BC::TensorInitializer<derived, expression_tensor>::black_cat_array’ has incomplete type
  functor_type black_cat_array;
               ^~~~~~~~~~~~~~~
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:12:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:27:41: note: declaration of ‘using functor_type = BC::_functor<BC::Matrix<BC::binary_expression_scalar_L<float, BC::mul, BC::Tensor_Core<BC::Scalar<float, BC::CPU> >, BC::Tensor_Core<BC::Matrix<float> > >, BC::CPU> > {aka class BC::binary_expression_scalar_L<float, BC::mul, BC::Tensor_Core<BC::Scalar<float, BC::CPU> >, BC::Tensor_Core<BC::Matrix<float> > >}’
 template<class,class,class,class> class binary_expression_scalar_L;
                                         ^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:15:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h: In instantiation of ‘class BC::TensorInitializer<BC::Matrix<BC::binary_expression_dotproduct<float, BC::binary_expression_scalar_L<float, BC::mul, BC::Tensor_Core<BC::Scalar<float, BC::CPU> >, BC::Tensor_Core<BC::Matrix<float> > >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::CPU>, void>’:
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:21:7:   required from ‘class BC::TensorBase<BC::Matrix<BC::binary_expression_dotproduct<float, BC::binary_expression_scalar_L<float, BC::mul, BC::Tensor_Core<BC::Scalar<float, BC::CPU> >, BC::Tensor_Core<BC::Matrix<float> > >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::CPU> >’
../UnitTests/../BC_Internals/BC_Core/Matrix.h:17:7:   required from ‘class BC::Matrix<BC::binary_expression_dotproduct<float, BC::binary_expression_scalar_L<float, BC::mul, BC::Tensor_Core<BC::Scalar<float, BC::CPU> >, BC::Tensor_Core<BC::Matrix<float> > >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::CPU>’
../UnitTests/main.cpp:62:20:   required from here
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h:28:15: error: ‘BC::TensorInitializer<derived, expression_tensor>::black_cat_array’ has incomplete type
  functor_type black_cat_array;
               ^~~~~~~~~~~~~~~
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:12:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:29:41: note: declaration of ‘using functor_type = BC::_functor<BC::Matrix<BC::binary_expression_dotproduct<float, BC::binary_expression_scalar_L<float, BC::mul, BC::Tensor_Core<BC::Scalar<float, BC::CPU> >, BC::Tensor_Core<BC::Matrix<float> > >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::CPU> > {aka class BC::binary_expression_dotproduct<float, BC::binary_expression_scalar_L<float, BC::mul, BC::Tensor_Core<BC::Scalar<float, BC::CPU> >, BC::Tensor_Core<BC::Matrix<float> > >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>}’
 template<class,class,class,class> class binary_expression_dotproduct;
                                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:15:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h: In instantiation of ‘class BC::TensorInitializer<BC::Matrix<BC::binary_expression_scalar_R<float, BC::mul, BC::binary_expression_dotproduct<float, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >, BC::CPU>, void>’:
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:21:7:   required from ‘class BC::TensorBase<BC::Matrix<BC::binary_expression_scalar_R<float, BC::mul, BC::binary_expression_dotproduct<float, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >, BC::CPU> >’
../UnitTests/../BC_Internals/BC_Core/Matrix.h:17:7:   required from ‘class BC::Matrix<BC::binary_expression_scalar_R<float, BC::mul, BC::binary_expression_dotproduct<float, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >, BC::CPU>’
../UnitTests/main.cpp:64:20:   required from here
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h:28:15: error: ‘BC::TensorInitializer<derived, expression_tensor>::black_cat_array’ has incomplete type
  functor_type black_cat_array;
               ^~~~~~~~~~~~~~~
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:12:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:28:41: note: declaration of ‘using functor_type = BC::_functor<BC::Matrix<BC::binary_expression_scalar_R<float, BC::mul, BC::binary_expression_dotproduct<float, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >, BC::CPU> > {aka class BC::binary_expression_scalar_R<float, BC::mul, BC::binary_expression_dotproduct<float, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >}’
 template<class,class,class,class> class binary_expression_scalar_R;
                                         ^~~~~~~~~~~~~~~~~~~~~~~~~~
../UnitTests/main.cpp:76:8: error: ‘using mat = class BC::Matrix<float> {aka class BC::Matrix<float>}’ has no member named ‘t’
  c = a.t() * b.t();
        ^
../UnitTests/main.cpp:76:16: error: ‘using mat = class BC::Matrix<float> {aka class BC::Matrix<float>}’ has no member named ‘t’
  c = a.t() * b.t();
                ^
../UnitTests/main.cpp:80:8: error: ‘using mat = class BC::Matrix<float> {aka class BC::Matrix<float>}’ has no member named ‘t’
  c = a.t() * A * (b.t() * A);
        ^
../UnitTests/main.cpp:80:21: error: ‘using mat = class BC::Matrix<float> {aka class BC::Matrix<float>}’ has no member named ‘t’
  c = a.t() * A * (b.t() * A);
                     ^
../UnitTests/main.cpp:94:14: error: invalid operands of types ‘void’ and ‘void’ to binary ‘operator+’
  d[1] = d[1] + d[1];
         ~~~~~^~~~~~
../UnitTests/main.cpp:99:8: error: invalid types ‘void[int]’ for array subscript
  d[1][1] = d[1][1] + d[1][1];
        ^
../UnitTests/main.cpp:99:18: error: invalid types ‘void[int]’ for array subscript
  d[1][1] = d[1][1] + d[1][1];
                  ^
../UnitTests/main.cpp:99:28: error: invalid types ‘void[int]’ for array subscript
  d[1][1] = d[1][1] + d[1][1];
                            ^
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:13:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Utility.h: In instantiation of ‘void BC::Tensor_Utility<deriv, typename std::enable_if<(isPrim<typename BC::determine_functor< <template-parameter-1-1> >::fscal> || BC::MTF::isCore<typename BC::determine_functor< <template-parameter-1-1> >::type>::conditional), void>::type>::read(std::ifstream&, bool, bool) [with deriv = BC::Matrix<double>; typename std::enable_if<(isPrim<typename BC::determine_functor< <template-parameter-1-1> >::fscal> || BC::MTF::isCore<typename BC::determine_functor< <template-parameter-1-1> >::type>::conditional), void>::type = void; std::ifstream = std::basic_ifstream<char>]’:
../UnitTests/main.cpp:113:15:   required from here
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Utility.h:139:22: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
    for (int i = 0; i < dims.size(); ++i) {
                    ~~^~~~~~~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Utility.h:145:92: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
    MATHLIB::HostToDevice(asDerived().data().core(), &data[data[0] + 1], asDerived().size() > data.size() ? data.size() : asDerived().size());
                                                                                             
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:13:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Utility.h:147:86: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
    MATHLIB::HostToDevice(asDerived().data().core(), &data[0],     asDerived().size() > data.size() ? data.size() : asDerived().size());
                                                                                       
In file included from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:32:0,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_MathLibraries/Mathematics_CPU.h: In instantiation of ‘static void BC::CPU::copy(T&, const J&, int) [with T = BC::Tensor_Core<BC::Matrix<float> >; J = BC::binary_expression_dotproduct<float, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>]’:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:218:21:   required from ‘derived& BC::Tensor_Operations< <template-parameter-1-1> >::operator=(const BC::Tensor_Operations<param_deriv>&) [with pDeriv = BC::Matrix<BC::binary_expression_dotproduct<float, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::CPU>; derived = BC::Matrix<float>]’
../UnitTests/../BC_Internals/BC_Core/Matrix.h:45:83:   required from ‘BC::Matrix< <template-parameter-1-1>, ML>& BC::Matrix< <template-parameter-1-1>, ML>::operator=(const BC::Matrix<U, Mathlib>&) [with U = BC::binary_expression_dotproduct<float, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>; T = float; Mathlib = BC::CPU]’
../UnitTests/main.cpp:47:10:   required from here
../UnitTests/../BC_Internals/BC_MathLibraries/Mathematics_CPU.h:70:13: error: no match for ‘operator[]’ (operand types are ‘const BC::binary_expression_dotproduct<float, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>’ and ‘int’)
     t[i] = j[i];
            ~^
../UnitTests/../BC_Internals/BC_MathLibraries/Mathematics_CPU.h:76:12: error: no match for ‘operator[]’ (operand types are ‘const BC::binary_expression_dotproduct<float, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>’ and ‘int’)
    t[i] = j[i];
           ~^
../UnitTests/../BC_Internals/BC_MathLibraries/Mathematics_CPU.h: In instantiation of ‘static void BC::CPU::copy(T&, const J&, int) [with T = BC::Tensor_Core<BC::Matrix<float> >; J = BC::binary_expression_dotproduct<float, BC::binary_expression_scalar_R<float, BC::mul, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>]’:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:218:21:   required from ‘derived& BC::Tensor_Operations< <template-parameter-1-1> >::operator=(const BC::Tensor_Operations<param_deriv>&) [with pDeriv = BC::Matrix<BC::binary_expression_dotproduct<float, BC::binary_expression_scalar_R<float, BC::mul, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::CPU>; derived = BC::Matrix<float>]’
../UnitTests/../BC_Internals/BC_Core/Matrix.h:45:83:   required from ‘BC::Matrix< <template-parameter-1-1>, ML>& BC::Matrix< <template-parameter-1-1>, ML>::operator=(const BC::Matrix<U, Mathlib>&) [with U = BC::binary_expression_dotproduct<float, BC::binary_expression_scalar_R<float, BC::mul, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>; T = float; Mathlib = BC::CPU]’
../UnitTests/main.cpp:59:20:   required from here
../UnitTests/../BC_Internals/BC_MathLibraries/Mathematics_CPU.h:70:13: error: no match for ‘operator[]’ (operand types are ‘const BC::binary_expression_dotproduct<float, BC::binary_expression_scalar_R<float, BC::mul, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>’ and ‘int’)
     t[i] = j[i];
            ~^
../UnitTests/../BC_Internals/BC_MathLibraries/Mathematics_CPU.h:76:12: error: no match for ‘operator[]’ (operand types are ‘const BC::binary_expression_dotproduct<float, BC::binary_expression_scalar_R<float, BC::mul, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>’ and ‘int’)
    t[i] = j[i];
           ~^
../UnitTests/../BC_Internals/BC_MathLibraries/Mathematics_CPU.h: In instantiation of ‘static void BC::CPU::copy(T&, const J&, int) [with T = BC::Tensor_Core<BC::Matrix<float> >; J = BC::binary_expression_dotproduct<float, BC::binary_expression_scalar_L<float, BC::mul, BC::Tensor_Core<BC::Scalar<float, BC::CPU> >, BC::Tensor_Core<BC::Matrix<float> > >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>]’:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:218:21:   required from ‘derived& BC::Tensor_Operations< <template-parameter-1-1> >::operator=(const BC::Tensor_Operations<param_deriv>&) [with pDeriv = BC::Matrix<BC::binary_expression_dotproduct<float, BC::binary_expression_scalar_L<float, BC::mul, BC::Tensor_Core<BC::Scalar<float, BC::CPU> >, BC::Tensor_Core<BC::Matrix<float> > >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::CPU>; derived = BC::Matrix<float>]’
../UnitTests/../BC_Internals/BC_Core/Matrix.h:45:83:   required from ‘BC::Matrix< <template-parameter-1-1>, ML>& BC::Matrix< <template-parameter-1-1>, ML>::operator=(const BC::Matrix<U, Mathlib>&) [with U = BC::binary_expression_dotproduct<float, BC::binary_expression_scalar_L<float, BC::mul, BC::Tensor_Core<BC::Scalar<float, BC::CPU> >, BC::Tensor_Core<BC::Matrix<float> > >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>; T = float; Mathlib = BC::CPU]’
../UnitTests/main.cpp:62:20:   required from here
../UnitTests/../BC_Internals/BC_MathLibraries/Mathematics_CPU.h:70:13: error: no match for ‘operator[]’ (operand types are ‘const BC::binary_expression_dotproduct<float, BC::binary_expression_scalar_L<float, BC::mul, BC::Tensor_Core<BC::Scalar<float, BC::CPU> >, BC::Tensor_Core<BC::Matrix<float> > >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>’ and ‘int’)
     t[i] = j[i];
            ~^
../UnitTests/../BC_Internals/BC_MathLibraries/Mathematics_CPU.h:76:12: error: no match for ‘operator[]’ (operand types are ‘const BC::binary_expression_dotproduct<float, BC::binary_expression_scalar_L<float, BC::mul, BC::Tensor_Core<BC::Scalar<float, BC::CPU> >, BC::Tensor_Core<BC::Matrix<float> > >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>’ and ‘int’)
    t[i] = j[i];
           ~^
../UnitTests/../BC_Internals/BC_MathLibraries/Mathematics_CPU.h: In instantiation of ‘static void BC::CPU::copy(T&, const J&, int) [with T = BC::Tensor_Core<BC::Matrix<float> >; J = BC::binary_expression_scalar_R<float, BC::mul, BC::binary_expression_dotproduct<float, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >]’:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:218:21:   required from ‘derived& BC::Tensor_Operations< <template-parameter-1-1> >::operator=(const BC::Tensor_Operations<param_deriv>&) [with pDeriv = BC::Matrix<BC::binary_expression_scalar_R<float, BC::mul, BC::binary_expression_dotproduct<float, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >, BC::CPU>; derived = BC::Matrix<float>]’
../UnitTests/../BC_Internals/BC_Core/Matrix.h:45:83:   required from ‘BC::Matrix< <template-parameter-1-1>, ML>& BC::Matrix< <template-parameter-1-1>, ML>::operator=(const BC::Matrix<U, Mathlib>&) [with U = BC::binary_expression_scalar_R<float, BC::mul, BC::binary_expression_dotproduct<float, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >; T = float; Mathlib = BC::CPU]’
../UnitTests/main.cpp:64:20:   required from here
../UnitTests/../BC_Internals/BC_MathLibraries/Mathematics_CPU.h:70:13: error: no match for ‘operator[]’ (operand types are ‘const BC::binary_expression_scalar_R<float, BC::mul, BC::binary_expression_dotproduct<float, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >’ and ‘int’)
     t[i] = j[i];
            ~^
../UnitTests/../BC_Internals/BC_MathLibraries/Mathematics_CPU.h:76:12: error: no match for ‘operator[]’ (operand types are ‘const BC::binary_expression_scalar_R<float, BC::mul, BC::binary_expression_dotproduct<float, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >’ and ‘int’)
    t[i] = j[i];
           ~^
In file included from ../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Core_Slice.h:17:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Core.h:13,
                 from ../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h:12,
                 from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:15,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Core_Scalar.h: In instantiation of ‘BC::Tensor_Scalar<PARENT>::Tensor_Scalar(BC::Tensor_Scalar<PARENT>::scalar*, const PARENT&) [with PARENT = BC::Tensor_Core<BC::Matrix<float> >; BC::Tensor_Scalar<PARENT>::scalar = float]’:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h:33:63:   required from ‘BC::TensorInitializer<derived, expression_tensor>::TensorInitializer(const params& ...) [with params = {float*, BC::Tensor_Core<BC::Matrix<float, BC::CPU> >}; derived = BC::Scalar<BC::Tensor_Scalar<BC::Tensor_Core<BC::Matrix<float> > >, BC::CPU>; expression_tensor = void]’
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:50:51:   required from ‘BC::TensorBase<derived>::TensorBase(const params& ...) [with params = {float*, BC::Tensor_Core<BC::Matrix<float, BC::CPU> >}; derived = BC::Scalar<BC::Tensor_Scalar<BC::Tensor_Core<BC::Matrix<float> > >, BC::CPU>]’
../UnitTests/../BC_Internals/BC_Core/Scalar.h:61:97:   required from ‘BC::Scalar< <template-parameter-1-1>, ML>::Scalar(const var1&, const var2&, const params& ...) [with var1 = float*; var2 = BC::Tensor_Core<BC::Matrix<float> >; params = {}; T = BC::Tensor_Scalar<BC::Tensor_Core<BC::Matrix<float> > >; Mathlib = BC::CPU]’
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:92:19:   required from ‘auto BC::TensorBase<derived>::getScalar(int) [with derived = BC::Matrix<float>]’
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:96:52:   required from ‘auto BC::TensorBase<derived>::operator()(int) [with derived = BC::Matrix<float>]’
../UnitTests/main.cpp:33:6:   required from here
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Core_Scalar.h:36:10: warning: ‘BC::Tensor_Scalar<BC::Tensor_Core<BC::Matrix<float> > >::array_slice’ will be initialized after [-Wreorder]
  scalar* array_slice;
          ^~~~~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Core_Scalar.h:35:16: warning:   ‘const BC::Tensor_Core<BC::Matrix<float> >& BC::Tensor_Scalar<BC::Tensor_Core<BC::Matrix<float> > >::parent’ [-Wreorder]
  const PARENT& parent;
                ^~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Core_Scalar.h:41:2: warning:   when initialized here [-Wreorder]
  Tensor_Scalar(scalar* array, const PARENT& parent_) : array_slice(array), parent(parent_) {}
  ^~~~~~~~~~~~~
In file included from ../UnitTests/../BC_Internals/BC_MathLibraries/Mathematics_CPU.h:15:0,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:32,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_MathLibraries/BC_PrintFunctions.h: In instantiation of ‘void BC::printHelper(const T&, int_ranks, int, std::__cxx11::string, int) [with T = const float*; int_ranks = int*; std::__cxx11::string = std::__cxx11::basic_string<char>]’:
../UnitTests/../BC_Internals/BC_MathLibraries/BC_PrintFunctions.h:102:13:   required from ‘void BC::print(const T&, RANKS, int, int) [with T = const float*; RANKS = int*]’
../UnitTests/../BC_Internals/BC_MathLibraries/Mathematics_CPU.h:98:12:   required from ‘static void BC::CPU::print(T, RANKS, int, int) [with T = const float*; RANKS = int*]’
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Utility.h:82:17:   required from ‘void BC::Tensor_Utility<deriv, typename std::enable_if<(isPrim<typename BC::determine_functor< <template-parameter-1-1> >::fscal> || BC::MTF::isCore<typename BC::determine_functor< <template-parameter-1-1> >::type>::conditional), void>::type>::print() const [with deriv = BC::Matrix<float>; typename std::enable_if<(isPrim<typename BC::determine_functor< <template-parameter-1-1> >::fscal> || BC::MTF::isCore<typename BC::determine_functor< <template-parameter-1-1> >::type>::conditional), void>::type = void]’
../UnitTests/main.cpp:37:10:   required from here
../UnitTests/../BC_Internals/BC_MathLibraries/BC_PrintFunctions.h:43:38: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
     str = str.substr(0, str.length() < printSpace ? str.length() : printSpace);
                                       
../UnitTests/../BC_Internals/BC_MathLibraries/BC_PrintFunctions.h:46:22: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
     if (str.length() < printSpace)
                       
../UnitTests/../BC_Internals/BC_MathLibraries/BC_PrintFunctions.h:67:37: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
    str = str.substr(0, str.length() < printSpace ? str.length() : printSpace);
                                      
../UnitTests/../BC_Internals/BC_MathLibraries/BC_PrintFunctions.h:70:21: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
    if (str.length() < printSpace)
                      
../UnitTests/../BC_Internals/BC_MathLibraries/BC_PrintFunctions.h: In instantiation of ‘void BC::printHelper(const T&, int_ranks, int, std::__cxx11::string, int) [with T = const double*; int_ranks = int*; std::__cxx11::string = std::__cxx11::basic_string<char>]’:
../UnitTests/../BC_Internals/BC_MathLibraries/BC_PrintFunctions.h:102:13:   required from ‘void BC::print(const T&, RANKS, int, int) [with T = const double*; RANKS = int*]’
../UnitTests/../BC_Internals/BC_MathLibraries/Mathematics_CPU.h:98:12:   required from ‘static void BC::CPU::print(T, RANKS, int, int) [with T = const double*; RANKS = int*]’
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Utility.h:82:17:   required from ‘void BC::Tensor_Utility<deriv, typename std::enable_if<(isPrim<typename BC::determine_functor< <template-parameter-1-1> >::fscal> || BC::MTF::isCore<typename BC::determine_functor< <template-parameter-1-1> >::type>::conditional), void>::type>::print() const [with deriv = BC::Matrix<double>; typename std::enable_if<(isPrim<typename BC::determine_functor< <template-parameter-1-1> >::fscal> || BC::MTF::isCore<typename BC::determine_functor< <template-parameter-1-1> >::type>::conditional), void>::type = void]’
../UnitTests/main.cpp:114:14:   required from here
../UnitTests/../BC_Internals/BC_MathLibraries/BC_PrintFunctions.h:43:38: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
     str = str.substr(0, str.length() < printSpace ? str.length() : printSpace);
                                       
../UnitTests/../BC_Internals/BC_MathLibraries/BC_PrintFunctions.h:46:22: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
     if (str.length() < printSpace)
                       
../UnitTests/../BC_Internals/BC_MathLibraries/BC_PrintFunctions.h:67:37: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
    str = str.substr(0, str.length() < printSpace ? str.length() : printSpace);
                                      
../UnitTests/../BC_Internals/BC_MathLibraries/BC_PrintFunctions.h:70:21: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
    if (str.length() < printSpace)
                      
make: *** [UnitTests/main.o] Error 1
UnitTests/subdir.mk:18: recipe for target 'UnitTests/main.o' failed
17:13:58 **** Incremental Build of configuration Debug for project BlackCat_LibraryCPU ****
make all 
Building file: ../UnitTests/main.cpp
Invoking: GCC C++ Compiler
g++ -O0 -g3 -Wall -c -fmessage-length=0 -MMD -MP -MF"UnitTests/main.d" -MT"UnitTests/main.o" -o "UnitTests/main.o" "../UnitTests/main.cpp"
In file included from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:32:0,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_MathLibraries/Mathematics_CPU.h:74:0: warning: ignoring #pragma omp parallel [-Wunknown-pragmas]
 #pragma omp parallel for
 
../UnitTests/../BC_Internals/BC_MathLibraries/Mathematics_CPU.h:78:0: warning: ignoring #pragma omp barrier [-Wunknown-pragmas]
 #pragma omp barrier
 
../UnitTests/../BC_Internals/BC_MathLibraries/Mathematics_CPU.h:88:0: warning: ignoring #pragma omp parallel [-Wunknown-pragmas]
 #pragma omp parallel for
 
../UnitTests/../BC_Internals/BC_MathLibraries/Mathematics_CPU.h:92:0: warning: ignoring #pragma omp barrier [-Wunknown-pragmas]
 #pragma omp barrier
 
In file included from ../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Core_Slice.h:17:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Core.h:13,
                 from ../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h:12,
                 from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:15,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Core_Scalar.h:22:0: warning: "__BCinline__" redefined
 #define __BCinline__
 
In file included from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:29:0,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Expressions/BlackCat_Internal_Definitions.h:25:0: note: this is the location of the previous definition
 #define __BCinline__ __BC_gcpu__ __attribute__((always_inline))
 
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:13:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Utility.h: In member function ‘auto BC::Tensor_Utility<deriv, <template-parameter-1-2> >::eval() const’:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Utility.h:41:45: error: expected ‘(’ before ‘<’ token
   return typename MTF::shell_of<deriv>::type<_scalar<deriv>, _mathlib<deriv>>(this->asDerived());
                                             ^
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Utility.h:41:60: error: expected primary-expression before ‘,’ token
   return typename MTF::shell_of<deriv>::type<_scalar<deriv>, _mathlib<deriv>>(this->asDerived());
                                                            ^
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Utility.h:41:76: error: expected primary-expression before ‘>’ token
   return typename MTF::shell_of<deriv>::type<_scalar<deriv>, _mathlib<deriv>>(this->asDerived());
                                                                            ^~
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:15:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h: At global scope:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h:74:54: error: expected ‘;’ before ‘<’ token
  using derived_alt = typename shell_of<derived>::type<T, Mathlib>;
                                                      ^
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h:77:26: error: ‘derived_alt’ does not name a type
  TensorInitializer(const derived_alt<U>&  tensor) : black_cat_array(tensor.innerShape()) {
                          ^~~~~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h:77:37: error: expected ‘,’ or ‘...’ before ‘<’ token
  TensorInitializer(const derived_alt<U>&  tensor) : black_cat_array(tensor.innerShape()) {
                                     ^
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h: In constructor ‘BC::TensorInitializer<_tensor<t, ml>, typename std::enable_if<BC::MTF::isCorePure<t>::conditional, void>::type>::TensorInitializer(int)’:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h:77:69: error: ‘tensor’ was not declared in this scope
  TensorInitializer(const derived_alt<U>&  tensor) : black_cat_array(tensor.innerShape()) {
                                                                     ^~~~~~
In file included from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10:0,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/TensorBase.h: At global scope:
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:38:71: error: expected ‘;’ before ‘<’ token
  template<class    U> using deriv   = typename shell_of<derived>::type<U, Mathlib>;
                                                                       ^
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:39:76: error: expected ‘;’ before ‘<’ token
  template<class... U> using functor = typename shell_of<functor_type>::type<U...>;
                                                                            ^
../UnitTests/../BC_Internals/BC_Core/TensorBase.h: In member function ‘auto BC::TensorBase<derived>::operator[](int)’:
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:83:68: error: expected ‘(’ before ‘<’ token
     auto operator [] (int i)    { return typename base<RANK>::slice<decltype(slice(0)), Mathlib>(slice(i)); }
                                                                    ^
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:83:69: error: expected primary-expression before ‘decltype’
     auto operator [] (int i)    { return typename base<RANK>::slice<decltype(slice(0)), Mathlib>(slice(i)); }
                                                                     ^~~~~~~~
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:83:69: error: expected ‘;’ before ‘decltype’
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:83:87: error: expected unqualified-id before ‘,’ token
     auto operator [] (int i)    { return typename base<RANK>::slice<decltype(slice(0)), Mathlib>(slice(i)); }
                                                                                       ^
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:83:96: error: expected initializer before ‘>’ token
     auto operator [] (int i)    { return typename base<RANK>::slice<decltype(slice(0)), Mathlib>(slice(i)); }
                                                                                                ^
../UnitTests/../BC_Internals/BC_Core/TensorBase.h: In member function ‘const auto BC::TensorBase<derived>::operator[](int) const’:
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:84:74: error: expected ‘(’ before ‘<’ token
  const auto operator [] (int i) const { return typename base<RANK>::slice<decltype(slice(0)), Mathlib>(slice(i)); }
                                                                          ^
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:84:75: error: expected primary-expression before ‘decltype’
  const auto operator [] (int i) const { return typename base<RANK>::slice<decltype(slice(0)), Mathlib>(slice(i)); }
                                                                           ^~~~~~~~
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:84:75: error: expected ‘;’ before ‘decltype’
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:84:93: error: expected unqualified-id before ‘,’ token
  const auto operator [] (int i) const { return typename base<RANK>::slice<decltype(slice(0)), Mathlib>(slice(i)); }
                                                                                             ^
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:84:102: error: expected initializer before ‘>’ token
  const auto operator [] (int i) const { return typename base<RANK>::slice<decltype(slice(0)), Mathlib>(slice(i)); }
                                                                                                      ^
In file included from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:50:0,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Vector.h: At global scope:
../UnitTests/../BC_Internals/BC_Core/Vector.h:45:15: error: ‘unary_expression_transpose’ was not declared in this scope
  const Vector<unary_expression_transpose<typename MTF::determine_scalar<T>::type, typename parent_class::functor_type>, Mathlib> t() const {
               ^~~~~~~~~~~~~~~~~~~~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Vector.h:45:118: error: template argument 1 is invalid
  const Vector<unary_expression_transpose<typename MTF::determine_scalar<T>::type, typename parent_class::functor_type>, Mathlib> t() const {
                                                                                                                      ^
../UnitTests/../BC_Internals/BC_Core/Vector.h:45:119: error: expected unqualified-id before ‘,’ token
  const Vector<unary_expression_transpose<typename MTF::determine_scalar<T>::type, typename parent_class::functor_type>, Mathlib> t() const {
                                                                                                                       ^
In file included from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:51:0,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Matrix.h:47:15: error: ‘unary_expression_transpose’ was not declared in this scope
  const Matrix<unary_expression_transpose<typename MTF::determine_scalar<T>::type, typename parent_class::functor_type>, Mathlib> t() const {
               ^~~~~~~~~~~~~~~~~~~~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Matrix.h:47:118: error: template argument 1 is invalid
  const Matrix<unary_expression_transpose<typename MTF::determine_scalar<T>::type, typename parent_class::functor_type>, Mathlib> t() const {
                                                                                                                      ^
../UnitTests/../BC_Internals/BC_Core/Matrix.h:47:119: error: expected unqualified-id before ‘,’ token
  const Matrix<unary_expression_transpose<typename MTF::determine_scalar<T>::type, typename parent_class::functor_type>, Mathlib> t() const {
                                                                                                                       ^
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:13:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Utility.h: In instantiation of ‘struct BC::Tensor_Utility<BC::Vector<BC::binary_expression<float, BC::mul, BC::Tensor_Core<BC::Vector<float> >, BC::Tensor_Core<BC::Vector<float> > >, BC::CPU>, void>’:
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:21:7:   required from ‘class BC::TensorBase<BC::Vector<BC::binary_expression<float, BC::mul, BC::Tensor_Core<BC::Vector<float> >, BC::Tensor_Core<BC::Vector<float> > >, BC::CPU> >’
../UnitTests/../BC_Internals/BC_Core/Vector.h:17:7:   required from ‘class BC::Vector<BC::binary_expression<float, BC::mul, BC::Tensor_Core<BC::Vector<float> >, BC::Tensor_Core<BC::Vector<float> > >, BC::CPU>’
../UnitTests/SpeedTests.h:43:19:   required from here
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Utility.h:35:47: error: ‘typename BC::MTF::shell_of<BC::Vector<BC::binary_expression<float, BC::mul, BC::Tensor_Core<BC::Vector<float> >, BC::Tensor_Core<BC::Vector<float> > >, BC::CPU> >::type’ names ‘template<class ... ntraits> using type = class BC::Vector<ntraits ...>’, which is not a type
  using t1= typename MTF::shell_of<deriv>::type;
                                               ^
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Utility.h: In substitution of ‘template<class deriv, class> template<class d, class ml> using t1 = typename BC::MTF::shell_of::type [with d = BC::MTF::determine_scalar<BC::Vector<BC::binary_expression<float, BC::mul, BC::Tensor_Core<BC::Vector<float> >, BC::Tensor_Core<BC::Vector<float> > >, BC::CPU> >::type; ml = BC::MTF::determine_mathlib<BC::Vector<BC::binary_expression<float, BC::mul, BC::Tensor_Core<BC::Vector<float> >, BC::Tensor_Core<BC::Vector<float> > >, BC::CPU> >::type; deriv = BC::Vector<BC::binary_expression<float, BC::mul, BC::Tensor_Core<BC::Vector<float> >, BC::Tensor_Core<BC::Vector<float> > >, BC::CPU>; <template-parameter-1-2> = void]’:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Utility.h:37:55:   required from ‘struct BC::Tensor_Utility<BC::Vector<BC::binary_expression<float, BC::mul, BC::Tensor_Core<BC::Vector<float> >, BC::Tensor_Core<BC::Vector<float> > >, BC::CPU>, void>’
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:21:7:   required from ‘class BC::TensorBase<BC::Vector<BC::binary_expression<float, BC::mul, BC::Tensor_Core<BC::Vector<float> >, BC::Tensor_Core<BC::Vector<float> > >, BC::CPU> >’
../UnitTests/../BC_Internals/BC_Core/Vector.h:17:7:   required from ‘class BC::Vector<BC::binary_expression<float, BC::mul, BC::Tensor_Core<BC::Vector<float> >, BC::Tensor_Core<BC::Vector<float> > >, BC::CPU>’
../UnitTests/SpeedTests.h:43:19:   required from here
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Utility.h:35:47: error: ‘typename BC::MTF::shell_of<BC::Vector<BC::binary_expression<float, BC::mul, BC::Tensor_Core<BC::Vector<float> >, BC::Tensor_Core<BC::Vector<float> > >, BC::CPU> >::type’ names ‘template<class ... ntraits> using type = class BC::Vector<ntraits ...>’, which is not a type
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:15:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h: In instantiation of ‘class BC::TensorInitializer<BC::Vector<BC::binary_expression<float, BC::mul, BC::Tensor_Core<BC::Vector<float> >, BC::Tensor_Core<BC::Vector<float> > >, BC::CPU>, void>’:
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:21:7:   required from ‘class BC::TensorBase<BC::Vector<BC::binary_expression<float, BC::mul, BC::Tensor_Core<BC::Vector<float> >, BC::Tensor_Core<BC::Vector<float> > >, BC::CPU> >’
../UnitTests/../BC_Internals/BC_Core/Vector.h:17:7:   required from ‘class BC::Vector<BC::binary_expression<float, BC::mul, BC::Tensor_Core<BC::Vector<float> >, BC::Tensor_Core<BC::Vector<float> > >, BC::CPU>’
../UnitTests/SpeedTests.h:43:19:   required from here
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h:28:15: error: ‘BC::TensorInitializer<derived, expression_tensor>::black_cat_array’ has incomplete type
  functor_type black_cat_array;
               ^~~~~~~~~~~~~~~
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:12:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:26:41: note: declaration of ‘using functor_type = BC::_functor<BC::Vector<BC::binary_expression<float, BC::mul, BC::Tensor_Core<BC::Vector<float> >, BC::Tensor_Core<BC::Vector<float> > >, BC::CPU> > {aka class BC::binary_expression<float, BC::mul, BC::Tensor_Core<BC::Vector<float> >, BC::Tensor_Core<BC::Vector<float> > >}’
 template<class,class,class,class> class binary_expression;
                                         ^~~~~~~~~~~~~~~~~
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:13:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Utility.h: In instantiation of ‘struct BC::Tensor_Utility<BC::Vector<BC::binary_expression<float, BC::assign, BC::Tensor_Core<BC::Vector<float> >, BC::binary_expression<float, BC::mul, BC::Tensor_Core<BC::Vector<float> >, BC::Tensor_Core<BC::Vector<float> > > >, BC::CPU>, void>’:
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:21:7:   required from ‘class BC::TensorBase<BC::Vector<BC::binary_expression<float, BC::assign, BC::Tensor_Core<BC::Vector<float> >, BC::binary_expression<float, BC::mul, BC::Tensor_Core<BC::Vector<float> >, BC::Tensor_Core<BC::Vector<float> > > >, BC::CPU> >’
../UnitTests/../BC_Internals/BC_Core/Vector.h:17:7:   required from ‘class BC::Vector<BC::binary_expression<float, BC::assign, BC::Tensor_Core<BC::Vector<float> >, BC::binary_expression<float, BC::mul, BC::Tensor_Core<BC::Vector<float> >, BC::Tensor_Core<BC::Vector<float> > > >, BC::CPU>’
../UnitTests/SpeedTests.h:43:24:   required from here
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Utility.h:35:47: error: ‘typename BC::MTF::shell_of<BC::Vector<BC::binary_expression<float, BC::assign, BC::Tensor_Core<BC::Vector<float> >, BC::binary_expression<float, BC::mul, BC::Tensor_Core<BC::Vector<float> >, BC::Tensor_Core<BC::Vector<float> > > >, BC::CPU> >::type’ names ‘template<class ... ntraits> using type = class BC::Vector<ntraits ...>’, which is not a type
  using t1= typename MTF::shell_of<deriv>::type;
                                               ^
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Utility.h: In substitution of ‘template<class deriv, class> template<class d, class ml> using t1 = typename BC::MTF::shell_of::type [with d = BC::MTF::determine_scalar<BC::Vector<BC::binary_expression<float, BC::assign, BC::Tensor_Core<BC::Vector<float> >, BC::binary_expression<float, BC::mul, BC::Tensor_Core<BC::Vector<float> >, BC::Tensor_Core<BC::Vector<float> > > >, BC::CPU> >::type; ml = BC::MTF::determine_mathlib<BC::Vector<BC::binary_expression<float, BC::assign, BC::Tensor_Core<BC::Vector<float> >, BC::binary_expression<float, BC::mul, BC::Tensor_Core<BC::Vector<float> >, BC::Tensor_Core<BC::Vector<float> > > >, BC::CPU> >::type; deriv = BC::Vector<BC::binary_expression<float, BC::assign, BC::Tensor_Core<BC::Vector<float> >, BC::binary_expression<float, BC::mul, BC::Tensor_Core<BC::Vector<float> >, BC::Tensor_Core<BC::Vector<float> > > >, BC::CPU>; <template-parameter-1-2> = void]’:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Utility.h:37:55:   required from ‘struct BC::Tensor_Utility<BC::Vector<BC::binary_expression<float, BC::assign, BC::Tensor_Core<BC::Vector<float> >, BC::binary_expression<float, BC::mul, BC::Tensor_Core<BC::Vector<float> >, BC::Tensor_Core<BC::Vector<float> > > >, BC::CPU>, void>’
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:21:7:   required from ‘class BC::TensorBase<BC::Vector<BC::binary_expression<float, BC::assign, BC::Tensor_Core<BC::Vector<float> >, BC::binary_expression<float, BC::mul, BC::Tensor_Core<BC::Vector<float> >, BC::Tensor_Core<BC::Vector<float> > > >, BC::CPU> >’
../UnitTests/../BC_Internals/BC_Core/Vector.h:17:7:   required from ‘class BC::Vector<BC::binary_expression<float, BC::assign, BC::Tensor_Core<BC::Vector<float> >, BC::binary_expression<float, BC::mul, BC::Tensor_Core<BC::Vector<float> >, BC::Tensor_Core<BC::Vector<float> > > >, BC::CPU>’
../UnitTests/SpeedTests.h:43:24:   required from here
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Utility.h:35:47: error: ‘typename BC::MTF::shell_of<BC::Vector<BC::binary_expression<float, BC::assign, BC::Tensor_Core<BC::Vector<float> >, BC::binary_expression<float, BC::mul, BC::Tensor_Core<BC::Vector<float> >, BC::Tensor_Core<BC::Vector<float> > > >, BC::CPU> >::type’ names ‘template<class ... ntraits> using type = class BC::Vector<ntraits ...>’, which is not a type
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:15:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h: In instantiation of ‘class BC::TensorInitializer<BC::Vector<BC::binary_expression<float, BC::assign, BC::Tensor_Core<BC::Vector<float> >, BC::binary_expression<float, BC::mul, BC::Tensor_Core<BC::Vector<float> >, BC::Tensor_Core<BC::Vector<float> > > >, BC::CPU>, void>’:
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:21:7:   required from ‘class BC::TensorBase<BC::Vector<BC::binary_expression<float, BC::assign, BC::Tensor_Core<BC::Vector<float> >, BC::binary_expression<float, BC::mul, BC::Tensor_Core<BC::Vector<float> >, BC::Tensor_Core<BC::Vector<float> > > >, BC::CPU> >’
../UnitTests/../BC_Internals/BC_Core/Vector.h:17:7:   required from ‘class BC::Vector<BC::binary_expression<float, BC::assign, BC::Tensor_Core<BC::Vector<float> >, BC::binary_expression<float, BC::mul, BC::Tensor_Core<BC::Vector<float> >, BC::Tensor_Core<BC::Vector<float> > > >, BC::CPU>’
../UnitTests/SpeedTests.h:43:24:   required from here
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h:28:15: error: ‘BC::TensorInitializer<derived, expression_tensor>::black_cat_array’ has incomplete type
  functor_type black_cat_array;
               ^~~~~~~~~~~~~~~
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:12:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:26:41: note: declaration of ‘using functor_type = BC::_functor<BC::Vector<BC::binary_expression<float, BC::assign, BC::Tensor_Core<BC::Vector<float> >, BC::binary_expression<float, BC::mul, BC::Tensor_Core<BC::Vector<float> >, BC::Tensor_Core<BC::Vector<float> > > >, BC::CPU> > {aka class BC::binary_expression<float, BC::assign, BC::Tensor_Core<BC::Vector<float> >, BC::binary_expression<float, BC::mul, BC::Tensor_Core<BC::Vector<float> >, BC::Tensor_Core<BC::Vector<float> > > >}’
 template<class,class,class,class> class binary_expression;
                                         ^~~~~~~~~~~~~~~~~
In file included from ../UnitTests/main.cpp:4:0:
../UnitTests/SpeedTests.h: In function ‘int speedTestsScalarIteration()’:
../UnitTests/SpeedTests.h:136:9: error: ‘using mat = class BC::Matrix<float> {aka class BC::Matrix<float>}’ has no member named ‘t’
   c = a.t() * b;
         ^
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:13:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Utility.h: In instantiation of ‘struct BC::Tensor_Utility<BC::Matrix<BC::binary_expression<float, BC::add, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> > >, BC::CPU>, void>’:
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:21:7:   required from ‘class BC::TensorBase<BC::Matrix<BC::binary_expression<float, BC::add, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> > >, BC::CPU> >’
../UnitTests/../BC_Internals/BC_Core/Matrix.h:17:7:   required from ‘class BC::Matrix<BC::binary_expression<float, BC::add, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> > >, BC::CPU>’
../UnitTests/SpeedTests.h:146:23:   required from here
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Utility.h:35:47: error: ‘typename BC::MTF::shell_of<BC::Matrix<BC::binary_expression<float, BC::add, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> > >, BC::CPU> >::type’ names ‘template<class ... ntraits> using type = class BC::Matrix<ntraits ...>’, which is not a type
  using t1= typename MTF::shell_of<deriv>::type;
                                               ^
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Utility.h: In substitution of ‘template<class deriv, class> template<class d, class ml> using t1 = typename BC::MTF::shell_of::type [with d = BC::MTF::determine_scalar<BC::Matrix<BC::binary_expression<float, BC::add, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> > >, BC::CPU> >::type; ml = BC::MTF::determine_mathlib<BC::Matrix<BC::binary_expression<float, BC::add, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> > >, BC::CPU> >::type; deriv = BC::Matrix<BC::binary_expression<float, BC::add, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> > >, BC::CPU>; <template-parameter-1-2> = void]’:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Utility.h:37:55:   required from ‘struct BC::Tensor_Utility<BC::Matrix<BC::binary_expression<float, BC::add, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> > >, BC::CPU>, void>’
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:21:7:   required from ‘class BC::TensorBase<BC::Matrix<BC::binary_expression<float, BC::add, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> > >, BC::CPU> >’
../UnitTests/../BC_Internals/BC_Core/Matrix.h:17:7:   required from ‘class BC::Matrix<BC::binary_expression<float, BC::add, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> > >, BC::CPU>’
../UnitTests/SpeedTests.h:146:23:   required from here
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Utility.h:35:47: error: ‘typename BC::MTF::shell_of<BC::Matrix<BC::binary_expression<float, BC::add, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> > >, BC::CPU> >::type’ names ‘template<class ... ntraits> using type = class BC::Matrix<ntraits ...>’, which is not a type
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:15:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h: In instantiation of ‘class BC::TensorInitializer<BC::Matrix<BC::binary_expression<float, BC::add, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> > >, BC::CPU>, void>’:
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:21:7:   required from ‘class BC::TensorBase<BC::Matrix<BC::binary_expression<float, BC::add, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> > >, BC::CPU> >’
../UnitTests/../BC_Internals/BC_Core/Matrix.h:17:7:   required from ‘class BC::Matrix<BC::binary_expression<float, BC::add, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> > >, BC::CPU>’
../UnitTests/SpeedTests.h:146:23:   required from here
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h:28:15: error: ‘BC::TensorInitializer<derived, expression_tensor>::black_cat_array’ has incomplete type
  functor_type black_cat_array;
               ^~~~~~~~~~~~~~~
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:12:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:26:41: note: declaration of ‘using functor_type = BC::_functor<BC::Matrix<BC::binary_expression<float, BC::add, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> > >, BC::CPU> > {aka class BC::binary_expression<float, BC::add, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> > >}’
 template<class,class,class,class> class binary_expression;
                                         ^~~~~~~~~~~~~~~~~
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:13:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Utility.h: In instantiation of ‘struct BC::Tensor_Utility<BC::Scalar<BC::Tensor_Scalar<BC::Tensor_Core<BC::Matrix<float> > >, BC::CPU>, void>’:
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:21:7:   required from ‘class BC::TensorBase<BC::Scalar<BC::Tensor_Scalar<BC::Tensor_Core<BC::Matrix<float> > >, BC::CPU> >’
../UnitTests/../BC_Internals/BC_Core/Scalar.h:18:7:   required from ‘class BC::Scalar<BC::Tensor_Scalar<BC::Tensor_Core<BC::Matrix<float> > >, BC::CPU>’
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:92:19:   required from ‘auto BC::TensorBase<derived>::getScalar(int) [with derived = BC::Matrix<float>]’
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:96:52:   required from ‘auto BC::TensorBase<derived>::operator()(int) [with derived = BC::Matrix<float>]’
../UnitTests/main.cpp:33:6:   required from here
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Utility.h:35:47: error: ‘typename BC::MTF::shell_of<BC::Scalar<BC::Tensor_Scalar<BC::Tensor_Core<BC::Matrix<float> > >, BC::CPU> >::type’ names ‘template<class ... ntraits> using type = class BC::Scalar<ntraits ...>’, which is not a type
  using t1= typename MTF::shell_of<deriv>::type;
                                               ^
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Utility.h: In substitution of ‘template<class deriv, class> template<class d, class ml> using t1 = typename BC::MTF::shell_of::type [with d = BC::MTF::determine_scalar<BC::Scalar<BC::Tensor_Scalar<BC::Tensor_Core<BC::Matrix<float> > >, BC::CPU> >::type; ml = BC::MTF::determine_mathlib<BC::Scalar<BC::Tensor_Scalar<BC::Tensor_Core<BC::Matrix<float> > >, BC::CPU> >::type; deriv = BC::Scalar<BC::Tensor_Scalar<BC::Tensor_Core<BC::Matrix<float> > >, BC::CPU>; <template-parameter-1-2> = void]’:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Utility.h:37:55:   required from ‘struct BC::Tensor_Utility<BC::Scalar<BC::Tensor_Scalar<BC::Tensor_Core<BC::Matrix<float> > >, BC::CPU>, void>’
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:21:7:   required from ‘class BC::TensorBase<BC::Scalar<BC::Tensor_Scalar<BC::Tensor_Core<BC::Matrix<float> > >, BC::CPU> >’
../UnitTests/../BC_Internals/BC_Core/Scalar.h:18:7:   required from ‘class BC::Scalar<BC::Tensor_Scalar<BC::Tensor_Core<BC::Matrix<float> > >, BC::CPU>’
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:92:19:   required from ‘auto BC::TensorBase<derived>::getScalar(int) [with derived = BC::Matrix<float>]’
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:96:52:   required from ‘auto BC::TensorBase<derived>::operator()(int) [with derived = BC::Matrix<float>]’
../UnitTests/main.cpp:33:6:   required from here
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Utility.h:35:47: error: ‘typename BC::MTF::shell_of<BC::Scalar<BC::Tensor_Scalar<BC::Tensor_Core<BC::Matrix<float> > >, BC::CPU> >::type’ names ‘template<class ... ntraits> using type = class BC::Scalar<ntraits ...>’, which is not a type
../UnitTests/main.cpp: In function ‘auto test()’:
../UnitTests/main.cpp:40:8: error: ‘using mat = class BC::Matrix<float> {aka class BC::Matrix<float>}’ has no member named ‘t’
  d = a.t();
        ^
../UnitTests/main.cpp:41:8: error: ‘using mat = class BC::Matrix<float> {aka class BC::Matrix<float>}’ has no member named ‘t’
  e = b.t();
        ^
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:13:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Utility.h: In instantiation of ‘struct BC::Tensor_Utility<BC::Matrix<BC::binary_expression_dotproduct<float, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::CPU>, void>’:
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:21:7:   required from ‘class BC::TensorBase<BC::Matrix<BC::binary_expression_dotproduct<float, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::CPU> >’
../UnitTests/../BC_Internals/BC_Core/Matrix.h:17:7:   required from ‘class BC::Matrix<BC::binary_expression_dotproduct<float, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::CPU>’
../UnitTests/main.cpp:47:10:   required from here
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Utility.h:35:47: error: ‘typename BC::MTF::shell_of<BC::Matrix<BC::binary_expression_dotproduct<float, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::CPU> >::type’ names ‘template<class ... ntraits> using type = class BC::Matrix<ntraits ...>’, which is not a type
  using t1= typename MTF::shell_of<deriv>::type;
                                               ^
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Utility.h: In substitution of ‘template<class deriv, class> template<class d, class ml> using t1 = typename BC::MTF::shell_of::type [with d = BC::MTF::determine_scalar<BC::Matrix<BC::binary_expression_dotproduct<float, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::CPU> >::type; ml = BC::MTF::determine_mathlib<BC::Matrix<BC::binary_expression_dotproduct<float, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::CPU> >::type; deriv = BC::Matrix<BC::binary_expression_dotproduct<float, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::CPU>; <template-parameter-1-2> = void]’:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Utility.h:37:55:   required from ‘struct BC::Tensor_Utility<BC::Matrix<BC::binary_expression_dotproduct<float, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::CPU>, void>’
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:21:7:   required from ‘class BC::TensorBase<BC::Matrix<BC::binary_expression_dotproduct<float, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::CPU> >’
../UnitTests/../BC_Internals/BC_Core/Matrix.h:17:7:   required from ‘class BC::Matrix<BC::binary_expression_dotproduct<float, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::CPU>’
../UnitTests/main.cpp:47:10:   required from here
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Utility.h:35:47: error: ‘typename BC::MTF::shell_of<BC::Matrix<BC::binary_expression_dotproduct<float, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::CPU> >::type’ names ‘template<class ... ntraits> using type = class BC::Matrix<ntraits ...>’, which is not a type
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:15:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h: In instantiation of ‘class BC::TensorInitializer<BC::Matrix<BC::binary_expression_dotproduct<float, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::CPU>, void>’:
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:21:7:   required from ‘class BC::TensorBase<BC::Matrix<BC::binary_expression_dotproduct<float, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::CPU> >’
../UnitTests/../BC_Internals/BC_Core/Matrix.h:17:7:   required from ‘class BC::Matrix<BC::binary_expression_dotproduct<float, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::CPU>’
../UnitTests/main.cpp:47:10:   required from here
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h:28:15: error: ‘BC::TensorInitializer<derived, expression_tensor>::black_cat_array’ has incomplete type
  functor_type black_cat_array;
               ^~~~~~~~~~~~~~~
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:12:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:29:41: note: declaration of ‘using functor_type = BC::_functor<BC::Matrix<BC::binary_expression_dotproduct<float, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::CPU> > {aka class BC::binary_expression_dotproduct<float, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>}’
 template<class,class,class,class> class binary_expression_dotproduct;
                                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
../UnitTests/main.cpp:50:8: error: ‘using mat = class BC::Matrix<float> {aka class BC::Matrix<float>}’ has no member named ‘t’
  c = a.t() * b.t();
        ^
../UnitTests/main.cpp:50:16: error: ‘using mat = class BC::Matrix<float> {aka class BC::Matrix<float>}’ has no member named ‘t’
  c = a.t() * b.t();
                ^
../UnitTests/main.cpp:53:8: error: ‘using mat = class BC::Matrix<float> {aka class BC::Matrix<float>}’ has no member named ‘t’
  c = a.t() * e;
        ^
../UnitTests/main.cpp:56:12: error: ‘using mat = class BC::Matrix<float> {aka class BC::Matrix<float>}’ has no member named ‘t’
  c = d * b.t();
            ^
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:13:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Utility.h: In instantiation of ‘struct BC::Tensor_Utility<BC::Matrix<BC::binary_expression_scalar_R<float, BC::mul, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >, BC::CPU>, void>’:
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:21:7:   required from ‘class BC::TensorBase<BC::Matrix<BC::binary_expression_scalar_R<float, BC::mul, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >, BC::CPU> >’
../UnitTests/../BC_Internals/BC_Core/Matrix.h:17:7:   required from ‘class BC::Matrix<BC::binary_expression_scalar_R<float, BC::mul, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >, BC::CPU>’
../UnitTests/main.cpp:59:16:   required from here
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Utility.h:35:47: error: ‘typename BC::MTF::shell_of<BC::Matrix<BC::binary_expression_scalar_R<float, BC::mul, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >, BC::CPU> >::type’ names ‘template<class ... ntraits> using type = class BC::Matrix<ntraits ...>’, which is not a type
  using t1= typename MTF::shell_of<deriv>::type;
                                               ^
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Utility.h: In substitution of ‘template<class deriv, class> template<class d, class ml> using t1 = typename BC::MTF::shell_of::type [with d = BC::MTF::determine_scalar<BC::Matrix<BC::binary_expression_scalar_R<float, BC::mul, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >, BC::CPU> >::type; ml = BC::MTF::determine_mathlib<BC::Matrix<BC::binary_expression_scalar_R<float, BC::mul, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >, BC::CPU> >::type; deriv = BC::Matrix<BC::binary_expression_scalar_R<float, BC::mul, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >, BC::CPU>; <template-parameter-1-2> = void]’:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Utility.h:37:55:   required from ‘struct BC::Tensor_Utility<BC::Matrix<BC::binary_expression_scalar_R<float, BC::mul, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >, BC::CPU>, void>’
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:21:7:   required from ‘class BC::TensorBase<BC::Matrix<BC::binary_expression_scalar_R<float, BC::mul, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >, BC::CPU> >’
../UnitTests/../BC_Internals/BC_Core/Matrix.h:17:7:   required from ‘class BC::Matrix<BC::binary_expression_scalar_R<float, BC::mul, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >, BC::CPU>’
../UnitTests/main.cpp:59:16:   required from here
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Utility.h:35:47: error: ‘typename BC::MTF::shell_of<BC::Matrix<BC::binary_expression_scalar_R<float, BC::mul, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >, BC::CPU> >::type’ names ‘template<class ... ntraits> using type = class BC::Matrix<ntraits ...>’, which is not a type
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:15:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h: In instantiation of ‘class BC::TensorInitializer<BC::Matrix<BC::binary_expression_scalar_R<float, BC::mul, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >, BC::CPU>, void>’:
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:21:7:   required from ‘class BC::TensorBase<BC::Matrix<BC::binary_expression_scalar_R<float, BC::mul, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >, BC::CPU> >’
../UnitTests/../BC_Internals/BC_Core/Matrix.h:17:7:   required from ‘class BC::Matrix<BC::binary_expression_scalar_R<float, BC::mul, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >, BC::CPU>’
../UnitTests/main.cpp:59:16:   required from here
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h:28:15: error: ‘BC::TensorInitializer<derived, expression_tensor>::black_cat_array’ has incomplete type
  functor_type black_cat_array;
               ^~~~~~~~~~~~~~~
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:12:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:28:41: note: declaration of ‘using functor_type = BC::_functor<BC::Matrix<BC::binary_expression_scalar_R<float, BC::mul, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >, BC::CPU> > {aka class BC::binary_expression_scalar_R<float, BC::mul, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >}’
 template<class,class,class,class> class binary_expression_scalar_R;
                                         ^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:13:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Utility.h: In instantiation of ‘struct BC::Tensor_Utility<BC::Matrix<BC::binary_expression_dotproduct<float, BC::binary_expression_scalar_R<float, BC::mul, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::CPU>, void>’:
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:21:7:   required from ‘class BC::TensorBase<BC::Matrix<BC::binary_expression_dotproduct<float, BC::binary_expression_scalar_R<float, BC::mul, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::CPU> >’
../UnitTests/../BC_Internals/BC_Core/Matrix.h:17:7:   required from ‘class BC::Matrix<BC::binary_expression_dotproduct<float, BC::binary_expression_scalar_R<float, BC::mul, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::CPU>’
../UnitTests/main.cpp:59:20:   required from here
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Utility.h:35:47: error: ‘typename BC::MTF::shell_of<BC::Matrix<BC::binary_expression_dotproduct<float, BC::binary_expression_scalar_R<float, BC::mul, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::CPU> >::type’ names ‘template<class ... ntraits> using type = class BC::Matrix<ntraits ...>’, which is not a type
  using t1= typename MTF::shell_of<deriv>::type;
                                               ^
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Utility.h: In substitution of ‘template<class deriv, class> template<class d, class ml> using t1 = typename BC::MTF::shell_of::type [with d = BC::MTF::determine_scalar<BC::Matrix<BC::binary_expression_dotproduct<float, BC::binary_expression_scalar_R<float, BC::mul, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::CPU> >::type; ml = BC::MTF::determine_mathlib<BC::Matrix<BC::binary_expression_dotproduct<float, BC::binary_expression_scalar_R<float, BC::mul, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::CPU> >::type; deriv = BC::Matrix<BC::binary_expression_dotproduct<float, BC::binary_expression_scalar_R<float, BC::mul, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::CPU>; <template-parameter-1-2> = void]’:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Utility.h:37:55:   required from ‘struct BC::Tensor_Utility<BC::Matrix<BC::binary_expression_dotproduct<float, BC::binary_expression_scalar_R<float, BC::mul, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::CPU>, void>’
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:21:7:   required from ‘class BC::TensorBase<BC::Matrix<BC::binary_expression_dotproduct<float, BC::binary_expression_scalar_R<float, BC::mul, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::CPU> >’
../UnitTests/../BC_Internals/BC_Core/Matrix.h:17:7:   required from ‘class BC::Matrix<BC::binary_expression_dotproduct<float, BC::binary_expression_scalar_R<float, BC::mul, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::CPU>’
../UnitTests/main.cpp:59:20:   required from here
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Utility.h:35:47: error: ‘typename BC::MTF::shell_of<BC::Matrix<BC::binary_expression_dotproduct<float, BC::binary_expression_scalar_R<float, BC::mul, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::CPU> >::type’ names ‘template<class ... ntraits> using type = class BC::Matrix<ntraits ...>’, which is not a type
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:15:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h: In instantiation of ‘class BC::TensorInitializer<BC::Matrix<BC::binary_expression_dotproduct<float, BC::binary_expression_scalar_R<float, BC::mul, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::CPU>, void>’:
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:21:7:   required from ‘class BC::TensorBase<BC::Matrix<BC::binary_expression_dotproduct<float, BC::binary_expression_scalar_R<float, BC::mul, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::CPU> >’
../UnitTests/../BC_Internals/BC_Core/Matrix.h:17:7:   required from ‘class BC::Matrix<BC::binary_expression_dotproduct<float, BC::binary_expression_scalar_R<float, BC::mul, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::CPU>’
../UnitTests/main.cpp:59:20:   required from here
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h:28:15: error: ‘BC::TensorInitializer<derived, expression_tensor>::black_cat_array’ has incomplete type
  functor_type black_cat_array;
               ^~~~~~~~~~~~~~~
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:12:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:29:41: note: declaration of ‘using functor_type = BC::_functor<BC::Matrix<BC::binary_expression_dotproduct<float, BC::binary_expression_scalar_R<float, BC::mul, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::CPU> > {aka class BC::binary_expression_dotproduct<float, BC::binary_expression_scalar_R<float, BC::mul, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>}’
 template<class,class,class,class> class binary_expression_dotproduct;
                                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:13:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Utility.h: In instantiation of ‘struct BC::Tensor_Utility<BC::Matrix<BC::binary_expression_scalar_L<float, BC::mul, BC::Tensor_Core<BC::Scalar<float, BC::CPU> >, BC::Tensor_Core<BC::Matrix<float> > >, BC::CPU>, void>’:
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:21:7:   required from ‘class BC::TensorBase<BC::Matrix<BC::binary_expression_scalar_L<float, BC::mul, BC::Tensor_Core<BC::Scalar<float, BC::CPU> >, BC::Tensor_Core<BC::Matrix<float> > >, BC::CPU> >’
../UnitTests/../BC_Internals/BC_Core/Matrix.h:17:7:   required from ‘class BC::Matrix<BC::binary_expression_scalar_L<float, BC::mul, BC::Tensor_Core<BC::Scalar<float, BC::CPU> >, BC::Tensor_Core<BC::Matrix<float> > >, BC::CPU>’
../UnitTests/main.cpp:62:16:   required from here
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Utility.h:35:47: error: ‘typename BC::MTF::shell_of<BC::Matrix<BC::binary_expression_scalar_L<float, BC::mul, BC::Tensor_Core<BC::Scalar<float, BC::CPU> >, BC::Tensor_Core<BC::Matrix<float> > >, BC::CPU> >::type’ names ‘template<class ... ntraits> using type = class BC::Matrix<ntraits ...>’, which is not a type
  using t1= typename MTF::shell_of<deriv>::type;
                                               ^
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Utility.h: In substitution of ‘template<class deriv, class> template<class d, class ml> using t1 = typename BC::MTF::shell_of::type [with d = BC::MTF::determine_scalar<BC::Matrix<BC::binary_expression_scalar_L<float, BC::mul, BC::Tensor_Core<BC::Scalar<float, BC::CPU> >, BC::Tensor_Core<BC::Matrix<float> > >, BC::CPU> >::type; ml = BC::MTF::determine_mathlib<BC::Matrix<BC::binary_expression_scalar_L<float, BC::mul, BC::Tensor_Core<BC::Scalar<float, BC::CPU> >, BC::Tensor_Core<BC::Matrix<float> > >, BC::CPU> >::type; deriv = BC::Matrix<BC::binary_expression_scalar_L<float, BC::mul, BC::Tensor_Core<BC::Scalar<float, BC::CPU> >, BC::Tensor_Core<BC::Matrix<float> > >, BC::CPU>; <template-parameter-1-2> = void]’:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Utility.h:37:55:   required from ‘struct BC::Tensor_Utility<BC::Matrix<BC::binary_expression_scalar_L<float, BC::mul, BC::Tensor_Core<BC::Scalar<float, BC::CPU> >, BC::Tensor_Core<BC::Matrix<float> > >, BC::CPU>, void>’
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:21:7:   required from ‘class BC::TensorBase<BC::Matrix<BC::binary_expression_scalar_L<float, BC::mul, BC::Tensor_Core<BC::Scalar<float, BC::CPU> >, BC::Tensor_Core<BC::Matrix<float> > >, BC::CPU> >’
../UnitTests/../BC_Internals/BC_Core/Matrix.h:17:7:   required from ‘class BC::Matrix<BC::binary_expression_scalar_L<float, BC::mul, BC::Tensor_Core<BC::Scalar<float, BC::CPU> >, BC::Tensor_Core<BC::Matrix<float> > >, BC::CPU>’
../UnitTests/main.cpp:62:16:   required from here
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Utility.h:35:47: error: ‘typename BC::MTF::shell_of<BC::Matrix<BC::binary_expression_scalar_L<float, BC::mul, BC::Tensor_Core<BC::Scalar<float, BC::CPU> >, BC::Tensor_Core<BC::Matrix<float> > >, BC::CPU> >::type’ names ‘template<class ... ntraits> using type = class BC::Matrix<ntraits ...>’, which is not a type
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:15:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h: In instantiation of ‘class BC::TensorInitializer<BC::Matrix<BC::binary_expression_scalar_L<float, BC::mul, BC::Tensor_Core<BC::Scalar<float, BC::CPU> >, BC::Tensor_Core<BC::Matrix<float> > >, BC::CPU>, void>’:
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:21:7:   required from ‘class BC::TensorBase<BC::Matrix<BC::binary_expression_scalar_L<float, BC::mul, BC::Tensor_Core<BC::Scalar<float, BC::CPU> >, BC::Tensor_Core<BC::Matrix<float> > >, BC::CPU> >’
../UnitTests/../BC_Internals/BC_Core/Matrix.h:17:7:   required from ‘class BC::Matrix<BC::binary_expression_scalar_L<float, BC::mul, BC::Tensor_Core<BC::Scalar<float, BC::CPU> >, BC::Tensor_Core<BC::Matrix<float> > >, BC::CPU>’
../UnitTests/main.cpp:62:16:   required from here
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h:28:15: error: ‘BC::TensorInitializer<derived, expression_tensor>::black_cat_array’ has incomplete type
  functor_type black_cat_array;
               ^~~~~~~~~~~~~~~
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:12:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:27:41: note: declaration of ‘using functor_type = BC::_functor<BC::Matrix<BC::binary_expression_scalar_L<float, BC::mul, BC::Tensor_Core<BC::Scalar<float, BC::CPU> >, BC::Tensor_Core<BC::Matrix<float> > >, BC::CPU> > {aka class BC::binary_expression_scalar_L<float, BC::mul, BC::Tensor_Core<BC::Scalar<float, BC::CPU> >, BC::Tensor_Core<BC::Matrix<float> > >}’
 template<class,class,class,class> class binary_expression_scalar_L;
                                         ^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:13:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Utility.h: In instantiation of ‘struct BC::Tensor_Utility<BC::Matrix<BC::binary_expression_dotproduct<float, BC::binary_expression_scalar_L<float, BC::mul, BC::Tensor_Core<BC::Scalar<float, BC::CPU> >, BC::Tensor_Core<BC::Matrix<float> > >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::CPU>, void>’:
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:21:7:   required from ‘class BC::TensorBase<BC::Matrix<BC::binary_expression_dotproduct<float, BC::binary_expression_scalar_L<float, BC::mul, BC::Tensor_Core<BC::Scalar<float, BC::CPU> >, BC::Tensor_Core<BC::Matrix<float> > >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::CPU> >’
../UnitTests/../BC_Internals/BC_Core/Matrix.h:17:7:   required from ‘class BC::Matrix<BC::binary_expression_dotproduct<float, BC::binary_expression_scalar_L<float, BC::mul, BC::Tensor_Core<BC::Scalar<float, BC::CPU> >, BC::Tensor_Core<BC::Matrix<float> > >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::CPU>’
../UnitTests/main.cpp:62:20:   required from here
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Utility.h:35:47: error: ‘typename BC::MTF::shell_of<BC::Matrix<BC::binary_expression_dotproduct<float, BC::binary_expression_scalar_L<float, BC::mul, BC::Tensor_Core<BC::Scalar<float, BC::CPU> >, BC::Tensor_Core<BC::Matrix<float> > >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::CPU> >::type’ names ‘template<class ... ntraits> using type = class BC::Matrix<ntraits ...>’, which is not a type
  using t1= typename MTF::shell_of<deriv>::type;
                                               ^
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Utility.h: In substitution of ‘template<class deriv, class> template<class d, class ml> using t1 = typename BC::MTF::shell_of::type [with d = BC::MTF::determine_scalar<BC::Matrix<BC::binary_expression_dotproduct<float, BC::binary_expression_scalar_L<float, BC::mul, BC::Tensor_Core<BC::Scalar<float, BC::CPU> >, BC::Tensor_Core<BC::Matrix<float> > >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::CPU> >::type; ml = BC::MTF::determine_mathlib<BC::Matrix<BC::binary_expression_dotproduct<float, BC::binary_expression_scalar_L<float, BC::mul, BC::Tensor_Core<BC::Scalar<float, BC::CPU> >, BC::Tensor_Core<BC::Matrix<float> > >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::CPU> >::type; deriv = BC::Matrix<BC::binary_expression_dotproduct<float, BC::binary_expression_scalar_L<float, BC::mul, BC::Tensor_Core<BC::Scalar<float, BC::CPU> >, BC::Tensor_Core<BC::Matrix<float> > >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::CPU>; <template-parameter-1-2> = void]’:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Utility.h:37:55:   required from ‘struct BC::Tensor_Utility<BC::Matrix<BC::binary_expression_dotproduct<float, BC::binary_expression_scalar_L<float, BC::mul, BC::Tensor_Core<BC::Scalar<float, BC::CPU> >, BC::Tensor_Core<BC::Matrix<float> > >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::CPU>, void>’
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:21:7:   required from ‘class BC::TensorBase<BC::Matrix<BC::binary_expression_dotproduct<float, BC::binary_expression_scalar_L<float, BC::mul, BC::Tensor_Core<BC::Scalar<float, BC::CPU> >, BC::Tensor_Core<BC::Matrix<float> > >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::CPU> >’
../UnitTests/../BC_Internals/BC_Core/Matrix.h:17:7:   required from ‘class BC::Matrix<BC::binary_expression_dotproduct<float, BC::binary_expression_scalar_L<float, BC::mul, BC::Tensor_Core<BC::Scalar<float, BC::CPU> >, BC::Tensor_Core<BC::Matrix<float> > >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::CPU>’
../UnitTests/main.cpp:62:20:   required from here
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Utility.h:35:47: error: ‘typename BC::MTF::shell_of<BC::Matrix<BC::binary_expression_dotproduct<float, BC::binary_expression_scalar_L<float, BC::mul, BC::Tensor_Core<BC::Scalar<float, BC::CPU> >, BC::Tensor_Core<BC::Matrix<float> > >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::CPU> >::type’ names ‘template<class ... ntraits> using type = class BC::Matrix<ntraits ...>’, which is not a type
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:15:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h: In instantiation of ‘class BC::TensorInitializer<BC::Matrix<BC::binary_expression_dotproduct<float, BC::binary_expression_scalar_L<float, BC::mul, BC::Tensor_Core<BC::Scalar<float, BC::CPU> >, BC::Tensor_Core<BC::Matrix<float> > >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::CPU>, void>’:
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:21:7:   required from ‘class BC::TensorBase<BC::Matrix<BC::binary_expression_dotproduct<float, BC::binary_expression_scalar_L<float, BC::mul, BC::Tensor_Core<BC::Scalar<float, BC::CPU> >, BC::Tensor_Core<BC::Matrix<float> > >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::CPU> >’
../UnitTests/../BC_Internals/BC_Core/Matrix.h:17:7:   required from ‘class BC::Matrix<BC::binary_expression_dotproduct<float, BC::binary_expression_scalar_L<float, BC::mul, BC::Tensor_Core<BC::Scalar<float, BC::CPU> >, BC::Tensor_Core<BC::Matrix<float> > >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::CPU>’
../UnitTests/main.cpp:62:20:   required from here
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h:28:15: error: ‘BC::TensorInitializer<derived, expression_tensor>::black_cat_array’ has incomplete type
  functor_type black_cat_array;
               ^~~~~~~~~~~~~~~
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:12:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:29:41: note: declaration of ‘using functor_type = BC::_functor<BC::Matrix<BC::binary_expression_dotproduct<float, BC::binary_expression_scalar_L<float, BC::mul, BC::Tensor_Core<BC::Scalar<float, BC::CPU> >, BC::Tensor_Core<BC::Matrix<float> > >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::CPU> > {aka class BC::binary_expression_dotproduct<float, BC::binary_expression_scalar_L<float, BC::mul, BC::Tensor_Core<BC::Scalar<float, BC::CPU> >, BC::Tensor_Core<BC::Matrix<float> > >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>}’
 template<class,class,class,class> class binary_expression_dotproduct;
                                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:13:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Utility.h: In instantiation of ‘struct BC::Tensor_Utility<BC::Matrix<BC::binary_expression_scalar_R<float, BC::mul, BC::binary_expression_dotproduct<float, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >, BC::CPU>, void>’:
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:21:7:   required from ‘class BC::TensorBase<BC::Matrix<BC::binary_expression_scalar_R<float, BC::mul, BC::binary_expression_dotproduct<float, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >, BC::CPU> >’
../UnitTests/../BC_Internals/BC_Core/Matrix.h:17:7:   required from ‘class BC::Matrix<BC::binary_expression_scalar_R<float, BC::mul, BC::binary_expression_dotproduct<float, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >, BC::CPU>’
../UnitTests/main.cpp:64:20:   required from here
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Utility.h:35:47: error: ‘typename BC::MTF::shell_of<BC::Matrix<BC::binary_expression_scalar_R<float, BC::mul, BC::binary_expression_dotproduct<float, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >, BC::CPU> >::type’ names ‘template<class ... ntraits> using type = class BC::Matrix<ntraits ...>’, which is not a type
  using t1= typename MTF::shell_of<deriv>::type;
                                               ^
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Utility.h: In substitution of ‘template<class deriv, class> template<class d, class ml> using t1 = typename BC::MTF::shell_of::type [with d = BC::MTF::determine_scalar<BC::Matrix<BC::binary_expression_scalar_R<float, BC::mul, BC::binary_expression_dotproduct<float, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >, BC::CPU> >::type; ml = BC::MTF::determine_mathlib<BC::Matrix<BC::binary_expression_scalar_R<float, BC::mul, BC::binary_expression_dotproduct<float, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >, BC::CPU> >::type; deriv = BC::Matrix<BC::binary_expression_scalar_R<float, BC::mul, BC::binary_expression_dotproduct<float, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >, BC::CPU>; <template-parameter-1-2> = void]’:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Utility.h:37:55:   required from ‘struct BC::Tensor_Utility<BC::Matrix<BC::binary_expression_scalar_R<float, BC::mul, BC::binary_expression_dotproduct<float, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >, BC::CPU>, void>’
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:21:7:   required from ‘class BC::TensorBase<BC::Matrix<BC::binary_expression_scalar_R<float, BC::mul, BC::binary_expression_dotproduct<float, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >, BC::CPU> >’
../UnitTests/../BC_Internals/BC_Core/Matrix.h:17:7:   required from ‘class BC::Matrix<BC::binary_expression_scalar_R<float, BC::mul, BC::binary_expression_dotproduct<float, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >, BC::CPU>’
../UnitTests/main.cpp:64:20:   required from here
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Utility.h:35:47: error: ‘typename BC::MTF::shell_of<BC::Matrix<BC::binary_expression_scalar_R<float, BC::mul, BC::binary_expression_dotproduct<float, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >, BC::CPU> >::type’ names ‘template<class ... ntraits> using type = class BC::Matrix<ntraits ...>’, which is not a type
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:15:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h: In instantiation of ‘class BC::TensorInitializer<BC::Matrix<BC::binary_expression_scalar_R<float, BC::mul, BC::binary_expression_dotproduct<float, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >, BC::CPU>, void>’:
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:21:7:   required from ‘class BC::TensorBase<BC::Matrix<BC::binary_expression_scalar_R<float, BC::mul, BC::binary_expression_dotproduct<float, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >, BC::CPU> >’
../UnitTests/../BC_Internals/BC_Core/Matrix.h:17:7:   required from ‘class BC::Matrix<BC::binary_expression_scalar_R<float, BC::mul, BC::binary_expression_dotproduct<float, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >, BC::CPU>’
../UnitTests/main.cpp:64:20:   required from here
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h:28:15: error: ‘BC::TensorInitializer<derived, expression_tensor>::black_cat_array’ has incomplete type
  functor_type black_cat_array;
               ^~~~~~~~~~~~~~~
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:12:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:28:41: note: declaration of ‘using functor_type = BC::_functor<BC::Matrix<BC::binary_expression_scalar_R<float, BC::mul, BC::binary_expression_dotproduct<float, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >, BC::CPU> > {aka class BC::binary_expression_scalar_R<float, BC::mul, BC::binary_expression_dotproduct<float, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >}’
 template<class,class,class,class> class binary_expression_scalar_R;
                                         ^~~~~~~~~~~~~~~~~~~~~~~~~~
../UnitTests/main.cpp:76:8: error: ‘using mat = class BC::Matrix<float> {aka class BC::Matrix<float>}’ has no member named ‘t’
  c = a.t() * b.t();
        ^
../UnitTests/main.cpp:76:16: error: ‘using mat = class BC::Matrix<float> {aka class BC::Matrix<float>}’ has no member named ‘t’
  c = a.t() * b.t();
                ^
../UnitTests/main.cpp:80:8: error: ‘using mat = class BC::Matrix<float> {aka class BC::Matrix<float>}’ has no member named ‘t’
  c = a.t() * A * (b.t() * A);
        ^
../UnitTests/main.cpp:80:21: error: ‘using mat = class BC::Matrix<float> {aka class BC::Matrix<float>}’ has no member named ‘t’
  c = a.t() * A * (b.t() * A);
                     ^
../UnitTests/main.cpp:94:14: error: invalid operands of types ‘void’ and ‘void’ to binary ‘operator+’
  d[1] = d[1] + d[1];
         ~~~~~^~~~~~
../UnitTests/main.cpp:99:8: error: invalid types ‘void[int]’ for array subscript
  d[1][1] = d[1][1] + d[1][1];
        ^
../UnitTests/main.cpp:99:18: error: invalid types ‘void[int]’ for array subscript
  d[1][1] = d[1][1] + d[1][1];
                  ^
../UnitTests/main.cpp:99:28: error: invalid types ‘void[int]’ for array subscript
  d[1][1] = d[1][1] + d[1][1];
                            ^
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:13:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Utility.h: In instantiation of ‘void BC::Tensor_Utility<deriv, typename std::enable_if<(isPrim<typename BC::determine_functor< <template-parameter-1-1> >::fscal> || BC::MTF::isCore<typename BC::determine_functor< <template-parameter-1-1> >::type>::conditional), void>::type>::read(std::ifstream&, bool, bool) [with deriv = BC::Matrix<double>; typename std::enable_if<(isPrim<typename BC::determine_functor< <template-parameter-1-1> >::fscal> || BC::MTF::isCore<typename BC::determine_functor< <template-parameter-1-1> >::type>::conditional), void>::type = void; std::ifstream = std::basic_ifstream<char>]’:
../UnitTests/main.cpp:113:15:   required from here
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Utility.h:139:22: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
    for (int i = 0; i < dims.size(); ++i) {
                    ~~^~~~~~~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Utility.h:145:92: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
    MATHLIB::HostToDevice(asDerived().data().core(), &data[data[0] + 1], asDerived().size() > data.size() ? data.size() : asDerived().size());
                                                                                             
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:13:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Utility.h:147:86: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
    MATHLIB::HostToDevice(asDerived().data().core(), &data[0],     asDerived().size() > data.size() ? data.size() : asDerived().size());
                                                                                       
In file included from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:32:0,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_MathLibraries/Mathematics_CPU.h: In instantiation of ‘static void BC::CPU::copy(T&, const J&, int) [with T = BC::Tensor_Core<BC::Matrix<float> >; J = BC::binary_expression_dotproduct<float, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>]’:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:218:21:   required from ‘derived& BC::Tensor_Operations< <template-parameter-1-1> >::operator=(const BC::Tensor_Operations<param_deriv>&) [with pDeriv = BC::Matrix<BC::binary_expression_dotproduct<float, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::CPU>; derived = BC::Matrix<float>]’
../UnitTests/../BC_Internals/BC_Core/Matrix.h:45:83:   required from ‘BC::Matrix< <template-parameter-1-1>, ML>& BC::Matrix< <template-parameter-1-1>, ML>::operator=(const BC::Matrix<U, Mathlib>&) [with U = BC::binary_expression_dotproduct<float, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>; T = float; Mathlib = BC::CPU]’
../UnitTests/main.cpp:47:10:   required from here
../UnitTests/../BC_Internals/BC_MathLibraries/Mathematics_CPU.h:70:13: error: no match for ‘operator[]’ (operand types are ‘const BC::binary_expression_dotproduct<float, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>’ and ‘int’)
     t[i] = j[i];
            ~^
../UnitTests/../BC_Internals/BC_MathLibraries/Mathematics_CPU.h:76:12: error: no match for ‘operator[]’ (operand types are ‘const BC::binary_expression_dotproduct<float, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>’ and ‘int’)
    t[i] = j[i];
           ~^
../UnitTests/../BC_Internals/BC_MathLibraries/Mathematics_CPU.h: In instantiation of ‘static void BC::CPU::copy(T&, const J&, int) [with T = BC::Tensor_Core<BC::Matrix<float> >; J = BC::binary_expression_dotproduct<float, BC::binary_expression_scalar_R<float, BC::mul, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>]’:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:218:21:   required from ‘derived& BC::Tensor_Operations< <template-parameter-1-1> >::operator=(const BC::Tensor_Operations<param_deriv>&) [with pDeriv = BC::Matrix<BC::binary_expression_dotproduct<float, BC::binary_expression_scalar_R<float, BC::mul, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::CPU>; derived = BC::Matrix<float>]’
../UnitTests/../BC_Internals/BC_Core/Matrix.h:45:83:   required from ‘BC::Matrix< <template-parameter-1-1>, ML>& BC::Matrix< <template-parameter-1-1>, ML>::operator=(const BC::Matrix<U, Mathlib>&) [with U = BC::binary_expression_dotproduct<float, BC::binary_expression_scalar_R<float, BC::mul, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>; T = float; Mathlib = BC::CPU]’
../UnitTests/main.cpp:59:20:   required from here
../UnitTests/../BC_Internals/BC_MathLibraries/Mathematics_CPU.h:70:13: error: no match for ‘operator[]’ (operand types are ‘const BC::binary_expression_dotproduct<float, BC::binary_expression_scalar_R<float, BC::mul, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>’ and ‘int’)
     t[i] = j[i];
            ~^
../UnitTests/../BC_Internals/BC_MathLibraries/Mathematics_CPU.h:76:12: error: no match for ‘operator[]’ (operand types are ‘const BC::binary_expression_dotproduct<float, BC::binary_expression_scalar_R<float, BC::mul, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>’ and ‘int’)
    t[i] = j[i];
           ~^
../UnitTests/../BC_Internals/BC_MathLibraries/Mathematics_CPU.h: In instantiation of ‘static void BC::CPU::copy(T&, const J&, int) [with T = BC::Tensor_Core<BC::Matrix<float> >; J = BC::binary_expression_dotproduct<float, BC::binary_expression_scalar_L<float, BC::mul, BC::Tensor_Core<BC::Scalar<float, BC::CPU> >, BC::Tensor_Core<BC::Matrix<float> > >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>]’:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:218:21:   required from ‘derived& BC::Tensor_Operations< <template-parameter-1-1> >::operator=(const BC::Tensor_Operations<param_deriv>&) [with pDeriv = BC::Matrix<BC::binary_expression_dotproduct<float, BC::binary_expression_scalar_L<float, BC::mul, BC::Tensor_Core<BC::Scalar<float, BC::CPU> >, BC::Tensor_Core<BC::Matrix<float> > >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::CPU>; derived = BC::Matrix<float>]’
../UnitTests/../BC_Internals/BC_Core/Matrix.h:45:83:   required from ‘BC::Matrix< <template-parameter-1-1>, ML>& BC::Matrix< <template-parameter-1-1>, ML>::operator=(const BC::Matrix<U, Mathlib>&) [with U = BC::binary_expression_dotproduct<float, BC::binary_expression_scalar_L<float, BC::mul, BC::Tensor_Core<BC::Scalar<float, BC::CPU> >, BC::Tensor_Core<BC::Matrix<float> > >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>; T = float; Mathlib = BC::CPU]’
../UnitTests/main.cpp:62:20:   required from here
../UnitTests/../BC_Internals/BC_MathLibraries/Mathematics_CPU.h:70:13: error: no match for ‘operator[]’ (operand types are ‘const BC::binary_expression_dotproduct<float, BC::binary_expression_scalar_L<float, BC::mul, BC::Tensor_Core<BC::Scalar<float, BC::CPU> >, BC::Tensor_Core<BC::Matrix<float> > >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>’ and ‘int’)
     t[i] = j[i];
            ~^
../UnitTests/../BC_Internals/BC_MathLibraries/Mathematics_CPU.h:76:12: error: no match for ‘operator[]’ (operand types are ‘const BC::binary_expression_dotproduct<float, BC::binary_expression_scalar_L<float, BC::mul, BC::Tensor_Core<BC::Scalar<float, BC::CPU> >, BC::Tensor_Core<BC::Matrix<float> > >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>’ and ‘int’)
    t[i] = j[i];
           ~^
../UnitTests/../BC_Internals/BC_MathLibraries/Mathematics_CPU.h: In instantiation of ‘static void BC::CPU::copy(T&, const J&, int) [with T = BC::Tensor_Core<BC::Matrix<float> >; J = BC::binary_expression_scalar_R<float, BC::mul, BC::binary_expression_dotproduct<float, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >]’:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:218:21:   required from ‘derived& BC::Tensor_Operations< <template-parameter-1-1> >::operator=(const BC::Tensor_Operations<param_deriv>&) [with pDeriv = BC::Matrix<BC::binary_expression_scalar_R<float, BC::mul, BC::binary_expression_dotproduct<float, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >, BC::CPU>; derived = BC::Matrix<float>]’
../UnitTests/../BC_Internals/BC_Core/Matrix.h:45:83:   required from ‘BC::Matrix< <template-parameter-1-1>, ML>& BC::Matrix< <template-parameter-1-1>, ML>::operator=(const BC::Matrix<U, Mathlib>&) [with U = BC::binary_expression_scalar_R<float, BC::mul, BC::binary_expression_dotproduct<float, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >; T = float; Mathlib = BC::CPU]’
../UnitTests/main.cpp:64:20:   required from here
../UnitTests/../BC_Internals/BC_MathLibraries/Mathematics_CPU.h:70:13: error: no match for ‘operator[]’ (operand types are ‘const BC::binary_expression_scalar_R<float, BC::mul, BC::binary_expression_dotproduct<float, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >’ and ‘int’)
     t[i] = j[i];
            ~^
../UnitTests/../BC_Internals/BC_MathLibraries/Mathematics_CPU.h:76:12: error: no match for ‘operator[]’ (operand types are ‘const BC::binary_expression_scalar_R<float, BC::mul, BC::binary_expression_dotproduct<float, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >’ and ‘int’)
    t[i] = j[i];
           ~^
In file included from ../UnitTests/../BC_Internals/BC_MathLibraries/Mathematics_CPU.h:15:0,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:32,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_MathLibraries/BC_PrintFunctions.h: In instantiation of ‘void BC::printHelper(const T&, int_ranks, int, std::__cxx11::string, int) [with T = const float*; int_ranks = int*; std::__cxx11::string = std::__cxx11::basic_string<char>]’:
../UnitTests/../BC_Internals/BC_MathLibraries/BC_PrintFunctions.h:102:13:   required from ‘void BC::print(const T&, RANKS, int, int) [with T = const float*; RANKS = int*]’
../UnitTests/../BC_Internals/BC_MathLibraries/Mathematics_CPU.h:98:12:   required from ‘static void BC::CPU::print(T, RANKS, int, int) [with T = const float*; RANKS = int*]’
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Utility.h:82:17:   required from ‘void BC::Tensor_Utility<deriv, typename std::enable_if<(isPrim<typename BC::determine_functor< <template-parameter-1-1> >::fscal> || BC::MTF::isCore<typename BC::determine_functor< <template-parameter-1-1> >::type>::conditional), void>::type>::print() const [with deriv = BC::Matrix<float>; typename std::enable_if<(isPrim<typename BC::determine_functor< <template-parameter-1-1> >::fscal> || BC::MTF::isCore<typename BC::determine_functor< <template-parameter-1-1> >::type>::conditional), void>::type = void]’
../UnitTests/main.cpp:37:10:   required from here
../UnitTests/../BC_Internals/BC_MathLibraries/BC_PrintFunctions.h:43:38: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
     str = str.substr(0, str.length() < printSpace ? str.length() : printSpace);
                                       
../UnitTests/../BC_Internals/BC_MathLibraries/BC_PrintFunctions.h:46:22: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
     if (str.length() < printSpace)
                       
../UnitTests/../BC_Internals/BC_MathLibraries/BC_PrintFunctions.h:67:37: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
    str = str.substr(0, str.length() < printSpace ? str.length() : printSpace);
                                      
../UnitTests/../BC_Internals/BC_MathLibraries/BC_PrintFunctions.h:70:21: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
    if (str.length() < printSpace)
                      
../UnitTests/../BC_Internals/BC_MathLibraries/BC_PrintFunctions.h: In instantiation of ‘void BC::printHelper(const T&, int_ranks, int, std::__cxx11::string, int) [with T = const double*; int_ranks = int*; std::__cxx11::string = std::__cxx11::basic_string<char>]’:
../UnitTests/../BC_Internals/BC_MathLibraries/BC_PrintFunctions.h:102:13:   required from ‘void BC::print(const T&, RANKS, int, int) [with T = const double*; RANKS = int*]’
../UnitTests/../BC_Internals/BC_MathLibraries/Mathematics_CPU.h:98:12:   required from ‘static void BC::CPU::print(T, RANKS, int, int) [with T = const double*; RANKS = int*]’
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Utility.h:82:17:   required from ‘void BC::Tensor_Utility<deriv, typename std::enable_if<(isPrim<typename BC::determine_functor< <template-parameter-1-1> >::fscal> || BC::MTF::isCore<typename BC::determine_functor< <template-parameter-1-1> >::type>::conditional), void>::type>::print() const [with deriv = BC::Matrix<double>; typename std::enable_if<(isPrim<typename BC::determine_functor< <template-parameter-1-1> >::fscal> || BC::MTF::isCore<typename BC::determine_functor< <template-parameter-1-1> >::type>::conditional), void>::type = void]’
../UnitTests/main.cpp:114:14:   required from here
../UnitTests/../BC_Internals/BC_MathLibraries/BC_PrintFunctions.h:43:38: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
     str = str.substr(0, str.length() < printSpace ? str.length() : printSpace);
                                       
../UnitTests/../BC_Internals/BC_MathLibraries/BC_PrintFunctions.h:46:22: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
     if (str.length() < printSpace)
                       
../UnitTests/../BC_Internals/BC_MathLibraries/BC_PrintFunctions.h:67:37: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
    str = str.substr(0, str.length() < printSpace ? str.length() : printSpace);
                                      
../UnitTests/../BC_Internals/BC_MathLibraries/BC_PrintFunctions.h:70:21: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
    if (str.length() < printSpace)
                      
make: *** [UnitTests/main.o] Error 1
UnitTests/subdir.mk:18: recipe for target 'UnitTests/main.o' failed
17:14:07 **** Incremental Build of configuration Debug for project BlackCat_LibraryCPU ****
make all 
Building file: ../UnitTests/main.cpp
Invoking: GCC C++ Compiler
g++ -O0 -g3 -Wall -c -fmessage-length=0 -MMD -MP -MF"UnitTests/main.d" -MT"UnitTests/main.o" -o "UnitTests/main.o" "../UnitTests/main.cpp"
In file included from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:32:0,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_MathLibraries/Mathematics_CPU.h:74:0: warning: ignoring #pragma omp parallel [-Wunknown-pragmas]
 #pragma omp parallel for
 
../UnitTests/../BC_Internals/BC_MathLibraries/Mathematics_CPU.h:78:0: warning: ignoring #pragma omp barrier [-Wunknown-pragmas]
 #pragma omp barrier
 
../UnitTests/../BC_Internals/BC_MathLibraries/Mathematics_CPU.h:88:0: warning: ignoring #pragma omp parallel [-Wunknown-pragmas]
 #pragma omp parallel for
 
../UnitTests/../BC_Internals/BC_MathLibraries/Mathematics_CPU.h:92:0: warning: ignoring #pragma omp barrier [-Wunknown-pragmas]
 #pragma omp barrier
 
In file included from ../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Core_Slice.h:17:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Core.h:13,
                 from ../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h:12,
                 from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:15,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Core_Scalar.h:22:0: warning: "__BCinline__" redefined
 #define __BCinline__
 
In file included from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:29:0,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Expressions/BlackCat_Internal_Definitions.h:25:0: note: this is the location of the previous definition
 #define __BCinline__ __BC_gcpu__ __attribute__((always_inline))
 
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:13:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Utility.h:35:47: error: expected ‘;’ before ‘<’ token
  using t1= typename MTF::shell_of<deriv>::type<d, ml>;
                                               ^
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Utility.h:37:20: error: ‘t1’ does not name a type
  using eval_type = t1<_scalar<deriv>, _mathlib<deriv>>;
                    ^~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Utility.h: In member function ‘auto BC::Tensor_Utility<deriv, <template-parameter-1-2> >::eval() const’:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Utility.h:41:45: error: expected ‘(’ before ‘<’ token
   return typename MTF::shell_of<deriv>::type<_scalar<deriv>, _mathlib<deriv>>(this->asDerived());
                                             ^
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Utility.h:41:60: error: expected primary-expression before ‘,’ token
   return typename MTF::shell_of<deriv>::type<_scalar<deriv>, _mathlib<deriv>>(this->asDerived());
                                                            ^
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Utility.h:41:76: error: expected primary-expression before ‘>’ token
   return typename MTF::shell_of<deriv>::type<_scalar<deriv>, _mathlib<deriv>>(this->asDerived());
                                                                            ^~
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:15:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h: At global scope:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h:74:54: error: expected ‘;’ before ‘<’ token
  using derived_alt = typename shell_of<derived>::type<T, Mathlib>;
                                                      ^
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h:77:26: error: ‘derived_alt’ does not name a type
  TensorInitializer(const derived_alt<U>&  tensor) : black_cat_array(tensor.innerShape()) {
                          ^~~~~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h:77:37: error: expected ‘,’ or ‘...’ before ‘<’ token
  TensorInitializer(const derived_alt<U>&  tensor) : black_cat_array(tensor.innerShape()) {
                                     ^
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h: In constructor ‘BC::TensorInitializer<_tensor<t, ml>, typename std::enable_if<BC::MTF::isCorePure<t>::conditional, void>::type>::TensorInitializer(int)’:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h:77:69: error: ‘tensor’ was not declared in this scope
  TensorInitializer(const derived_alt<U>&  tensor) : black_cat_array(tensor.innerShape()) {
                                                                     ^~~~~~
In file included from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10:0,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/TensorBase.h: At global scope:
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:38:71: error: expected ‘;’ before ‘<’ token
  template<class    U> using deriv   = typename shell_of<derived>::type<U, Mathlib>;
                                                                       ^
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:39:76: error: expected ‘;’ before ‘<’ token
  template<class... U> using functor = typename shell_of<functor_type>::type<U...>;
                                                                            ^
../UnitTests/../BC_Internals/BC_Core/TensorBase.h: In member function ‘auto BC::TensorBase<derived>::operator[](int)’:
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:83:68: error: expected ‘(’ before ‘<’ token
     auto operator [] (int i)    { return typename base<RANK>::slice<decltype(slice(0)), Mathlib>(slice(i)); }
                                                                    ^
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:83:69: error: expected primary-expression before ‘decltype’
     auto operator [] (int i)    { return typename base<RANK>::slice<decltype(slice(0)), Mathlib>(slice(i)); }
                                                                     ^~~~~~~~
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:83:69: error: expected ‘;’ before ‘decltype’
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:83:87: error: expected unqualified-id before ‘,’ token
     auto operator [] (int i)    { return typename base<RANK>::slice<decltype(slice(0)), Mathlib>(slice(i)); }
                                                                                       ^
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:83:96: error: expected initializer before ‘>’ token
     auto operator [] (int i)    { return typename base<RANK>::slice<decltype(slice(0)), Mathlib>(slice(i)); }
                                                                                                ^
../UnitTests/../BC_Internals/BC_Core/TensorBase.h: In member function ‘const auto BC::TensorBase<derived>::operator[](int) const’:
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:84:74: error: expected ‘(’ before ‘<’ token
  const auto operator [] (int i) const { return typename base<RANK>::slice<decltype(slice(0)), Mathlib>(slice(i)); }
                                                                          ^
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:84:75: error: expected primary-expression before ‘decltype’
  const auto operator [] (int i) const { return typename base<RANK>::slice<decltype(slice(0)), Mathlib>(slice(i)); }
                                                                           ^~~~~~~~
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:84:75: error: expected ‘;’ before ‘decltype’
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:84:93: error: expected unqualified-id before ‘,’ token
  const auto operator [] (int i) const { return typename base<RANK>::slice<decltype(slice(0)), Mathlib>(slice(i)); }
                                                                                             ^
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:84:102: error: expected initializer before ‘>’ token
  const auto operator [] (int i) const { return typename base<RANK>::slice<decltype(slice(0)), Mathlib>(slice(i)); }
                                                                                                      ^
In file included from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:50:0,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Vector.h: At global scope:
../UnitTests/../BC_Internals/BC_Core/Vector.h:45:15: error: ‘unary_expression_transpose’ was not declared in this scope
  const Vector<unary_expression_transpose<typename MTF::determine_scalar<T>::type, typename parent_class::functor_type>, Mathlib> t() const {
               ^~~~~~~~~~~~~~~~~~~~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Vector.h:45:118: error: template argument 1 is invalid
  const Vector<unary_expression_transpose<typename MTF::determine_scalar<T>::type, typename parent_class::functor_type>, Mathlib> t() const {
                                                                                                                      ^
../UnitTests/../BC_Internals/BC_Core/Vector.h:45:119: error: expected unqualified-id before ‘,’ token
  const Vector<unary_expression_transpose<typename MTF::determine_scalar<T>::type, typename parent_class::functor_type>, Mathlib> t() const {
                                                                                                                       ^
In file included from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:51:0,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Matrix.h:47:15: error: ‘unary_expression_transpose’ was not declared in this scope
  const Matrix<unary_expression_transpose<typename MTF::determine_scalar<T>::type, typename parent_class::functor_type>, Mathlib> t() const {
               ^~~~~~~~~~~~~~~~~~~~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Matrix.h:47:118: error: template argument 1 is invalid
  const Matrix<unary_expression_transpose<typename MTF::determine_scalar<T>::type, typename parent_class::functor_type>, Mathlib> t() const {
                                                                                                                      ^
../UnitTests/../BC_Internals/BC_Core/Matrix.h:47:119: error: expected unqualified-id before ‘,’ token
  const Matrix<unary_expression_transpose<typename MTF::determine_scalar<T>::type, typename parent_class::functor_type>, Mathlib> t() const {
                                                                                                                       ^
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:15:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h: In instantiation of ‘class BC::TensorInitializer<BC::Vector<BC::binary_expression<float, BC::mul, BC::Tensor_Core<BC::Vector<float> >, BC::Tensor_Core<BC::Vector<float> > >, BC::CPU>, void>’:
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:21:7:   required from ‘class BC::TensorBase<BC::Vector<BC::binary_expression<float, BC::mul, BC::Tensor_Core<BC::Vector<float> >, BC::Tensor_Core<BC::Vector<float> > >, BC::CPU> >’
../UnitTests/../BC_Internals/BC_Core/Vector.h:17:7:   required from ‘class BC::Vector<BC::binary_expression<float, BC::mul, BC::Tensor_Core<BC::Vector<float> >, BC::Tensor_Core<BC::Vector<float> > >, BC::CPU>’
../UnitTests/SpeedTests.h:43:19:   required from here
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h:28:15: error: ‘BC::TensorInitializer<derived, expression_tensor>::black_cat_array’ has incomplete type
  functor_type black_cat_array;
               ^~~~~~~~~~~~~~~
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:12:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:26:41: note: declaration of ‘using functor_type = BC::_functor<BC::Vector<BC::binary_expression<float, BC::mul, BC::Tensor_Core<BC::Vector<float> >, BC::Tensor_Core<BC::Vector<float> > >, BC::CPU> > {aka class BC::binary_expression<float, BC::mul, BC::Tensor_Core<BC::Vector<float> >, BC::Tensor_Core<BC::Vector<float> > >}’
 template<class,class,class,class> class binary_expression;
                                         ^~~~~~~~~~~~~~~~~
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:15:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h: In instantiation of ‘class BC::TensorInitializer<BC::Vector<BC::binary_expression<float, BC::assign, BC::Tensor_Core<BC::Vector<float> >, BC::binary_expression<float, BC::mul, BC::Tensor_Core<BC::Vector<float> >, BC::Tensor_Core<BC::Vector<float> > > >, BC::CPU>, void>’:
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:21:7:   required from ‘class BC::TensorBase<BC::Vector<BC::binary_expression<float, BC::assign, BC::Tensor_Core<BC::Vector<float> >, BC::binary_expression<float, BC::mul, BC::Tensor_Core<BC::Vector<float> >, BC::Tensor_Core<BC::Vector<float> > > >, BC::CPU> >’
../UnitTests/../BC_Internals/BC_Core/Vector.h:17:7:   required from ‘class BC::Vector<BC::binary_expression<float, BC::assign, BC::Tensor_Core<BC::Vector<float> >, BC::binary_expression<float, BC::mul, BC::Tensor_Core<BC::Vector<float> >, BC::Tensor_Core<BC::Vector<float> > > >, BC::CPU>’
../UnitTests/SpeedTests.h:43:24:   required from here
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h:28:15: error: ‘BC::TensorInitializer<derived, expression_tensor>::black_cat_array’ has incomplete type
  functor_type black_cat_array;
               ^~~~~~~~~~~~~~~
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:12:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:26:41: note: declaration of ‘using functor_type = BC::_functor<BC::Vector<BC::binary_expression<float, BC::assign, BC::Tensor_Core<BC::Vector<float> >, BC::binary_expression<float, BC::mul, BC::Tensor_Core<BC::Vector<float> >, BC::Tensor_Core<BC::Vector<float> > > >, BC::CPU> > {aka class BC::binary_expression<float, BC::assign, BC::Tensor_Core<BC::Vector<float> >, BC::binary_expression<float, BC::mul, BC::Tensor_Core<BC::Vector<float> >, BC::Tensor_Core<BC::Vector<float> > > >}’
 template<class,class,class,class> class binary_expression;
                                         ^~~~~~~~~~~~~~~~~
In file included from ../UnitTests/main.cpp:4:0:
../UnitTests/SpeedTests.h: In function ‘int speedTestsScalarIteration()’:
../UnitTests/SpeedTests.h:136:9: error: ‘using mat = class BC::Matrix<float> {aka class BC::Matrix<float>}’ has no member named ‘t’
   c = a.t() * b;
         ^
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:15:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h: In instantiation of ‘class BC::TensorInitializer<BC::Matrix<BC::binary_expression<float, BC::add, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> > >, BC::CPU>, void>’:
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:21:7:   required from ‘class BC::TensorBase<BC::Matrix<BC::binary_expression<float, BC::add, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> > >, BC::CPU> >’
../UnitTests/../BC_Internals/BC_Core/Matrix.h:17:7:   required from ‘class BC::Matrix<BC::binary_expression<float, BC::add, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> > >, BC::CPU>’
../UnitTests/SpeedTests.h:146:23:   required from here
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h:28:15: error: ‘BC::TensorInitializer<derived, expression_tensor>::black_cat_array’ has incomplete type
  functor_type black_cat_array;
               ^~~~~~~~~~~~~~~
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:12:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:26:41: note: declaration of ‘using functor_type = BC::_functor<BC::Matrix<BC::binary_expression<float, BC::add, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> > >, BC::CPU> > {aka class BC::binary_expression<float, BC::add, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> > >}’
 template<class,class,class,class> class binary_expression;
                                         ^~~~~~~~~~~~~~~~~
../UnitTests/main.cpp: In function ‘auto test()’:
../UnitTests/main.cpp:40:8: error: ‘using mat = class BC::Matrix<float> {aka class BC::Matrix<float>}’ has no member named ‘t’
  d = a.t();
        ^
../UnitTests/main.cpp:41:8: error: ‘using mat = class BC::Matrix<float> {aka class BC::Matrix<float>}’ has no member named ‘t’
  e = b.t();
        ^
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:15:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h: In instantiation of ‘class BC::TensorInitializer<BC::Matrix<BC::binary_expression_dotproduct<float, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::CPU>, void>’:
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:21:7:   required from ‘class BC::TensorBase<BC::Matrix<BC::binary_expression_dotproduct<float, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::CPU> >’
../UnitTests/../BC_Internals/BC_Core/Matrix.h:17:7:   required from ‘class BC::Matrix<BC::binary_expression_dotproduct<float, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::CPU>’
../UnitTests/main.cpp:47:10:   required from here
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h:28:15: error: ‘BC::TensorInitializer<derived, expression_tensor>::black_cat_array’ has incomplete type
  functor_type black_cat_array;
               ^~~~~~~~~~~~~~~
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:12:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:29:41: note: declaration of ‘using functor_type = BC::_functor<BC::Matrix<BC::binary_expression_dotproduct<float, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::CPU> > {aka class BC::binary_expression_dotproduct<float, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>}’
 template<class,class,class,class> class binary_expression_dotproduct;
                                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
../UnitTests/main.cpp:50:8: error: ‘using mat = class BC::Matrix<float> {aka class BC::Matrix<float>}’ has no member named ‘t’
  c = a.t() * b.t();
        ^
../UnitTests/main.cpp:50:16: error: ‘using mat = class BC::Matrix<float> {aka class BC::Matrix<float>}’ has no member named ‘t’
  c = a.t() * b.t();
                ^
../UnitTests/main.cpp:53:8: error: ‘using mat = class BC::Matrix<float> {aka class BC::Matrix<float>}’ has no member named ‘t’
  c = a.t() * e;
        ^
../UnitTests/main.cpp:56:12: error: ‘using mat = class BC::Matrix<float> {aka class BC::Matrix<float>}’ has no member named ‘t’
  c = d * b.t();
            ^
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:15:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h: In instantiation of ‘class BC::TensorInitializer<BC::Matrix<BC::binary_expression_scalar_R<float, BC::mul, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >, BC::CPU>, void>’:
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:21:7:   required from ‘class BC::TensorBase<BC::Matrix<BC::binary_expression_scalar_R<float, BC::mul, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >, BC::CPU> >’
../UnitTests/../BC_Internals/BC_Core/Matrix.h:17:7:   required from ‘class BC::Matrix<BC::binary_expression_scalar_R<float, BC::mul, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >, BC::CPU>’
../UnitTests/main.cpp:59:16:   required from here
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h:28:15: error: ‘BC::TensorInitializer<derived, expression_tensor>::black_cat_array’ has incomplete type
  functor_type black_cat_array;
               ^~~~~~~~~~~~~~~
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:12:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:28:41: note: declaration of ‘using functor_type = BC::_functor<BC::Matrix<BC::binary_expression_scalar_R<float, BC::mul, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >, BC::CPU> > {aka class BC::binary_expression_scalar_R<float, BC::mul, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >}’
 template<class,class,class,class> class binary_expression_scalar_R;
                                         ^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:15:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h: In instantiation of ‘class BC::TensorInitializer<BC::Matrix<BC::binary_expression_dotproduct<float, BC::binary_expression_scalar_R<float, BC::mul, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::CPU>, void>’:
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:21:7:   required from ‘class BC::TensorBase<BC::Matrix<BC::binary_expression_dotproduct<float, BC::binary_expression_scalar_R<float, BC::mul, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::CPU> >’
../UnitTests/../BC_Internals/BC_Core/Matrix.h:17:7:   required from ‘class BC::Matrix<BC::binary_expression_dotproduct<float, BC::binary_expression_scalar_R<float, BC::mul, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::CPU>’
../UnitTests/main.cpp:59:20:   required from here
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h:28:15: error: ‘BC::TensorInitializer<derived, expression_tensor>::black_cat_array’ has incomplete type
  functor_type black_cat_array;
               ^~~~~~~~~~~~~~~
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:12:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:29:41: note: declaration of ‘using functor_type = BC::_functor<BC::Matrix<BC::binary_expression_dotproduct<float, BC::binary_expression_scalar_R<float, BC::mul, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::CPU> > {aka class BC::binary_expression_dotproduct<float, BC::binary_expression_scalar_R<float, BC::mul, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>}’
 template<class,class,class,class> class binary_expression_dotproduct;
                                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:15:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h: In instantiation of ‘class BC::TensorInitializer<BC::Matrix<BC::binary_expression_scalar_L<float, BC::mul, BC::Tensor_Core<BC::Scalar<float, BC::CPU> >, BC::Tensor_Core<BC::Matrix<float> > >, BC::CPU>, void>’:
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:21:7:   required from ‘class BC::TensorBase<BC::Matrix<BC::binary_expression_scalar_L<float, BC::mul, BC::Tensor_Core<BC::Scalar<float, BC::CPU> >, BC::Tensor_Core<BC::Matrix<float> > >, BC::CPU> >’
../UnitTests/../BC_Internals/BC_Core/Matrix.h:17:7:   required from ‘class BC::Matrix<BC::binary_expression_scalar_L<float, BC::mul, BC::Tensor_Core<BC::Scalar<float, BC::CPU> >, BC::Tensor_Core<BC::Matrix<float> > >, BC::CPU>’
../UnitTests/main.cpp:62:16:   required from here
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h:28:15: error: ‘BC::TensorInitializer<derived, expression_tensor>::black_cat_array’ has incomplete type
  functor_type black_cat_array;
               ^~~~~~~~~~~~~~~
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:12:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:27:41: note: declaration of ‘using functor_type = BC::_functor<BC::Matrix<BC::binary_expression_scalar_L<float, BC::mul, BC::Tensor_Core<BC::Scalar<float, BC::CPU> >, BC::Tensor_Core<BC::Matrix<float> > >, BC::CPU> > {aka class BC::binary_expression_scalar_L<float, BC::mul, BC::Tensor_Core<BC::Scalar<float, BC::CPU> >, BC::Tensor_Core<BC::Matrix<float> > >}’
 template<class,class,class,class> class binary_expression_scalar_L;
                                         ^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:15:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h: In instantiation of ‘class BC::TensorInitializer<BC::Matrix<BC::binary_expression_dotproduct<float, BC::binary_expression_scalar_L<float, BC::mul, BC::Tensor_Core<BC::Scalar<float, BC::CPU> >, BC::Tensor_Core<BC::Matrix<float> > >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::CPU>, void>’:
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:21:7:   required from ‘class BC::TensorBase<BC::Matrix<BC::binary_expression_dotproduct<float, BC::binary_expression_scalar_L<float, BC::mul, BC::Tensor_Core<BC::Scalar<float, BC::CPU> >, BC::Tensor_Core<BC::Matrix<float> > >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::CPU> >’
../UnitTests/../BC_Internals/BC_Core/Matrix.h:17:7:   required from ‘class BC::Matrix<BC::binary_expression_dotproduct<float, BC::binary_expression_scalar_L<float, BC::mul, BC::Tensor_Core<BC::Scalar<float, BC::CPU> >, BC::Tensor_Core<BC::Matrix<float> > >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::CPU>’
../UnitTests/main.cpp:62:20:   required from here
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h:28:15: error: ‘BC::TensorInitializer<derived, expression_tensor>::black_cat_array’ has incomplete type
  functor_type black_cat_array;
               ^~~~~~~~~~~~~~~
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:12:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:29:41: note: declaration of ‘using functor_type = BC::_functor<BC::Matrix<BC::binary_expression_dotproduct<float, BC::binary_expression_scalar_L<float, BC::mul, BC::Tensor_Core<BC::Scalar<float, BC::CPU> >, BC::Tensor_Core<BC::Matrix<float> > >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::CPU> > {aka class BC::binary_expression_dotproduct<float, BC::binary_expression_scalar_L<float, BC::mul, BC::Tensor_Core<BC::Scalar<float, BC::CPU> >, BC::Tensor_Core<BC::Matrix<float> > >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>}’
 template<class,class,class,class> class binary_expression_dotproduct;
                                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:15:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h: In instantiation of ‘class BC::TensorInitializer<BC::Matrix<BC::binary_expression_scalar_R<float, BC::mul, BC::binary_expression_dotproduct<float, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >, BC::CPU>, void>’:
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:21:7:   required from ‘class BC::TensorBase<BC::Matrix<BC::binary_expression_scalar_R<float, BC::mul, BC::binary_expression_dotproduct<float, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >, BC::CPU> >’
../UnitTests/../BC_Internals/BC_Core/Matrix.h:17:7:   required from ‘class BC::Matrix<BC::binary_expression_scalar_R<float, BC::mul, BC::binary_expression_dotproduct<float, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >, BC::CPU>’
../UnitTests/main.cpp:64:20:   required from here
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h:28:15: error: ‘BC::TensorInitializer<derived, expression_tensor>::black_cat_array’ has incomplete type
  functor_type black_cat_array;
               ^~~~~~~~~~~~~~~
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:12:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:28:41: note: declaration of ‘using functor_type = BC::_functor<BC::Matrix<BC::binary_expression_scalar_R<float, BC::mul, BC::binary_expression_dotproduct<float, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >, BC::CPU> > {aka class BC::binary_expression_scalar_R<float, BC::mul, BC::binary_expression_dotproduct<float, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >}’
 template<class,class,class,class> class binary_expression_scalar_R;
                                         ^~~~~~~~~~~~~~~~~~~~~~~~~~
../UnitTests/main.cpp:76:8: error: ‘using mat = class BC::Matrix<float> {aka class BC::Matrix<float>}’ has no member named ‘t’
  c = a.t() * b.t();
        ^
../UnitTests/main.cpp:76:16: error: ‘using mat = class BC::Matrix<float> {aka class BC::Matrix<float>}’ has no member named ‘t’
  c = a.t() * b.t();
                ^
../UnitTests/main.cpp:80:8: error: ‘using mat = class BC::Matrix<float> {aka class BC::Matrix<float>}’ has no member named ‘t’
  c = a.t() * A * (b.t() * A);
        ^
../UnitTests/main.cpp:80:21: error: ‘using mat = class BC::Matrix<float> {aka class BC::Matrix<float>}’ has no member named ‘t’
  c = a.t() * A * (b.t() * A);
                     ^
../UnitTests/main.cpp:94:14: error: invalid operands of types ‘void’ and ‘void’ to binary ‘operator+’
  d[1] = d[1] + d[1];
         ~~~~~^~~~~~
../UnitTests/main.cpp:99:8: error: invalid types ‘void[int]’ for array subscript
  d[1][1] = d[1][1] + d[1][1];
        ^
../UnitTests/main.cpp:99:18: error: invalid types ‘void[int]’ for array subscript
  d[1][1] = d[1][1] + d[1][1];
                  ^
../UnitTests/main.cpp:99:28: error: invalid types ‘void[int]’ for array subscript
  d[1][1] = d[1][1] + d[1][1];
                            ^
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:13:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Utility.h: In instantiation of ‘void BC::Tensor_Utility<deriv, typename std::enable_if<(isPrim<typename BC::determine_functor< <template-parameter-1-1> >::fscal> || BC::MTF::isCore<typename BC::determine_functor< <template-parameter-1-1> >::type>::conditional), void>::type>::read(std::ifstream&, bool, bool) [with deriv = BC::Matrix<double>; typename std::enable_if<(isPrim<typename BC::determine_functor< <template-parameter-1-1> >::fscal> || BC::MTF::isCore<typename BC::determine_functor< <template-parameter-1-1> >::type>::conditional), void>::type = void; std::ifstream = std::basic_ifstream<char>]’:
../UnitTests/main.cpp:113:15:   required from here
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Utility.h:139:22: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
    for (int i = 0; i < dims.size(); ++i) {
                    ~~^~~~~~~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Utility.h:145:92: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
    MATHLIB::HostToDevice(asDerived().data().core(), &data[data[0] + 1], asDerived().size() > data.size() ? data.size() : asDerived().size());
                                                                                             
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:13:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Utility.h:147:86: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
    MATHLIB::HostToDevice(asDerived().data().core(), &data[0],     asDerived().size() > data.size() ? data.size() : asDerived().size());
                                                                                       
In file included from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:32:0,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_MathLibraries/Mathematics_CPU.h: In instantiation of ‘static void BC::CPU::copy(T&, const J&, int) [with T = BC::Tensor_Core<BC::Matrix<float> >; J = BC::binary_expression_dotproduct<float, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>]’:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:218:21:   required from ‘derived& BC::Tensor_Operations< <template-parameter-1-1> >::operator=(const BC::Tensor_Operations<param_deriv>&) [with pDeriv = BC::Matrix<BC::binary_expression_dotproduct<float, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::CPU>; derived = BC::Matrix<float>]’
../UnitTests/../BC_Internals/BC_Core/Matrix.h:45:83:   required from ‘BC::Matrix< <template-parameter-1-1>, ML>& BC::Matrix< <template-parameter-1-1>, ML>::operator=(const BC::Matrix<U, Mathlib>&) [with U = BC::binary_expression_dotproduct<float, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>; T = float; Mathlib = BC::CPU]’
../UnitTests/main.cpp:47:10:   required from here
../UnitTests/../BC_Internals/BC_MathLibraries/Mathematics_CPU.h:70:13: error: no match for ‘operator[]’ (operand types are ‘const BC::binary_expression_dotproduct<float, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>’ and ‘int’)
     t[i] = j[i];
            ~^
../UnitTests/../BC_Internals/BC_MathLibraries/Mathematics_CPU.h:76:12: error: no match for ‘operator[]’ (operand types are ‘const BC::binary_expression_dotproduct<float, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>’ and ‘int’)
    t[i] = j[i];
           ~^
../UnitTests/../BC_Internals/BC_MathLibraries/Mathematics_CPU.h: In instantiation of ‘static void BC::CPU::copy(T&, const J&, int) [with T = BC::Tensor_Core<BC::Matrix<float> >; J = BC::binary_expression_dotproduct<float, BC::binary_expression_scalar_R<float, BC::mul, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>]’:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:218:21:   required from ‘derived& BC::Tensor_Operations< <template-parameter-1-1> >::operator=(const BC::Tensor_Operations<param_deriv>&) [with pDeriv = BC::Matrix<BC::binary_expression_dotproduct<float, BC::binary_expression_scalar_R<float, BC::mul, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::CPU>; derived = BC::Matrix<float>]’
../UnitTests/../BC_Internals/BC_Core/Matrix.h:45:83:   required from ‘BC::Matrix< <template-parameter-1-1>, ML>& BC::Matrix< <template-parameter-1-1>, ML>::operator=(const BC::Matrix<U, Mathlib>&) [with U = BC::binary_expression_dotproduct<float, BC::binary_expression_scalar_R<float, BC::mul, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>; T = float; Mathlib = BC::CPU]’
../UnitTests/main.cpp:59:20:   required from here
../UnitTests/../BC_Internals/BC_MathLibraries/Mathematics_CPU.h:70:13: error: no match for ‘operator[]’ (operand types are ‘const BC::binary_expression_dotproduct<float, BC::binary_expression_scalar_R<float, BC::mul, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>’ and ‘int’)
     t[i] = j[i];
            ~^
../UnitTests/../BC_Internals/BC_MathLibraries/Mathematics_CPU.h:76:12: error: no match for ‘operator[]’ (operand types are ‘const BC::binary_expression_dotproduct<float, BC::binary_expression_scalar_R<float, BC::mul, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>’ and ‘int’)
    t[i] = j[i];
           ~^
../UnitTests/../BC_Internals/BC_MathLibraries/Mathematics_CPU.h: In instantiation of ‘static void BC::CPU::copy(T&, const J&, int) [with T = BC::Tensor_Core<BC::Matrix<float> >; J = BC::binary_expression_dotproduct<float, BC::binary_expression_scalar_L<float, BC::mul, BC::Tensor_Core<BC::Scalar<float, BC::CPU> >, BC::Tensor_Core<BC::Matrix<float> > >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>]’:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:218:21:   required from ‘derived& BC::Tensor_Operations< <template-parameter-1-1> >::operator=(const BC::Tensor_Operations<param_deriv>&) [with pDeriv = BC::Matrix<BC::binary_expression_dotproduct<float, BC::binary_expression_scalar_L<float, BC::mul, BC::Tensor_Core<BC::Scalar<float, BC::CPU> >, BC::Tensor_Core<BC::Matrix<float> > >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::CPU>; derived = BC::Matrix<float>]’
../UnitTests/../BC_Internals/BC_Core/Matrix.h:45:83:   required from ‘BC::Matrix< <template-parameter-1-1>, ML>& BC::Matrix< <template-parameter-1-1>, ML>::operator=(const BC::Matrix<U, Mathlib>&) [with U = BC::binary_expression_dotproduct<float, BC::binary_expression_scalar_L<float, BC::mul, BC::Tensor_Core<BC::Scalar<float, BC::CPU> >, BC::Tensor_Core<BC::Matrix<float> > >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>; T = float; Mathlib = BC::CPU]’
../UnitTests/main.cpp:62:20:   required from here
../UnitTests/../BC_Internals/BC_MathLibraries/Mathematics_CPU.h:70:13: error: no match for ‘operator[]’ (operand types are ‘const BC::binary_expression_dotproduct<float, BC::binary_expression_scalar_L<float, BC::mul, BC::Tensor_Core<BC::Scalar<float, BC::CPU> >, BC::Tensor_Core<BC::Matrix<float> > >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>’ and ‘int’)
     t[i] = j[i];
            ~^
../UnitTests/../BC_Internals/BC_MathLibraries/Mathematics_CPU.h:76:12: error: no match for ‘operator[]’ (operand types are ‘const BC::binary_expression_dotproduct<float, BC::binary_expression_scalar_L<float, BC::mul, BC::Tensor_Core<BC::Scalar<float, BC::CPU> >, BC::Tensor_Core<BC::Matrix<float> > >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>’ and ‘int’)
    t[i] = j[i];
           ~^
../UnitTests/../BC_Internals/BC_MathLibraries/Mathematics_CPU.h: In instantiation of ‘static void BC::CPU::copy(T&, const J&, int) [with T = BC::Tensor_Core<BC::Matrix<float> >; J = BC::binary_expression_scalar_R<float, BC::mul, BC::binary_expression_dotproduct<float, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >]’:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:218:21:   required from ‘derived& BC::Tensor_Operations< <template-parameter-1-1> >::operator=(const BC::Tensor_Operations<param_deriv>&) [with pDeriv = BC::Matrix<BC::binary_expression_scalar_R<float, BC::mul, BC::binary_expression_dotproduct<float, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >, BC::CPU>; derived = BC::Matrix<float>]’
../UnitTests/../BC_Internals/BC_Core/Matrix.h:45:83:   required from ‘BC::Matrix< <template-parameter-1-1>, ML>& BC::Matrix< <template-parameter-1-1>, ML>::operator=(const BC::Matrix<U, Mathlib>&) [with U = BC::binary_expression_scalar_R<float, BC::mul, BC::binary_expression_dotproduct<float, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >; T = float; Mathlib = BC::CPU]’
../UnitTests/main.cpp:64:20:   required from here
../UnitTests/../BC_Internals/BC_MathLibraries/Mathematics_CPU.h:70:13: error: no match for ‘operator[]’ (operand types are ‘const BC::binary_expression_scalar_R<float, BC::mul, BC::binary_expression_dotproduct<float, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >’ and ‘int’)
     t[i] = j[i];
            ~^
../UnitTests/../BC_Internals/BC_MathLibraries/Mathematics_CPU.h:76:12: error: no match for ‘operator[]’ (operand types are ‘const BC::binary_expression_scalar_R<float, BC::mul, BC::binary_expression_dotproduct<float, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >’ and ‘int’)
    t[i] = j[i];
           ~^
In file included from ../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Core_Slice.h:17:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Core.h:13,
                 from ../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h:12,
                 from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:15,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Core_Scalar.h: In instantiation of ‘BC::Tensor_Scalar<PARENT>::Tensor_Scalar(BC::Tensor_Scalar<PARENT>::scalar*, const PARENT&) [with PARENT = BC::Tensor_Core<BC::Matrix<float> >; BC::Tensor_Scalar<PARENT>::scalar = float]’:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h:33:63:   required from ‘BC::TensorInitializer<derived, expression_tensor>::TensorInitializer(const params& ...) [with params = {float*, BC::Tensor_Core<BC::Matrix<float, BC::CPU> >}; derived = BC::Scalar<BC::Tensor_Scalar<BC::Tensor_Core<BC::Matrix<float> > >, BC::CPU>; expression_tensor = void]’
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:50:51:   required from ‘BC::TensorBase<derived>::TensorBase(const params& ...) [with params = {float*, BC::Tensor_Core<BC::Matrix<float, BC::CPU> >}; derived = BC::Scalar<BC::Tensor_Scalar<BC::Tensor_Core<BC::Matrix<float> > >, BC::CPU>]’
../UnitTests/../BC_Internals/BC_Core/Scalar.h:61:97:   required from ‘BC::Scalar< <template-parameter-1-1>, ML>::Scalar(const var1&, const var2&, const params& ...) [with var1 = float*; var2 = BC::Tensor_Core<BC::Matrix<float> >; params = {}; T = BC::Tensor_Scalar<BC::Tensor_Core<BC::Matrix<float> > >; Mathlib = BC::CPU]’
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:92:19:   required from ‘auto BC::TensorBase<derived>::getScalar(int) [with derived = BC::Matrix<float>]’
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:96:52:   required from ‘auto BC::TensorBase<derived>::operator()(int) [with derived = BC::Matrix<float>]’
../UnitTests/main.cpp:33:6:   required from here
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Core_Scalar.h:36:10: warning: ‘BC::Tensor_Scalar<BC::Tensor_Core<BC::Matrix<float> > >::array_slice’ will be initialized after [-Wreorder]
  scalar* array_slice;
          ^~~~~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Core_Scalar.h:35:16: warning:   ‘const BC::Tensor_Core<BC::Matrix<float> >& BC::Tensor_Scalar<BC::Tensor_Core<BC::Matrix<float> > >::parent’ [-Wreorder]
  const PARENT& parent;
                ^~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Core_Scalar.h:41:2: warning:   when initialized here [-Wreorder]
  Tensor_Scalar(scalar* array, const PARENT& parent_) : array_slice(array), parent(parent_) {}
  ^~~~~~~~~~~~~
In file included from ../UnitTests/../BC_Internals/BC_MathLibraries/Mathematics_CPU.h:15:0,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:32,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_MathLibraries/BC_PrintFunctions.h: In instantiation of ‘void BC::printHelper(const T&, int_ranks, int, std::__cxx11::string, int) [with T = const float*; int_ranks = int*; std::__cxx11::string = std::__cxx11::basic_string<char>]’:
../UnitTests/../BC_Internals/BC_MathLibraries/BC_PrintFunctions.h:102:13:   required from ‘void BC::print(const T&, RANKS, int, int) [with T = const float*; RANKS = int*]’
../UnitTests/../BC_Internals/BC_MathLibraries/Mathematics_CPU.h:98:12:   required from ‘static void BC::CPU::print(T, RANKS, int, int) [with T = const float*; RANKS = int*]’
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Utility.h:82:17:   required from ‘void BC::Tensor_Utility<deriv, typename std::enable_if<(isPrim<typename BC::determine_functor< <template-parameter-1-1> >::fscal> || BC::MTF::isCore<typename BC::determine_functor< <template-parameter-1-1> >::type>::conditional), void>::type>::print() const [with deriv = BC::Matrix<float>; typename std::enable_if<(isPrim<typename BC::determine_functor< <template-parameter-1-1> >::fscal> || BC::MTF::isCore<typename BC::determine_functor< <template-parameter-1-1> >::type>::conditional), void>::type = void]’
../UnitTests/main.cpp:37:10:   required from here
../UnitTests/../BC_Internals/BC_MathLibraries/BC_PrintFunctions.h:43:38: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
     str = str.substr(0, str.length() < printSpace ? str.length() : printSpace);
                                       
../UnitTests/../BC_Internals/BC_MathLibraries/BC_PrintFunctions.h:46:22: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
     if (str.length() < printSpace)
                       
../UnitTests/../BC_Internals/BC_MathLibraries/BC_PrintFunctions.h:67:37: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
    str = str.substr(0, str.length() < printSpace ? str.length() : printSpace);
                                      
../UnitTests/../BC_Internals/BC_MathLibraries/BC_PrintFunctions.h:70:21: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
    if (str.length() < printSpace)
                      
../UnitTests/../BC_Internals/BC_MathLibraries/BC_PrintFunctions.h: In instantiation of ‘void BC::printHelper(const T&, int_ranks, int, std::__cxx11::string, int) [with T = const double*; int_ranks = int*; std::__cxx11::string = std::__cxx11::basic_string<char>]’:
../UnitTests/../BC_Internals/BC_MathLibraries/BC_PrintFunctions.h:102:13:   required from ‘void BC::print(const T&, RANKS, int, int) [with T = const double*; RANKS = int*]’
../UnitTests/../BC_Internals/BC_MathLibraries/Mathematics_CPU.h:98:12:   required from ‘static void BC::CPU::print(T, RANKS, int, int) [with T = const double*; RANKS = int*]’
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Utility.h:82:17:   required from ‘void BC::Tensor_Utility<deriv, typename std::enable_if<(isPrim<typename BC::determine_functor< <template-parameter-1-1> >::fscal> || BC::MTF::isCore<typename BC::determine_functor< <template-parameter-1-1> >::type>::conditional), void>::type>::print() const [with deriv = BC::Matrix<double>; typename std::enable_if<(isPrim<typename BC::determine_functor< <template-parameter-1-1> >::fscal> || BC::MTF::isCore<typename BC::determine_functor< <template-parameter-1-1> >::type>::conditional), void>::type = void]’
../UnitTests/main.cpp:114:14:   required from here
../UnitTests/../BC_Internals/BC_MathLibraries/BC_PrintFunctions.h:43:38: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
     str = str.substr(0, str.length() < printSpace ? str.length() : printSpace);
                                       
../UnitTests/../BC_Internals/BC_MathLibraries/BC_PrintFunctions.h:46:22: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
     if (str.length() < printSpace)
                       
../UnitTests/../BC_Internals/BC_MathLibraries/BC_PrintFunctions.h:67:37: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
    str = str.substr(0, str.length() < printSpace ? str.length() : printSpace);
                                      
../UnitTests/../BC_Internals/BC_MathLibraries/BC_PrintFunctions.h:70:21: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
    if (str.length() < printSpace)
                      
make: *** [UnitTests/main.o] Error 1
UnitTests/subdir.mk:18: recipe for target 'UnitTests/main.o' failed
17:14:14 **** Incremental Build of configuration Debug for project BlackCat_LibraryCPU ****
make all 
Building file: ../UnitTests/main.cpp
Invoking: GCC C++ Compiler
g++ -O0 -g3 -Wall -c -fmessage-length=0 -MMD -MP -MF"UnitTests/main.d" -MT"UnitTests/main.o" -o "UnitTests/main.o" "../UnitTests/main.cpp"
In file included from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:32:0,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_MathLibraries/Mathematics_CPU.h:74:0: warning: ignoring #pragma omp parallel [-Wunknown-pragmas]
 #pragma omp parallel for
 
../UnitTests/../BC_Internals/BC_MathLibraries/Mathematics_CPU.h:78:0: warning: ignoring #pragma omp barrier [-Wunknown-pragmas]
 #pragma omp barrier
 
../UnitTests/../BC_Internals/BC_MathLibraries/Mathematics_CPU.h:88:0: warning: ignoring #pragma omp parallel [-Wunknown-pragmas]
 #pragma omp parallel for
 
../UnitTests/../BC_Internals/BC_MathLibraries/Mathematics_CPU.h:92:0: warning: ignoring #pragma omp barrier [-Wunknown-pragmas]
 #pragma omp barrier
 
In file included from ../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Core_Slice.h:17:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Core.h:13,
                 from ../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h:12,
                 from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:15,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Core_Scalar.h:22:0: warning: "__BCinline__" redefined
 #define __BCinline__
 
In file included from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:29:0,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Expressions/BlackCat_Internal_Definitions.h:25:0: note: this is the location of the previous definition
 #define __BCinline__ __BC_gcpu__ __attribute__((always_inline))
 
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:13:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Utility.h:35:47: error: expected ‘;’ before ‘<’ token
  using t1= typename MTF::shell_of<deriv>::type<d, ml>>;
                                               ^
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Utility.h:37:20: error: ‘t1’ does not name a type
  using eval_type = t1<_scalar<deriv>, _mathlib<deriv>>;
                    ^~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Utility.h: In member function ‘auto BC::Tensor_Utility<deriv, <template-parameter-1-2> >::eval() const’:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Utility.h:41:45: error: expected ‘(’ before ‘<’ token
   return typename MTF::shell_of<deriv>::type<_scalar<deriv>, _mathlib<deriv>>(this->asDerived());
                                             ^
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Utility.h:41:60: error: expected primary-expression before ‘,’ token
   return typename MTF::shell_of<deriv>::type<_scalar<deriv>, _mathlib<deriv>>(this->asDerived());
                                                            ^
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Utility.h:41:76: error: expected primary-expression before ‘>’ token
   return typename MTF::shell_of<deriv>::type<_scalar<deriv>, _mathlib<deriv>>(this->asDerived());
                                                                            ^~
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:15:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h: At global scope:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h:74:54: error: expected ‘;’ before ‘<’ token
  using derived_alt = typename shell_of<derived>::type<T, Mathlib>;
                                                      ^
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h:77:26: error: ‘derived_alt’ does not name a type
  TensorInitializer(const derived_alt<U>&  tensor) : black_cat_array(tensor.innerShape()) {
                          ^~~~~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h:77:37: error: expected ‘,’ or ‘...’ before ‘<’ token
  TensorInitializer(const derived_alt<U>&  tensor) : black_cat_array(tensor.innerShape()) {
                                     ^
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h: In constructor ‘BC::TensorInitializer<_tensor<t, ml>, typename std::enable_if<BC::MTF::isCorePure<t>::conditional, void>::type>::TensorInitializer(int)’:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h:77:69: error: ‘tensor’ was not declared in this scope
  TensorInitializer(const derived_alt<U>&  tensor) : black_cat_array(tensor.innerShape()) {
                                                                     ^~~~~~
In file included from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10:0,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/TensorBase.h: At global scope:
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:38:71: error: expected ‘;’ before ‘<’ token
  template<class    U> using deriv   = typename shell_of<derived>::type<U, Mathlib>;
                                                                       ^
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:39:76: error: expected ‘;’ before ‘<’ token
  template<class... U> using functor = typename shell_of<functor_type>::type<U...>;
                                                                            ^
../UnitTests/../BC_Internals/BC_Core/TensorBase.h: In member function ‘auto BC::TensorBase<derived>::operator[](int)’:
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:83:68: error: expected ‘(’ before ‘<’ token
     auto operator [] (int i)    { return typename base<RANK>::slice<decltype(slice(0)), Mathlib>(slice(i)); }
                                                                    ^
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:83:69: error: expected primary-expression before ‘decltype’
     auto operator [] (int i)    { return typename base<RANK>::slice<decltype(slice(0)), Mathlib>(slice(i)); }
                                                                     ^~~~~~~~
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:83:69: error: expected ‘;’ before ‘decltype’
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:83:87: error: expected unqualified-id before ‘,’ token
     auto operator [] (int i)    { return typename base<RANK>::slice<decltype(slice(0)), Mathlib>(slice(i)); }
                                                                                       ^
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:83:96: error: expected initializer before ‘>’ token
     auto operator [] (int i)    { return typename base<RANK>::slice<decltype(slice(0)), Mathlib>(slice(i)); }
                                                                                                ^
../UnitTests/../BC_Internals/BC_Core/TensorBase.h: In member function ‘const auto BC::TensorBase<derived>::operator[](int) const’:
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:84:74: error: expected ‘(’ before ‘<’ token
  const auto operator [] (int i) const { return typename base<RANK>::slice<decltype(slice(0)), Mathlib>(slice(i)); }
                                                                          ^
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:84:75: error: expected primary-expression before ‘decltype’
  const auto operator [] (int i) const { return typename base<RANK>::slice<decltype(slice(0)), Mathlib>(slice(i)); }
                                                                           ^~~~~~~~
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:84:75: error: expected ‘;’ before ‘decltype’
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:84:93: error: expected unqualified-id before ‘,’ token
  const auto operator [] (int i) const { return typename base<RANK>::slice<decltype(slice(0)), Mathlib>(slice(i)); }
                                                                                             ^
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:84:102: error: expected initializer before ‘>’ token
  const auto operator [] (int i) const { return typename base<RANK>::slice<decltype(slice(0)), Mathlib>(slice(i)); }
                                                                                                      ^
In file included from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:50:0,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Vector.h: At global scope:
../UnitTests/../BC_Internals/BC_Core/Vector.h:45:15: error: ‘unary_expression_transpose’ was not declared in this scope
  const Vector<unary_expression_transpose<typename MTF::determine_scalar<T>::type, typename parent_class::functor_type>, Mathlib> t() const {
               ^~~~~~~~~~~~~~~~~~~~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Vector.h:45:118: error: template argument 1 is invalid
  const Vector<unary_expression_transpose<typename MTF::determine_scalar<T>::type, typename parent_class::functor_type>, Mathlib> t() const {
                                                                                                                      ^
../UnitTests/../BC_Internals/BC_Core/Vector.h:45:119: error: expected unqualified-id before ‘,’ token
  const Vector<unary_expression_transpose<typename MTF::determine_scalar<T>::type, typename parent_class::functor_type>, Mathlib> t() const {
                                                                                                                       ^
In file included from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:51:0,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Matrix.h:47:15: error: ‘unary_expression_transpose’ was not declared in this scope
  const Matrix<unary_expression_transpose<typename MTF::determine_scalar<T>::type, typename parent_class::functor_type>, Mathlib> t() const {
               ^~~~~~~~~~~~~~~~~~~~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Matrix.h:47:118: error: template argument 1 is invalid
  const Matrix<unary_expression_transpose<typename MTF::determine_scalar<T>::type, typename parent_class::functor_type>, Mathlib> t() const {
                                                                                                                      ^
../UnitTests/../BC_Internals/BC_Core/Matrix.h:47:119: error: expected unqualified-id before ‘,’ token
  const Matrix<unary_expression_transpose<typename MTF::determine_scalar<T>::type, typename parent_class::functor_type>, Mathlib> t() const {
                                                                                                                       ^
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:15:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h: In instantiation of ‘class BC::TensorInitializer<BC::Vector<BC::binary_expression<float, BC::mul, BC::Tensor_Core<BC::Vector<float> >, BC::Tensor_Core<BC::Vector<float> > >, BC::CPU>, void>’:
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:21:7:   required from ‘class BC::TensorBase<BC::Vector<BC::binary_expression<float, BC::mul, BC::Tensor_Core<BC::Vector<float> >, BC::Tensor_Core<BC::Vector<float> > >, BC::CPU> >’
../UnitTests/../BC_Internals/BC_Core/Vector.h:17:7:   required from ‘class BC::Vector<BC::binary_expression<float, BC::mul, BC::Tensor_Core<BC::Vector<float> >, BC::Tensor_Core<BC::Vector<float> > >, BC::CPU>’
../UnitTests/SpeedTests.h:43:19:   required from here
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h:28:15: error: ‘BC::TensorInitializer<derived, expression_tensor>::black_cat_array’ has incomplete type
  functor_type black_cat_array;
               ^~~~~~~~~~~~~~~
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:12:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:26:41: note: declaration of ‘using functor_type = BC::_functor<BC::Vector<BC::binary_expression<float, BC::mul, BC::Tensor_Core<BC::Vector<float> >, BC::Tensor_Core<BC::Vector<float> > >, BC::CPU> > {aka class BC::binary_expression<float, BC::mul, BC::Tensor_Core<BC::Vector<float> >, BC::Tensor_Core<BC::Vector<float> > >}’
 template<class,class,class,class> class binary_expression;
                                         ^~~~~~~~~~~~~~~~~
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:15:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h: In instantiation of ‘class BC::TensorInitializer<BC::Vector<BC::binary_expression<float, BC::assign, BC::Tensor_Core<BC::Vector<float> >, BC::binary_expression<float, BC::mul, BC::Tensor_Core<BC::Vector<float> >, BC::Tensor_Core<BC::Vector<float> > > >, BC::CPU>, void>’:
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:21:7:   required from ‘class BC::TensorBase<BC::Vector<BC::binary_expression<float, BC::assign, BC::Tensor_Core<BC::Vector<float> >, BC::binary_expression<float, BC::mul, BC::Tensor_Core<BC::Vector<float> >, BC::Tensor_Core<BC::Vector<float> > > >, BC::CPU> >’
../UnitTests/../BC_Internals/BC_Core/Vector.h:17:7:   required from ‘class BC::Vector<BC::binary_expression<float, BC::assign, BC::Tensor_Core<BC::Vector<float> >, BC::binary_expression<float, BC::mul, BC::Tensor_Core<BC::Vector<float> >, BC::Tensor_Core<BC::Vector<float> > > >, BC::CPU>’
../UnitTests/SpeedTests.h:43:24:   required from here
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h:28:15: error: ‘BC::TensorInitializer<derived, expression_tensor>::black_cat_array’ has incomplete type
  functor_type black_cat_array;
               ^~~~~~~~~~~~~~~
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:12:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:26:41: note: declaration of ‘using functor_type = BC::_functor<BC::Vector<BC::binary_expression<float, BC::assign, BC::Tensor_Core<BC::Vector<float> >, BC::binary_expression<float, BC::mul, BC::Tensor_Core<BC::Vector<float> >, BC::Tensor_Core<BC::Vector<float> > > >, BC::CPU> > {aka class BC::binary_expression<float, BC::assign, BC::Tensor_Core<BC::Vector<float> >, BC::binary_expression<float, BC::mul, BC::Tensor_Core<BC::Vector<float> >, BC::Tensor_Core<BC::Vector<float> > > >}’
 template<class,class,class,class> class binary_expression;
                                         ^~~~~~~~~~~~~~~~~
In file included from ../UnitTests/main.cpp:4:0:
../UnitTests/SpeedTests.h: In function ‘int speedTestsScalarIteration()’:
../UnitTests/SpeedTests.h:136:9: error: ‘using mat = class BC::Matrix<float> {aka class BC::Matrix<float>}’ has no member named ‘t’
   c = a.t() * b;
         ^
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:15:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h: In instantiation of ‘class BC::TensorInitializer<BC::Matrix<BC::binary_expression<float, BC::add, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> > >, BC::CPU>, void>’:
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:21:7:   required from ‘class BC::TensorBase<BC::Matrix<BC::binary_expression<float, BC::add, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> > >, BC::CPU> >’
../UnitTests/../BC_Internals/BC_Core/Matrix.h:17:7:   required from ‘class BC::Matrix<BC::binary_expression<float, BC::add, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> > >, BC::CPU>’
../UnitTests/SpeedTests.h:146:23:   required from here
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h:28:15: error: ‘BC::TensorInitializer<derived, expression_tensor>::black_cat_array’ has incomplete type
  functor_type black_cat_array;
               ^~~~~~~~~~~~~~~
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:12:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:26:41: note: declaration of ‘using functor_type = BC::_functor<BC::Matrix<BC::binary_expression<float, BC::add, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> > >, BC::CPU> > {aka class BC::binary_expression<float, BC::add, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> > >}’
 template<class,class,class,class> class binary_expression;
                                         ^~~~~~~~~~~~~~~~~
../UnitTests/main.cpp: In function ‘auto test()’:
../UnitTests/main.cpp:40:8: error: ‘using mat = class BC::Matrix<float> {aka class BC::Matrix<float>}’ has no member named ‘t’
  d = a.t();
        ^
../UnitTests/main.cpp:41:8: error: ‘using mat = class BC::Matrix<float> {aka class BC::Matrix<float>}’ has no member named ‘t’
  e = b.t();
        ^
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:15:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h: In instantiation of ‘class BC::TensorInitializer<BC::Matrix<BC::binary_expression_dotproduct<float, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::CPU>, void>’:
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:21:7:   required from ‘class BC::TensorBase<BC::Matrix<BC::binary_expression_dotproduct<float, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::CPU> >’
../UnitTests/../BC_Internals/BC_Core/Matrix.h:17:7:   required from ‘class BC::Matrix<BC::binary_expression_dotproduct<float, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::CPU>’
../UnitTests/main.cpp:47:10:   required from here
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h:28:15: error: ‘BC::TensorInitializer<derived, expression_tensor>::black_cat_array’ has incomplete type
  functor_type black_cat_array;
               ^~~~~~~~~~~~~~~
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:12:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:29:41: note: declaration of ‘using functor_type = BC::_functor<BC::Matrix<BC::binary_expression_dotproduct<float, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::CPU> > {aka class BC::binary_expression_dotproduct<float, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>}’
 template<class,class,class,class> class binary_expression_dotproduct;
                                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
../UnitTests/main.cpp:50:8: error: ‘using mat = class BC::Matrix<float> {aka class BC::Matrix<float>}’ has no member named ‘t’
  c = a.t() * b.t();
        ^
../UnitTests/main.cpp:50:16: error: ‘using mat = class BC::Matrix<float> {aka class BC::Matrix<float>}’ has no member named ‘t’
  c = a.t() * b.t();
                ^
../UnitTests/main.cpp:53:8: error: ‘using mat = class BC::Matrix<float> {aka class BC::Matrix<float>}’ has no member named ‘t’
  c = a.t() * e;
        ^
../UnitTests/main.cpp:56:12: error: ‘using mat = class BC::Matrix<float> {aka class BC::Matrix<float>}’ has no member named ‘t’
  c = d * b.t();
            ^
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:15:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h: In instantiation of ‘class BC::TensorInitializer<BC::Matrix<BC::binary_expression_scalar_R<float, BC::mul, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >, BC::CPU>, void>’:
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:21:7:   required from ‘class BC::TensorBase<BC::Matrix<BC::binary_expression_scalar_R<float, BC::mul, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >, BC::CPU> >’
../UnitTests/../BC_Internals/BC_Core/Matrix.h:17:7:   required from ‘class BC::Matrix<BC::binary_expression_scalar_R<float, BC::mul, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >, BC::CPU>’
../UnitTests/main.cpp:59:16:   required from here
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h:28:15: error: ‘BC::TensorInitializer<derived, expression_tensor>::black_cat_array’ has incomplete type
  functor_type black_cat_array;
               ^~~~~~~~~~~~~~~
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:12:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:28:41: note: declaration of ‘using functor_type = BC::_functor<BC::Matrix<BC::binary_expression_scalar_R<float, BC::mul, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >, BC::CPU> > {aka class BC::binary_expression_scalar_R<float, BC::mul, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >}’
 template<class,class,class,class> class binary_expression_scalar_R;
                                         ^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:15:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h: In instantiation of ‘class BC::TensorInitializer<BC::Matrix<BC::binary_expression_dotproduct<float, BC::binary_expression_scalar_R<float, BC::mul, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::CPU>, void>’:
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:21:7:   required from ‘class BC::TensorBase<BC::Matrix<BC::binary_expression_dotproduct<float, BC::binary_expression_scalar_R<float, BC::mul, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::CPU> >’
../UnitTests/../BC_Internals/BC_Core/Matrix.h:17:7:   required from ‘class BC::Matrix<BC::binary_expression_dotproduct<float, BC::binary_expression_scalar_R<float, BC::mul, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::CPU>’
../UnitTests/main.cpp:59:20:   required from here
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h:28:15: error: ‘BC::TensorInitializer<derived, expression_tensor>::black_cat_array’ has incomplete type
  functor_type black_cat_array;
               ^~~~~~~~~~~~~~~
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:12:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:29:41: note: declaration of ‘using functor_type = BC::_functor<BC::Matrix<BC::binary_expression_dotproduct<float, BC::binary_expression_scalar_R<float, BC::mul, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::CPU> > {aka class BC::binary_expression_dotproduct<float, BC::binary_expression_scalar_R<float, BC::mul, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>}’
 template<class,class,class,class> class binary_expression_dotproduct;
                                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:15:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h: In instantiation of ‘class BC::TensorInitializer<BC::Matrix<BC::binary_expression_scalar_L<float, BC::mul, BC::Tensor_Core<BC::Scalar<float, BC::CPU> >, BC::Tensor_Core<BC::Matrix<float> > >, BC::CPU>, void>’:
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:21:7:   required from ‘class BC::TensorBase<BC::Matrix<BC::binary_expression_scalar_L<float, BC::mul, BC::Tensor_Core<BC::Scalar<float, BC::CPU> >, BC::Tensor_Core<BC::Matrix<float> > >, BC::CPU> >’
../UnitTests/../BC_Internals/BC_Core/Matrix.h:17:7:   required from ‘class BC::Matrix<BC::binary_expression_scalar_L<float, BC::mul, BC::Tensor_Core<BC::Scalar<float, BC::CPU> >, BC::Tensor_Core<BC::Matrix<float> > >, BC::CPU>’
../UnitTests/main.cpp:62:16:   required from here
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h:28:15: error: ‘BC::TensorInitializer<derived, expression_tensor>::black_cat_array’ has incomplete type
  functor_type black_cat_array;
               ^~~~~~~~~~~~~~~
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:12:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:27:41: note: declaration of ‘using functor_type = BC::_functor<BC::Matrix<BC::binary_expression_scalar_L<float, BC::mul, BC::Tensor_Core<BC::Scalar<float, BC::CPU> >, BC::Tensor_Core<BC::Matrix<float> > >, BC::CPU> > {aka class BC::binary_expression_scalar_L<float, BC::mul, BC::Tensor_Core<BC::Scalar<float, BC::CPU> >, BC::Tensor_Core<BC::Matrix<float> > >}’
 template<class,class,class,class> class binary_expression_scalar_L;
                                         ^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:15:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h: In instantiation of ‘class BC::TensorInitializer<BC::Matrix<BC::binary_expression_dotproduct<float, BC::binary_expression_scalar_L<float, BC::mul, BC::Tensor_Core<BC::Scalar<float, BC::CPU> >, BC::Tensor_Core<BC::Matrix<float> > >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::CPU>, void>’:
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:21:7:   required from ‘class BC::TensorBase<BC::Matrix<BC::binary_expression_dotproduct<float, BC::binary_expression_scalar_L<float, BC::mul, BC::Tensor_Core<BC::Scalar<float, BC::CPU> >, BC::Tensor_Core<BC::Matrix<float> > >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::CPU> >’
../UnitTests/../BC_Internals/BC_Core/Matrix.h:17:7:   required from ‘class BC::Matrix<BC::binary_expression_dotproduct<float, BC::binary_expression_scalar_L<float, BC::mul, BC::Tensor_Core<BC::Scalar<float, BC::CPU> >, BC::Tensor_Core<BC::Matrix<float> > >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::CPU>’
../UnitTests/main.cpp:62:20:   required from here
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h:28:15: error: ‘BC::TensorInitializer<derived, expression_tensor>::black_cat_array’ has incomplete type
  functor_type black_cat_array;
               ^~~~~~~~~~~~~~~
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:12:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:29:41: note: declaration of ‘using functor_type = BC::_functor<BC::Matrix<BC::binary_expression_dotproduct<float, BC::binary_expression_scalar_L<float, BC::mul, BC::Tensor_Core<BC::Scalar<float, BC::CPU> >, BC::Tensor_Core<BC::Matrix<float> > >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::CPU> > {aka class BC::binary_expression_dotproduct<float, BC::binary_expression_scalar_L<float, BC::mul, BC::Tensor_Core<BC::Scalar<float, BC::CPU> >, BC::Tensor_Core<BC::Matrix<float> > >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>}’
 template<class,class,class,class> class binary_expression_dotproduct;
                                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:15:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h: In instantiation of ‘class BC::TensorInitializer<BC::Matrix<BC::binary_expression_scalar_R<float, BC::mul, BC::binary_expression_dotproduct<float, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >, BC::CPU>, void>’:
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:21:7:   required from ‘class BC::TensorBase<BC::Matrix<BC::binary_expression_scalar_R<float, BC::mul, BC::binary_expression_dotproduct<float, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >, BC::CPU> >’
../UnitTests/../BC_Internals/BC_Core/Matrix.h:17:7:   required from ‘class BC::Matrix<BC::binary_expression_scalar_R<float, BC::mul, BC::binary_expression_dotproduct<float, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >, BC::CPU>’
../UnitTests/main.cpp:64:20:   required from here
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h:28:15: error: ‘BC::TensorInitializer<derived, expression_tensor>::black_cat_array’ has incomplete type
  functor_type black_cat_array;
               ^~~~~~~~~~~~~~~
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:12:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:28:41: note: declaration of ‘using functor_type = BC::_functor<BC::Matrix<BC::binary_expression_scalar_R<float, BC::mul, BC::binary_expression_dotproduct<float, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >, BC::CPU> > {aka class BC::binary_expression_scalar_R<float, BC::mul, BC::binary_expression_dotproduct<float, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >}’
 template<class,class,class,class> class binary_expression_scalar_R;
                                         ^~~~~~~~~~~~~~~~~~~~~~~~~~
../UnitTests/main.cpp:76:8: error: ‘using mat = class BC::Matrix<float> {aka class BC::Matrix<float>}’ has no member named ‘t’
  c = a.t() * b.t();
        ^
../UnitTests/main.cpp:76:16: error: ‘using mat = class BC::Matrix<float> {aka class BC::Matrix<float>}’ has no member named ‘t’
  c = a.t() * b.t();
                ^
../UnitTests/main.cpp:80:8: error: ‘using mat = class BC::Matrix<float> {aka class BC::Matrix<float>}’ has no member named ‘t’
  c = a.t() * A * (b.t() * A);
        ^
../UnitTests/main.cpp:80:21: error: ‘using mat = class BC::Matrix<float> {aka class BC::Matrix<float>}’ has no member named ‘t’
  c = a.t() * A * (b.t() * A);
                     ^
../UnitTests/main.cpp:94:14: error: invalid operands of types ‘void’ and ‘void’ to binary ‘operator+’
  d[1] = d[1] + d[1];
         ~~~~~^~~~~~
../UnitTests/main.cpp:99:8: error: invalid types ‘void[int]’ for array subscript
  d[1][1] = d[1][1] + d[1][1];
        ^
../UnitTests/main.cpp:99:18: error: invalid types ‘void[int]’ for array subscript
  d[1][1] = d[1][1] + d[1][1];
                  ^
../UnitTests/main.cpp:99:28: error: invalid types ‘void[int]’ for array subscript
  d[1][1] = d[1][1] + d[1][1];
                            ^
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:13:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Utility.h: In instantiation of ‘void BC::Tensor_Utility<deriv, typename std::enable_if<(isPrim<typename BC::determine_functor< <template-parameter-1-1> >::fscal> || BC::MTF::isCore<typename BC::determine_functor< <template-parameter-1-1> >::type>::conditional), void>::type>::read(std::ifstream&, bool, bool) [with deriv = BC::Matrix<double>; typename std::enable_if<(isPrim<typename BC::determine_functor< <template-parameter-1-1> >::fscal> || BC::MTF::isCore<typename BC::determine_functor< <template-parameter-1-1> >::type>::conditional), void>::type = void; std::ifstream = std::basic_ifstream<char>]’:
../UnitTests/main.cpp:113:15:   required from here
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Utility.h:139:22: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
    for (int i = 0; i < dims.size(); ++i) {
                    ~~^~~~~~~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Utility.h:145:92: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
    MATHLIB::HostToDevice(asDerived().data().core(), &data[data[0] + 1], asDerived().size() > data.size() ? data.size() : asDerived().size());
                                                                                             
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:13:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Utility.h:147:86: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
    MATHLIB::HostToDevice(asDerived().data().core(), &data[0],     asDerived().size() > data.size() ? data.size() : asDerived().size());
                                                                                       
In file included from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:32:0,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_MathLibraries/Mathematics_CPU.h: In instantiation of ‘static void BC::CPU::copy(T&, const J&, int) [with T = BC::Tensor_Core<BC::Matrix<float> >; J = BC::binary_expression_dotproduct<float, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>]’:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:218:21:   required from ‘derived& BC::Tensor_Operations< <template-parameter-1-1> >::operator=(const BC::Tensor_Operations<param_deriv>&) [with pDeriv = BC::Matrix<BC::binary_expression_dotproduct<float, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::CPU>; derived = BC::Matrix<float>]’
../UnitTests/../BC_Internals/BC_Core/Matrix.h:45:83:   required from ‘BC::Matrix< <template-parameter-1-1>, ML>& BC::Matrix< <template-parameter-1-1>, ML>::operator=(const BC::Matrix<U, Mathlib>&) [with U = BC::binary_expression_dotproduct<float, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>; T = float; Mathlib = BC::CPU]’
../UnitTests/main.cpp:47:10:   required from here
../UnitTests/../BC_Internals/BC_MathLibraries/Mathematics_CPU.h:70:13: error: no match for ‘operator[]’ (operand types are ‘const BC::binary_expression_dotproduct<float, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>’ and ‘int’)
     t[i] = j[i];
            ~^
../UnitTests/../BC_Internals/BC_MathLibraries/Mathematics_CPU.h:76:12: error: no match for ‘operator[]’ (operand types are ‘const BC::binary_expression_dotproduct<float, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>’ and ‘int’)
    t[i] = j[i];
           ~^
../UnitTests/../BC_Internals/BC_MathLibraries/Mathematics_CPU.h: In instantiation of ‘static void BC::CPU::copy(T&, const J&, int) [with T = BC::Tensor_Core<BC::Matrix<float> >; J = BC::binary_expression_dotproduct<float, BC::binary_expression_scalar_R<float, BC::mul, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>]’:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:218:21:   required from ‘derived& BC::Tensor_Operations< <template-parameter-1-1> >::operator=(const BC::Tensor_Operations<param_deriv>&) [with pDeriv = BC::Matrix<BC::binary_expression_dotproduct<float, BC::binary_expression_scalar_R<float, BC::mul, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::CPU>; derived = BC::Matrix<float>]’
../UnitTests/../BC_Internals/BC_Core/Matrix.h:45:83:   required from ‘BC::Matrix< <template-parameter-1-1>, ML>& BC::Matrix< <template-parameter-1-1>, ML>::operator=(const BC::Matrix<U, Mathlib>&) [with U = BC::binary_expression_dotproduct<float, BC::binary_expression_scalar_R<float, BC::mul, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>; T = float; Mathlib = BC::CPU]’
../UnitTests/main.cpp:59:20:   required from here
../UnitTests/../BC_Internals/BC_MathLibraries/Mathematics_CPU.h:70:13: error: no match for ‘operator[]’ (operand types are ‘const BC::binary_expression_dotproduct<float, BC::binary_expression_scalar_R<float, BC::mul, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>’ and ‘int’)
     t[i] = j[i];
            ~^
../UnitTests/../BC_Internals/BC_MathLibraries/Mathematics_CPU.h:76:12: error: no match for ‘operator[]’ (operand types are ‘const BC::binary_expression_dotproduct<float, BC::binary_expression_scalar_R<float, BC::mul, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>’ and ‘int’)
    t[i] = j[i];
           ~^
../UnitTests/../BC_Internals/BC_MathLibraries/Mathematics_CPU.h: In instantiation of ‘static void BC::CPU::copy(T&, const J&, int) [with T = BC::Tensor_Core<BC::Matrix<float> >; J = BC::binary_expression_dotproduct<float, BC::binary_expression_scalar_L<float, BC::mul, BC::Tensor_Core<BC::Scalar<float, BC::CPU> >, BC::Tensor_Core<BC::Matrix<float> > >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>]’:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:218:21:   required from ‘derived& BC::Tensor_Operations< <template-parameter-1-1> >::operator=(const BC::Tensor_Operations<param_deriv>&) [with pDeriv = BC::Matrix<BC::binary_expression_dotproduct<float, BC::binary_expression_scalar_L<float, BC::mul, BC::Tensor_Core<BC::Scalar<float, BC::CPU> >, BC::Tensor_Core<BC::Matrix<float> > >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::CPU>; derived = BC::Matrix<float>]’
../UnitTests/../BC_Internals/BC_Core/Matrix.h:45:83:   required from ‘BC::Matrix< <template-parameter-1-1>, ML>& BC::Matrix< <template-parameter-1-1>, ML>::operator=(const BC::Matrix<U, Mathlib>&) [with U = BC::binary_expression_dotproduct<float, BC::binary_expression_scalar_L<float, BC::mul, BC::Tensor_Core<BC::Scalar<float, BC::CPU> >, BC::Tensor_Core<BC::Matrix<float> > >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>; T = float; Mathlib = BC::CPU]’
../UnitTests/main.cpp:62:20:   required from here
../UnitTests/../BC_Internals/BC_MathLibraries/Mathematics_CPU.h:70:13: error: no match for ‘operator[]’ (operand types are ‘const BC::binary_expression_dotproduct<float, BC::binary_expression_scalar_L<float, BC::mul, BC::Tensor_Core<BC::Scalar<float, BC::CPU> >, BC::Tensor_Core<BC::Matrix<float> > >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>’ and ‘int’)
     t[i] = j[i];
            ~^
../UnitTests/../BC_Internals/BC_MathLibraries/Mathematics_CPU.h:76:12: error: no match for ‘operator[]’ (operand types are ‘const BC::binary_expression_dotproduct<float, BC::binary_expression_scalar_L<float, BC::mul, BC::Tensor_Core<BC::Scalar<float, BC::CPU> >, BC::Tensor_Core<BC::Matrix<float> > >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>’ and ‘int’)
    t[i] = j[i];
           ~^
../UnitTests/../BC_Internals/BC_MathLibraries/Mathematics_CPU.h: In instantiation of ‘static void BC::CPU::copy(T&, const J&, int) [with T = BC::Tensor_Core<BC::Matrix<float> >; J = BC::binary_expression_scalar_R<float, BC::mul, BC::binary_expression_dotproduct<float, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >]’:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:218:21:   required from ‘derived& BC::Tensor_Operations< <template-parameter-1-1> >::operator=(const BC::Tensor_Operations<param_deriv>&) [with pDeriv = BC::Matrix<BC::binary_expression_scalar_R<float, BC::mul, BC::binary_expression_dotproduct<float, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >, BC::CPU>; derived = BC::Matrix<float>]’
../UnitTests/../BC_Internals/BC_Core/Matrix.h:45:83:   required from ‘BC::Matrix< <template-parameter-1-1>, ML>& BC::Matrix< <template-parameter-1-1>, ML>::operator=(const BC::Matrix<U, Mathlib>&) [with U = BC::binary_expression_scalar_R<float, BC::mul, BC::binary_expression_dotproduct<float, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >; T = float; Mathlib = BC::CPU]’
../UnitTests/main.cpp:64:20:   required from here
../UnitTests/../BC_Internals/BC_MathLibraries/Mathematics_CPU.h:70:13: error: no match for ‘operator[]’ (operand types are ‘const BC::binary_expression_scalar_R<float, BC::mul, BC::binary_expression_dotproduct<float, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >’ and ‘int’)
     t[i] = j[i];
            ~^
../UnitTests/../BC_Internals/BC_MathLibraries/Mathematics_CPU.h:76:12: error: no match for ‘operator[]’ (operand types are ‘const BC::binary_expression_scalar_R<float, BC::mul, BC::binary_expression_dotproduct<float, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >’ and ‘int’)
    t[i] = j[i];
           ~^
In file included from ../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Core_Slice.h:17:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Core.h:13,
                 from ../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h:12,
                 from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:15,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Core_Scalar.h: In instantiation of ‘BC::Tensor_Scalar<PARENT>::Tensor_Scalar(BC::Tensor_Scalar<PARENT>::scalar*, const PARENT&) [with PARENT = BC::Tensor_Core<BC::Matrix<float> >; BC::Tensor_Scalar<PARENT>::scalar = float]’:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h:33:63:   required from ‘BC::TensorInitializer<derived, expression_tensor>::TensorInitializer(const params& ...) [with params = {float*, BC::Tensor_Core<BC::Matrix<float, BC::CPU> >}; derived = BC::Scalar<BC::Tensor_Scalar<BC::Tensor_Core<BC::Matrix<float> > >, BC::CPU>; expression_tensor = void]’
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:50:51:   required from ‘BC::TensorBase<derived>::TensorBase(const params& ...) [with params = {float*, BC::Tensor_Core<BC::Matrix<float, BC::CPU> >}; derived = BC::Scalar<BC::Tensor_Scalar<BC::Tensor_Core<BC::Matrix<float> > >, BC::CPU>]’
../UnitTests/../BC_Internals/BC_Core/Scalar.h:61:97:   required from ‘BC::Scalar< <template-parameter-1-1>, ML>::Scalar(const var1&, const var2&, const params& ...) [with var1 = float*; var2 = BC::Tensor_Core<BC::Matrix<float> >; params = {}; T = BC::Tensor_Scalar<BC::Tensor_Core<BC::Matrix<float> > >; Mathlib = BC::CPU]’
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:92:19:   required from ‘auto BC::TensorBase<derived>::getScalar(int) [with derived = BC::Matrix<float>]’
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:96:52:   required from ‘auto BC::TensorBase<derived>::operator()(int) [with derived = BC::Matrix<float>]’
../UnitTests/main.cpp:33:6:   required from here
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Core_Scalar.h:36:10: warning: ‘BC::Tensor_Scalar<BC::Tensor_Core<BC::Matrix<float> > >::array_slice’ will be initialized after [-Wreorder]
  scalar* array_slice;
          ^~~~~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Core_Scalar.h:35:16: warning:   ‘const BC::Tensor_Core<BC::Matrix<float> >& BC::Tensor_Scalar<BC::Tensor_Core<BC::Matrix<float> > >::parent’ [-Wreorder]
  const PARENT& parent;
                ^~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Core_Scalar.h:41:2: warning:   when initialized here [-Wreorder]
  Tensor_Scalar(scalar* array, const PARENT& parent_) : array_slice(array), parent(parent_) {}
  ^~~~~~~~~~~~~
In file included from ../UnitTests/../BC_Internals/BC_MathLibraries/Mathematics_CPU.h:15:0,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:32,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_MathLibraries/BC_PrintFunctions.h: In instantiation of ‘void BC::printHelper(const T&, int_ranks, int, std::__cxx11::string, int) [with T = const float*; int_ranks = int*; std::__cxx11::string = std::__cxx11::basic_string<char>]’:
../UnitTests/../BC_Internals/BC_MathLibraries/BC_PrintFunctions.h:102:13:   required from ‘void BC::print(const T&, RANKS, int, int) [with T = const float*; RANKS = int*]’
../UnitTests/../BC_Internals/BC_MathLibraries/Mathematics_CPU.h:98:12:   required from ‘static void BC::CPU::print(T, RANKS, int, int) [with T = const float*; RANKS = int*]’
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Utility.h:82:17:   required from ‘void BC::Tensor_Utility<deriv, typename std::enable_if<(isPrim<typename BC::determine_functor< <template-parameter-1-1> >::fscal> || BC::MTF::isCore<typename BC::determine_functor< <template-parameter-1-1> >::type>::conditional), void>::type>::print() const [with deriv = BC::Matrix<float>; typename std::enable_if<(isPrim<typename BC::determine_functor< <template-parameter-1-1> >::fscal> || BC::MTF::isCore<typename BC::determine_functor< <template-parameter-1-1> >::type>::conditional), void>::type = void]’
../UnitTests/main.cpp:37:10:   required from here
../UnitTests/../BC_Internals/BC_MathLibraries/BC_PrintFunctions.h:43:38: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
     str = str.substr(0, str.length() < printSpace ? str.length() : printSpace);
                                       
../UnitTests/../BC_Internals/BC_MathLibraries/BC_PrintFunctions.h:46:22: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
     if (str.length() < printSpace)
                       
../UnitTests/../BC_Internals/BC_MathLibraries/BC_PrintFunctions.h:67:37: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
    str = str.substr(0, str.length() < printSpace ? str.length() : printSpace);
                                      
../UnitTests/../BC_Internals/BC_MathLibraries/BC_PrintFunctions.h:70:21: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
    if (str.length() < printSpace)
                      
../UnitTests/../BC_Internals/BC_MathLibraries/BC_PrintFunctions.h: In instantiation of ‘void BC::printHelper(const T&, int_ranks, int, std::__cxx11::string, int) [with T = const double*; int_ranks = int*; std::__cxx11::string = std::__cxx11::basic_string<char>]’:
../UnitTests/../BC_Internals/BC_MathLibraries/BC_PrintFunctions.h:102:13:   required from ‘void BC::print(const T&, RANKS, int, int) [with T = const double*; RANKS = int*]’
../UnitTests/../BC_Internals/BC_MathLibraries/Mathematics_CPU.h:98:12:   required from ‘static void BC::CPU::print(T, RANKS, int, int) [with T = const double*; RANKS = int*]’
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Utility.h:82:17:   required from ‘void BC::Tensor_Utility<deriv, typename std::enable_if<(isPrim<typename BC::determine_functor< <template-parameter-1-1> >::fscal> || BC::MTF::isCore<typename BC::determine_functor< <template-parameter-1-1> >::type>::conditional), void>::type>::print() const [with deriv = BC::Matrix<double>; typename std::enable_if<(isPrim<typename BC::determine_functor< <template-parameter-1-1> >::fscal> || BC::MTF::isCore<typename BC::determine_functor< <template-parameter-1-1> >::type>::conditional), void>::type = void]’
../UnitTests/main.cpp:114:14:   required from here
../UnitTests/../BC_Internals/BC_MathLibraries/BC_PrintFunctions.h:43:38: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
     str = str.substr(0, str.length() < printSpace ? str.length() : printSpace);
                                       
../UnitTests/../BC_Internals/BC_MathLibraries/BC_PrintFunctions.h:46:22: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
     if (str.length() < printSpace)
                       
../UnitTests/../BC_Internals/BC_MathLibraries/BC_PrintFunctions.h:67:37: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
    str = str.substr(0, str.length() < printSpace ? str.length() : printSpace);
                                      
../UnitTests/../BC_Internals/BC_MathLibraries/BC_PrintFunctions.h:70:21: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
    if (str.length() < printSpace)
                      
make: *** [UnitTests/main.o] Error 1
UnitTests/subdir.mk:18: recipe for target 'UnitTests/main.o' failed
17:14:16 **** Incremental Build of configuration Debug for project BlackCat_LibraryCPU ****
make all 
Building file: ../UnitTests/main.cpp
Invoking: GCC C++ Compiler
g++ -O0 -g3 -Wall -c -fmessage-length=0 -MMD -MP -MF"UnitTests/main.d" -MT"UnitTests/main.o" -o "UnitTests/main.o" "../UnitTests/main.cpp"
In file included from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:32:0,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_MathLibraries/Mathematics_CPU.h:74:0: warning: ignoring #pragma omp parallel [-Wunknown-pragmas]
 #pragma omp parallel for
 
../UnitTests/../BC_Internals/BC_MathLibraries/Mathematics_CPU.h:78:0: warning: ignoring #pragma omp barrier [-Wunknown-pragmas]
 #pragma omp barrier
 
../UnitTests/../BC_Internals/BC_MathLibraries/Mathematics_CPU.h:88:0: warning: ignoring #pragma omp parallel [-Wunknown-pragmas]
 #pragma omp parallel for
 
../UnitTests/../BC_Internals/BC_MathLibraries/Mathematics_CPU.h:92:0: warning: ignoring #pragma omp barrier [-Wunknown-pragmas]
 #pragma omp barrier
 
In file included from ../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Core_Slice.h:17:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Core.h:13,
                 from ../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h:12,
                 from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:15,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Core_Scalar.h:22:0: warning: "__BCinline__" redefined
 #define __BCinline__
 
In file included from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:29:0,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Expressions/BlackCat_Internal_Definitions.h:25:0: note: this is the location of the previous definition
 #define __BCinline__ __BC_gcpu__ __attribute__((always_inline))
 
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:13:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Utility.h:35:47: error: expected ‘;’ before ‘<’ token
  using t1= typename MTF::shell_of<deriv>::type<d, ml>>;
                                               ^
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Utility.h:37:20: error: ‘t1’ does not name a type
  using eval_type = t1<_scalar<deriv>, _mathlib<deriv>>;
                    ^~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Utility.h: In member function ‘auto BC::Tensor_Utility<deriv, <template-parameter-1-2> >::eval() const’:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Utility.h:41:45: error: expected ‘(’ before ‘<’ token
   return typename MTF::shell_of<deriv>::type<_scalar<deriv>, _mathlib<deriv>>(this->asDerived());
                                             ^
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Utility.h:41:60: error: expected primary-expression before ‘,’ token
   return typename MTF::shell_of<deriv>::type<_scalar<deriv>, _mathlib<deriv>>(this->asDerived());
                                                            ^
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Utility.h:41:76: error: expected primary-expression before ‘>’ token
   return typename MTF::shell_of<deriv>::type<_scalar<deriv>, _mathlib<deriv>>(this->asDerived());
                                                                            ^~
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:15:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h: At global scope:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h:74:54: error: expected ‘;’ before ‘<’ token
  using derived_alt = typename shell_of<derived>::type<T, Mathlib>;
                                                      ^
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h:77:26: error: ‘derived_alt’ does not name a type
  TensorInitializer(const derived_alt<U>&  tensor) : black_cat_array(tensor.innerShape()) {
                          ^~~~~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h:77:37: error: expected ‘,’ or ‘...’ before ‘<’ token
  TensorInitializer(const derived_alt<U>&  tensor) : black_cat_array(tensor.innerShape()) {
                                     ^
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h: In constructor ‘BC::TensorInitializer<_tensor<t, ml>, typename std::enable_if<BC::MTF::isCorePure<t>::conditional, void>::type>::TensorInitializer(int)’:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h:77:69: error: ‘tensor’ was not declared in this scope
  TensorInitializer(const derived_alt<U>&  tensor) : black_cat_array(tensor.innerShape()) {
                                                                     ^~~~~~
In file included from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10:0,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/TensorBase.h: At global scope:
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:38:71: error: expected ‘;’ before ‘<’ token
  template<class    U> using deriv   = typename shell_of<derived>::type<U, Mathlib>;
                                                                       ^
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:39:76: error: expected ‘;’ before ‘<’ token
  template<class... U> using functor = typename shell_of<functor_type>::type<U...>;
                                                                            ^
../UnitTests/../BC_Internals/BC_Core/TensorBase.h: In member function ‘auto BC::TensorBase<derived>::operator[](int)’:
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:83:68: error: expected ‘(’ before ‘<’ token
     auto operator [] (int i)    { return typename base<RANK>::slice<decltype(slice(0)), Mathlib>(slice(i)); }
                                                                    ^
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:83:69: error: expected primary-expression before ‘decltype’
     auto operator [] (int i)    { return typename base<RANK>::slice<decltype(slice(0)), Mathlib>(slice(i)); }
                                                                     ^~~~~~~~
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:83:69: error: expected ‘;’ before ‘decltype’
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:83:87: error: expected unqualified-id before ‘,’ token
     auto operator [] (int i)    { return typename base<RANK>::slice<decltype(slice(0)), Mathlib>(slice(i)); }
                                                                                       ^
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:83:96: error: expected initializer before ‘>’ token
     auto operator [] (int i)    { return typename base<RANK>::slice<decltype(slice(0)), Mathlib>(slice(i)); }
                                                                                                ^
../UnitTests/../BC_Internals/BC_Core/TensorBase.h: In member function ‘const auto BC::TensorBase<derived>::operator[](int) const’:
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:84:74: error: expected ‘(’ before ‘<’ token
  const auto operator [] (int i) const { return typename base<RANK>::slice<decltype(slice(0)), Mathlib>(slice(i)); }
                                                                          ^
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:84:75: error: expected primary-expression before ‘decltype’
  const auto operator [] (int i) const { return typename base<RANK>::slice<decltype(slice(0)), Mathlib>(slice(i)); }
                                                                           ^~~~~~~~
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:84:75: error: expected ‘;’ before ‘decltype’
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:84:93: error: expected unqualified-id before ‘,’ token
  const auto operator [] (int i) const { return typename base<RANK>::slice<decltype(slice(0)), Mathlib>(slice(i)); }
                                                                                             ^
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:84:102: error: expected initializer before ‘>’ token
  const auto operator [] (int i) const { return typename base<RANK>::slice<decltype(slice(0)), Mathlib>(slice(i)); }
                                                                                                      ^
In file included from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:50:0,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Vector.h: At global scope:
../UnitTests/../BC_Internals/BC_Core/Vector.h:45:15: error: ‘unary_expression_transpose’ was not declared in this scope
  const Vector<unary_expression_transpose<typename MTF::determine_scalar<T>::type, typename parent_class::functor_type>, Mathlib> t() const {
               ^~~~~~~~~~~~~~~~~~~~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Vector.h:45:118: error: template argument 1 is invalid
  const Vector<unary_expression_transpose<typename MTF::determine_scalar<T>::type, typename parent_class::functor_type>, Mathlib> t() const {
                                                                                                                      ^
../UnitTests/../BC_Internals/BC_Core/Vector.h:45:119: error: expected unqualified-id before ‘,’ token
  const Vector<unary_expression_transpose<typename MTF::determine_scalar<T>::type, typename parent_class::functor_type>, Mathlib> t() const {
                                                                                                                       ^
In file included from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:51:0,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Matrix.h:47:15: error: ‘unary_expression_transpose’ was not declared in this scope
  const Matrix<unary_expression_transpose<typename MTF::determine_scalar<T>::type, typename parent_class::functor_type>, Mathlib> t() const {
               ^~~~~~~~~~~~~~~~~~~~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Matrix.h:47:118: error: template argument 1 is invalid
  const Matrix<unary_expression_transpose<typename MTF::determine_scalar<T>::type, typename parent_class::functor_type>, Mathlib> t() const {
                                                                                                                      ^
../UnitTests/../BC_Internals/BC_Core/Matrix.h:47:119: error: expected unqualified-id before ‘,’ token
  const Matrix<unary_expression_transpose<typename MTF::determine_scalar<T>::type, typename parent_class::functor_type>, Mathlib> t() const {
                                                                                                                       ^
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:15:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h: In instantiation of ‘class BC::TensorInitializer<BC::Vector<BC::binary_expression<float, BC::mul, BC::Tensor_Core<BC::Vector<float> >, BC::Tensor_Core<BC::Vector<float> > >, BC::CPU>, void>’:
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:21:7:   required from ‘class BC::TensorBase<BC::Vector<BC::binary_expression<float, BC::mul, BC::Tensor_Core<BC::Vector<float> >, BC::Tensor_Core<BC::Vector<float> > >, BC::CPU> >’
../UnitTests/../BC_Internals/BC_Core/Vector.h:17:7:   required from ‘class BC::Vector<BC::binary_expression<float, BC::mul, BC::Tensor_Core<BC::Vector<float> >, BC::Tensor_Core<BC::Vector<float> > >, BC::CPU>’
../UnitTests/SpeedTests.h:43:19:   required from here
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h:28:15: error: ‘BC::TensorInitializer<derived, expression_tensor>::black_cat_array’ has incomplete type
  functor_type black_cat_array;
               ^~~~~~~~~~~~~~~
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:12:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:26:41: note: declaration of ‘using functor_type = BC::_functor<BC::Vector<BC::binary_expression<float, BC::mul, BC::Tensor_Core<BC::Vector<float> >, BC::Tensor_Core<BC::Vector<float> > >, BC::CPU> > {aka class BC::binary_expression<float, BC::mul, BC::Tensor_Core<BC::Vector<float> >, BC::Tensor_Core<BC::Vector<float> > >}’
 template<class,class,class,class> class binary_expression;
                                         ^~~~~~~~~~~~~~~~~
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:15:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h: In instantiation of ‘class BC::TensorInitializer<BC::Vector<BC::binary_expression<float, BC::assign, BC::Tensor_Core<BC::Vector<float> >, BC::binary_expression<float, BC::mul, BC::Tensor_Core<BC::Vector<float> >, BC::Tensor_Core<BC::Vector<float> > > >, BC::CPU>, void>’:
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:21:7:   required from ‘class BC::TensorBase<BC::Vector<BC::binary_expression<float, BC::assign, BC::Tensor_Core<BC::Vector<float> >, BC::binary_expression<float, BC::mul, BC::Tensor_Core<BC::Vector<float> >, BC::Tensor_Core<BC::Vector<float> > > >, BC::CPU> >’
../UnitTests/../BC_Internals/BC_Core/Vector.h:17:7:   required from ‘class BC::Vector<BC::binary_expression<float, BC::assign, BC::Tensor_Core<BC::Vector<float> >, BC::binary_expression<float, BC::mul, BC::Tensor_Core<BC::Vector<float> >, BC::Tensor_Core<BC::Vector<float> > > >, BC::CPU>’
../UnitTests/SpeedTests.h:43:24:   required from here
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h:28:15: error: ‘BC::TensorInitializer<derived, expression_tensor>::black_cat_array’ has incomplete type
  functor_type black_cat_array;
               ^~~~~~~~~~~~~~~
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:12:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:26:41: note: declaration of ‘using functor_type = BC::_functor<BC::Vector<BC::binary_expression<float, BC::assign, BC::Tensor_Core<BC::Vector<float> >, BC::binary_expression<float, BC::mul, BC::Tensor_Core<BC::Vector<float> >, BC::Tensor_Core<BC::Vector<float> > > >, BC::CPU> > {aka class BC::binary_expression<float, BC::assign, BC::Tensor_Core<BC::Vector<float> >, BC::binary_expression<float, BC::mul, BC::Tensor_Core<BC::Vector<float> >, BC::Tensor_Core<BC::Vector<float> > > >}’
 template<class,class,class,class> class binary_expression;
                                         ^~~~~~~~~~~~~~~~~
In file included from ../UnitTests/main.cpp:4:0:
../UnitTests/SpeedTests.h: In function ‘int speedTestsScalarIteration()’:
../UnitTests/SpeedTests.h:136:9: error: ‘using mat = class BC::Matrix<float> {aka class BC::Matrix<float>}’ has no member named ‘t’
   c = a.t() * b;
         ^
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:15:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h: In instantiation of ‘class BC::TensorInitializer<BC::Matrix<BC::binary_expression<float, BC::add, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> > >, BC::CPU>, void>’:
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:21:7:   required from ‘class BC::TensorBase<BC::Matrix<BC::binary_expression<float, BC::add, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> > >, BC::CPU> >’
../UnitTests/../BC_Internals/BC_Core/Matrix.h:17:7:   required from ‘class BC::Matrix<BC::binary_expression<float, BC::add, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> > >, BC::CPU>’
../UnitTests/SpeedTests.h:146:23:   required from here
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h:28:15: error: ‘BC::TensorInitializer<derived, expression_tensor>::black_cat_array’ has incomplete type
  functor_type black_cat_array;
               ^~~~~~~~~~~~~~~
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:12:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:26:41: note: declaration of ‘using functor_type = BC::_functor<BC::Matrix<BC::binary_expression<float, BC::add, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> > >, BC::CPU> > {aka class BC::binary_expression<float, BC::add, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> > >}’
 template<class,class,class,class> class binary_expression;
                                         ^~~~~~~~~~~~~~~~~
../UnitTests/main.cpp: In function ‘auto test()’:
../UnitTests/main.cpp:40:8: error: ‘using mat = class BC::Matrix<float> {aka class BC::Matrix<float>}’ has no member named ‘t’
  d = a.t();
        ^
../UnitTests/main.cpp:41:8: error: ‘using mat = class BC::Matrix<float> {aka class BC::Matrix<float>}’ has no member named ‘t’
  e = b.t();
        ^
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:15:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h: In instantiation of ‘class BC::TensorInitializer<BC::Matrix<BC::binary_expression_dotproduct<float, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::CPU>, void>’:
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:21:7:   required from ‘class BC::TensorBase<BC::Matrix<BC::binary_expression_dotproduct<float, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::CPU> >’
../UnitTests/../BC_Internals/BC_Core/Matrix.h:17:7:   required from ‘class BC::Matrix<BC::binary_expression_dotproduct<float, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::CPU>’
../UnitTests/main.cpp:47:10:   required from here
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h:28:15: error: ‘BC::TensorInitializer<derived, expression_tensor>::black_cat_array’ has incomplete type
  functor_type black_cat_array;
               ^~~~~~~~~~~~~~~
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:12:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:29:41: note: declaration of ‘using functor_type = BC::_functor<BC::Matrix<BC::binary_expression_dotproduct<float, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::CPU> > {aka class BC::binary_expression_dotproduct<float, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>}’
 template<class,class,class,class> class binary_expression_dotproduct;
                                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
../UnitTests/main.cpp:50:8: error: ‘using mat = class BC::Matrix<float> {aka class BC::Matrix<float>}’ has no member named ‘t’
  c = a.t() * b.t();
        ^
../UnitTests/main.cpp:50:16: error: ‘using mat = class BC::Matrix<float> {aka class BC::Matrix<float>}’ has no member named ‘t’
  c = a.t() * b.t();
                ^
../UnitTests/main.cpp:53:8: error: ‘using mat = class BC::Matrix<float> {aka class BC::Matrix<float>}’ has no member named ‘t’
  c = a.t() * e;
        ^
../UnitTests/main.cpp:56:12: error: ‘using mat = class BC::Matrix<float> {aka class BC::Matrix<float>}’ has no member named ‘t’
  c = d * b.t();
            ^
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:15:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h: In instantiation of ‘class BC::TensorInitializer<BC::Matrix<BC::binary_expression_scalar_R<float, BC::mul, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >, BC::CPU>, void>’:
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:21:7:   required from ‘class BC::TensorBase<BC::Matrix<BC::binary_expression_scalar_R<float, BC::mul, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >, BC::CPU> >’
../UnitTests/../BC_Internals/BC_Core/Matrix.h:17:7:   required from ‘class BC::Matrix<BC::binary_expression_scalar_R<float, BC::mul, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >, BC::CPU>’
../UnitTests/main.cpp:59:16:   required from here
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h:28:15: error: ‘BC::TensorInitializer<derived, expression_tensor>::black_cat_array’ has incomplete type
  functor_type black_cat_array;
               ^~~~~~~~~~~~~~~
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:12:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:28:41: note: declaration of ‘using functor_type = BC::_functor<BC::Matrix<BC::binary_expression_scalar_R<float, BC::mul, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >, BC::CPU> > {aka class BC::binary_expression_scalar_R<float, BC::mul, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >}’
 template<class,class,class,class> class binary_expression_scalar_R;
                                         ^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:15:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h: In instantiation of ‘class BC::TensorInitializer<BC::Matrix<BC::binary_expression_dotproduct<float, BC::binary_expression_scalar_R<float, BC::mul, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::CPU>, void>’:
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:21:7:   required from ‘class BC::TensorBase<BC::Matrix<BC::binary_expression_dotproduct<float, BC::binary_expression_scalar_R<float, BC::mul, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::CPU> >’
../UnitTests/../BC_Internals/BC_Core/Matrix.h:17:7:   required from ‘class BC::Matrix<BC::binary_expression_dotproduct<float, BC::binary_expression_scalar_R<float, BC::mul, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::CPU>’
../UnitTests/main.cpp:59:20:   required from here
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h:28:15: error: ‘BC::TensorInitializer<derived, expression_tensor>::black_cat_array’ has incomplete type
  functor_type black_cat_array;
               ^~~~~~~~~~~~~~~
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:12:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:29:41: note: declaration of ‘using functor_type = BC::_functor<BC::Matrix<BC::binary_expression_dotproduct<float, BC::binary_expression_scalar_R<float, BC::mul, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::CPU> > {aka class BC::binary_expression_dotproduct<float, BC::binary_expression_scalar_R<float, BC::mul, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>}’
 template<class,class,class,class> class binary_expression_dotproduct;
                                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:15:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h: In instantiation of ‘class BC::TensorInitializer<BC::Matrix<BC::binary_expression_scalar_L<float, BC::mul, BC::Tensor_Core<BC::Scalar<float, BC::CPU> >, BC::Tensor_Core<BC::Matrix<float> > >, BC::CPU>, void>’:
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:21:7:   required from ‘class BC::TensorBase<BC::Matrix<BC::binary_expression_scalar_L<float, BC::mul, BC::Tensor_Core<BC::Scalar<float, BC::CPU> >, BC::Tensor_Core<BC::Matrix<float> > >, BC::CPU> >’
../UnitTests/../BC_Internals/BC_Core/Matrix.h:17:7:   required from ‘class BC::Matrix<BC::binary_expression_scalar_L<float, BC::mul, BC::Tensor_Core<BC::Scalar<float, BC::CPU> >, BC::Tensor_Core<BC::Matrix<float> > >, BC::CPU>’
../UnitTests/main.cpp:62:16:   required from here
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h:28:15: error: ‘BC::TensorInitializer<derived, expression_tensor>::black_cat_array’ has incomplete type
  functor_type black_cat_array;
               ^~~~~~~~~~~~~~~
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:12:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:27:41: note: declaration of ‘using functor_type = BC::_functor<BC::Matrix<BC::binary_expression_scalar_L<float, BC::mul, BC::Tensor_Core<BC::Scalar<float, BC::CPU> >, BC::Tensor_Core<BC::Matrix<float> > >, BC::CPU> > {aka class BC::binary_expression_scalar_L<float, BC::mul, BC::Tensor_Core<BC::Scalar<float, BC::CPU> >, BC::Tensor_Core<BC::Matrix<float> > >}’
 template<class,class,class,class> class binary_expression_scalar_L;
                                         ^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:15:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h: In instantiation of ‘class BC::TensorInitializer<BC::Matrix<BC::binary_expression_dotproduct<float, BC::binary_expression_scalar_L<float, BC::mul, BC::Tensor_Core<BC::Scalar<float, BC::CPU> >, BC::Tensor_Core<BC::Matrix<float> > >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::CPU>, void>’:
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:21:7:   required from ‘class BC::TensorBase<BC::Matrix<BC::binary_expression_dotproduct<float, BC::binary_expression_scalar_L<float, BC::mul, BC::Tensor_Core<BC::Scalar<float, BC::CPU> >, BC::Tensor_Core<BC::Matrix<float> > >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::CPU> >’
../UnitTests/../BC_Internals/BC_Core/Matrix.h:17:7:   required from ‘class BC::Matrix<BC::binary_expression_dotproduct<float, BC::binary_expression_scalar_L<float, BC::mul, BC::Tensor_Core<BC::Scalar<float, BC::CPU> >, BC::Tensor_Core<BC::Matrix<float> > >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::CPU>’
../UnitTests/main.cpp:62:20:   required from here
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h:28:15: error: ‘BC::TensorInitializer<derived, expression_tensor>::black_cat_array’ has incomplete type
  functor_type black_cat_array;
               ^~~~~~~~~~~~~~~
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:12:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:29:41: note: declaration of ‘using functor_type = BC::_functor<BC::Matrix<BC::binary_expression_dotproduct<float, BC::binary_expression_scalar_L<float, BC::mul, BC::Tensor_Core<BC::Scalar<float, BC::CPU> >, BC::Tensor_Core<BC::Matrix<float> > >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::CPU> > {aka class BC::binary_expression_dotproduct<float, BC::binary_expression_scalar_L<float, BC::mul, BC::Tensor_Core<BC::Scalar<float, BC::CPU> >, BC::Tensor_Core<BC::Matrix<float> > >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>}’
 template<class,class,class,class> class binary_expression_dotproduct;
                                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:15:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h: In instantiation of ‘class BC::TensorInitializer<BC::Matrix<BC::binary_expression_scalar_R<float, BC::mul, BC::binary_expression_dotproduct<float, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >, BC::CPU>, void>’:
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:21:7:   required from ‘class BC::TensorBase<BC::Matrix<BC::binary_expression_scalar_R<float, BC::mul, BC::binary_expression_dotproduct<float, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >, BC::CPU> >’
../UnitTests/../BC_Internals/BC_Core/Matrix.h:17:7:   required from ‘class BC::Matrix<BC::binary_expression_scalar_R<float, BC::mul, BC::binary_expression_dotproduct<float, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >, BC::CPU>’
../UnitTests/main.cpp:64:20:   required from here
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h:28:15: error: ‘BC::TensorInitializer<derived, expression_tensor>::black_cat_array’ has incomplete type
  functor_type black_cat_array;
               ^~~~~~~~~~~~~~~
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:12:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:28:41: note: declaration of ‘using functor_type = BC::_functor<BC::Matrix<BC::binary_expression_scalar_R<float, BC::mul, BC::binary_expression_dotproduct<float, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >, BC::CPU> > {aka class BC::binary_expression_scalar_R<float, BC::mul, BC::binary_expression_dotproduct<float, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >}’
 template<class,class,class,class> class binary_expression_scalar_R;
                                         ^~~~~~~~~~~~~~~~~~~~~~~~~~
../UnitTests/main.cpp:76:8: error: ‘using mat = class BC::Matrix<float> {aka class BC::Matrix<float>}’ has no member named ‘t’
  c = a.t() * b.t();
        ^
../UnitTests/main.cpp:76:16: error: ‘using mat = class BC::Matrix<float> {aka class BC::Matrix<float>}’ has no member named ‘t’
  c = a.t() * b.t();
                ^
../UnitTests/main.cpp:80:8: error: ‘using mat = class BC::Matrix<float> {aka class BC::Matrix<float>}’ has no member named ‘t’
  c = a.t() * A * (b.t() * A);
        ^
../UnitTests/main.cpp:80:21: error: ‘using mat = class BC::Matrix<float> {aka class BC::Matrix<float>}’ has no member named ‘t’
  c = a.t() * A * (b.t() * A);
                     ^
../UnitTests/main.cpp:94:14: error: invalid operands of types ‘void’ and ‘void’ to binary ‘operator+’
  d[1] = d[1] + d[1];
         ~~~~~^~~~~~
../UnitTests/main.cpp:99:8: error: invalid types ‘void[int]’ for array subscript
  d[1][1] = d[1][1] + d[1][1];
        ^
../UnitTests/main.cpp:99:18: error: invalid types ‘void[int]’ for array subscript
  d[1][1] = d[1][1] + d[1][1];
                  ^
../UnitTests/main.cpp:99:28: error: invalid types ‘void[int]’ for array subscript
  d[1][1] = d[1][1] + d[1][1];
                            ^
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:13:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Utility.h: In instantiation of ‘void BC::Tensor_Utility<deriv, typename std::enable_if<(isPrim<typename BC::determine_functor< <template-parameter-1-1> >::fscal> || BC::MTF::isCore<typename BC::determine_functor< <template-parameter-1-1> >::type>::conditional), void>::type>::read(std::ifstream&, bool, bool) [with deriv = BC::Matrix<double>; typename std::enable_if<(isPrim<typename BC::determine_functor< <template-parameter-1-1> >::fscal> || BC::MTF::isCore<typename BC::determine_functor< <template-parameter-1-1> >::type>::conditional), void>::type = void; std::ifstream = std::basic_ifstream<char>]’:
../UnitTests/main.cpp:113:15:   required from here
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Utility.h:139:22: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
    for (int i = 0; i < dims.size(); ++i) {
                    ~~^~~~~~~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Utility.h:145:92: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
    MATHLIB::HostToDevice(asDerived().data().core(), &data[data[0] + 1], asDerived().size() > data.size() ? data.size() : asDerived().size());
                                                                                             
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:13:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Utility.h:147:86: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
    MATHLIB::HostToDevice(asDerived().data().core(), &data[0],     asDerived().size() > data.size() ? data.size() : asDerived().size());
                                                                                       
In file included from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:32:0,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_MathLibraries/Mathematics_CPU.h: In instantiation of ‘static void BC::CPU::copy(T&, const J&, int) [with T = BC::Tensor_Core<BC::Matrix<float> >; J = BC::binary_expression_dotproduct<float, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>]’:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:218:21:   required from ‘derived& BC::Tensor_Operations< <template-parameter-1-1> >::operator=(const BC::Tensor_Operations<param_deriv>&) [with pDeriv = BC::Matrix<BC::binary_expression_dotproduct<float, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::CPU>; derived = BC::Matrix<float>]’
../UnitTests/../BC_Internals/BC_Core/Matrix.h:45:83:   required from ‘BC::Matrix< <template-parameter-1-1>, ML>& BC::Matrix< <template-parameter-1-1>, ML>::operator=(const BC::Matrix<U, Mathlib>&) [with U = BC::binary_expression_dotproduct<float, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>; T = float; Mathlib = BC::CPU]’
../UnitTests/main.cpp:47:10:   required from here
../UnitTests/../BC_Internals/BC_MathLibraries/Mathematics_CPU.h:70:13: error: no match for ‘operator[]’ (operand types are ‘const BC::binary_expression_dotproduct<float, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>’ and ‘int’)
     t[i] = j[i];
            ~^
../UnitTests/../BC_Internals/BC_MathLibraries/Mathematics_CPU.h:76:12: error: no match for ‘operator[]’ (operand types are ‘const BC::binary_expression_dotproduct<float, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>’ and ‘int’)
    t[i] = j[i];
           ~^
../UnitTests/../BC_Internals/BC_MathLibraries/Mathematics_CPU.h: In instantiation of ‘static void BC::CPU::copy(T&, const J&, int) [with T = BC::Tensor_Core<BC::Matrix<float> >; J = BC::binary_expression_dotproduct<float, BC::binary_expression_scalar_R<float, BC::mul, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>]’:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:218:21:   required from ‘derived& BC::Tensor_Operations< <template-parameter-1-1> >::operator=(const BC::Tensor_Operations<param_deriv>&) [with pDeriv = BC::Matrix<BC::binary_expression_dotproduct<float, BC::binary_expression_scalar_R<float, BC::mul, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::CPU>; derived = BC::Matrix<float>]’
../UnitTests/../BC_Internals/BC_Core/Matrix.h:45:83:   required from ‘BC::Matrix< <template-parameter-1-1>, ML>& BC::Matrix< <template-parameter-1-1>, ML>::operator=(const BC::Matrix<U, Mathlib>&) [with U = BC::binary_expression_dotproduct<float, BC::binary_expression_scalar_R<float, BC::mul, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>; T = float; Mathlib = BC::CPU]’
../UnitTests/main.cpp:59:20:   required from here
../UnitTests/../BC_Internals/BC_MathLibraries/Mathematics_CPU.h:70:13: error: no match for ‘operator[]’ (operand types are ‘const BC::binary_expression_dotproduct<float, BC::binary_expression_scalar_R<float, BC::mul, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>’ and ‘int’)
     t[i] = j[i];
            ~^
../UnitTests/../BC_Internals/BC_MathLibraries/Mathematics_CPU.h:76:12: error: no match for ‘operator[]’ (operand types are ‘const BC::binary_expression_dotproduct<float, BC::binary_expression_scalar_R<float, BC::mul, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>’ and ‘int’)
    t[i] = j[i];
           ~^
../UnitTests/../BC_Internals/BC_MathLibraries/Mathematics_CPU.h: In instantiation of ‘static void BC::CPU::copy(T&, const J&, int) [with T = BC::Tensor_Core<BC::Matrix<float> >; J = BC::binary_expression_dotproduct<float, BC::binary_expression_scalar_L<float, BC::mul, BC::Tensor_Core<BC::Scalar<float, BC::CPU> >, BC::Tensor_Core<BC::Matrix<float> > >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>]’:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:218:21:   required from ‘derived& BC::Tensor_Operations< <template-parameter-1-1> >::operator=(const BC::Tensor_Operations<param_deriv>&) [with pDeriv = BC::Matrix<BC::binary_expression_dotproduct<float, BC::binary_expression_scalar_L<float, BC::mul, BC::Tensor_Core<BC::Scalar<float, BC::CPU> >, BC::Tensor_Core<BC::Matrix<float> > >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::CPU>; derived = BC::Matrix<float>]’
../UnitTests/../BC_Internals/BC_Core/Matrix.h:45:83:   required from ‘BC::Matrix< <template-parameter-1-1>, ML>& BC::Matrix< <template-parameter-1-1>, ML>::operator=(const BC::Matrix<U, Mathlib>&) [with U = BC::binary_expression_dotproduct<float, BC::binary_expression_scalar_L<float, BC::mul, BC::Tensor_Core<BC::Scalar<float, BC::CPU> >, BC::Tensor_Core<BC::Matrix<float> > >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>; T = float; Mathlib = BC::CPU]’
../UnitTests/main.cpp:62:20:   required from here
../UnitTests/../BC_Internals/BC_MathLibraries/Mathematics_CPU.h:70:13: error: no match for ‘operator[]’ (operand types are ‘const BC::binary_expression_dotproduct<float, BC::binary_expression_scalar_L<float, BC::mul, BC::Tensor_Core<BC::Scalar<float, BC::CPU> >, BC::Tensor_Core<BC::Matrix<float> > >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>’ and ‘int’)
     t[i] = j[i];
            ~^
../UnitTests/../BC_Internals/BC_MathLibraries/Mathematics_CPU.h:76:12: error: no match for ‘operator[]’ (operand types are ‘const BC::binary_expression_dotproduct<float, BC::binary_expression_scalar_L<float, BC::mul, BC::Tensor_Core<BC::Scalar<float, BC::CPU> >, BC::Tensor_Core<BC::Matrix<float> > >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>’ and ‘int’)
    t[i] = j[i];
           ~^
../UnitTests/../BC_Internals/BC_MathLibraries/Mathematics_CPU.h: In instantiation of ‘static void BC::CPU::copy(T&, const J&, int) [with T = BC::Tensor_Core<BC::Matrix<float> >; J = BC::binary_expression_scalar_R<float, BC::mul, BC::binary_expression_dotproduct<float, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >]’:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:218:21:   required from ‘derived& BC::Tensor_Operations< <template-parameter-1-1> >::operator=(const BC::Tensor_Operations<param_deriv>&) [with pDeriv = BC::Matrix<BC::binary_expression_scalar_R<float, BC::mul, BC::binary_expression_dotproduct<float, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >, BC::CPU>; derived = BC::Matrix<float>]’
../UnitTests/../BC_Internals/BC_Core/Matrix.h:45:83:   required from ‘BC::Matrix< <template-parameter-1-1>, ML>& BC::Matrix< <template-parameter-1-1>, ML>::operator=(const BC::Matrix<U, Mathlib>&) [with U = BC::binary_expression_scalar_R<float, BC::mul, BC::binary_expression_dotproduct<float, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >; T = float; Mathlib = BC::CPU]’
../UnitTests/main.cpp:64:20:   required from here
../UnitTests/../BC_Internals/BC_MathLibraries/Mathematics_CPU.h:70:13: error: no match for ‘operator[]’ (operand types are ‘const BC::binary_expression_scalar_R<float, BC::mul, BC::binary_expression_dotproduct<float, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >’ and ‘int’)
     t[i] = j[i];
            ~^
../UnitTests/../BC_Internals/BC_MathLibraries/Mathematics_CPU.h:76:12: error: no match for ‘operator[]’ (operand types are ‘const BC::binary_expression_scalar_R<float, BC::mul, BC::binary_expression_dotproduct<float, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >’ and ‘int’)
    t[i] = j[i];
           ~^
In file included from ../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Core_Slice.h:17:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Core.h:13,
                 from ../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h:12,
                 from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:15,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Core_Scalar.h: In instantiation of ‘BC::Tensor_Scalar<PARENT>::Tensor_Scalar(BC::Tensor_Scalar<PARENT>::scalar*, const PARENT&) [with PARENT = BC::Tensor_Core<BC::Matrix<float> >; BC::Tensor_Scalar<PARENT>::scalar = float]’:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h:33:63:   required from ‘BC::TensorInitializer<derived, expression_tensor>::TensorInitializer(const params& ...) [with params = {float*, BC::Tensor_Core<BC::Matrix<float, BC::CPU> >}; derived = BC::Scalar<BC::Tensor_Scalar<BC::Tensor_Core<BC::Matrix<float> > >, BC::CPU>; expression_tensor = void]’
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:50:51:   required from ‘BC::TensorBase<derived>::TensorBase(const params& ...) [with params = {float*, BC::Tensor_Core<BC::Matrix<float, BC::CPU> >}; derived = BC::Scalar<BC::Tensor_Scalar<BC::Tensor_Core<BC::Matrix<float> > >, BC::CPU>]’
../UnitTests/../BC_Internals/BC_Core/Scalar.h:61:97:   required from ‘BC::Scalar< <template-parameter-1-1>, ML>::Scalar(const var1&, const var2&, const params& ...) [with var1 = float*; var2 = BC::Tensor_Core<BC::Matrix<float> >; params = {}; T = BC::Tensor_Scalar<BC::Tensor_Core<BC::Matrix<float> > >; Mathlib = BC::CPU]’
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:92:19:   required from ‘auto BC::TensorBase<derived>::getScalar(int) [with derived = BC::Matrix<float>]’
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:96:52:   required from ‘auto BC::TensorBase<derived>::operator()(int) [with derived = BC::Matrix<float>]’
../UnitTests/main.cpp:33:6:   required from here
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Core_Scalar.h:36:10: warning: ‘BC::Tensor_Scalar<BC::Tensor_Core<BC::Matrix<float> > >::array_slice’ will be initialized after [-Wreorder]
  scalar* array_slice;
          ^~~~~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Core_Scalar.h:35:16: warning:   ‘const BC::Tensor_Core<BC::Matrix<float> >& BC::Tensor_Scalar<BC::Tensor_Core<BC::Matrix<float> > >::parent’ [-Wreorder]
  const PARENT& parent;
                ^~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Core_Scalar.h:41:2: warning:   when initialized here [-Wreorder]
  Tensor_Scalar(scalar* array, const PARENT& parent_) : array_slice(array), parent(parent_) {}
  ^~~~~~~~~~~~~
In file included from ../UnitTests/../BC_Internals/BC_MathLibraries/Mathematics_CPU.h:15:0,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:32,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_MathLibraries/BC_PrintFunctions.h: In instantiation of ‘void BC::printHelper(const T&, int_ranks, int, std::__cxx11::string, int) [with T = const float*; int_ranks = int*; std::__cxx11::string = std::__cxx11::basic_string<char>]’:
../UnitTests/../BC_Internals/BC_MathLibraries/BC_PrintFunctions.h:102:13:   required from ‘void BC::print(const T&, RANKS, int, int) [with T = const float*; RANKS = int*]’
../UnitTests/../BC_Internals/BC_MathLibraries/Mathematics_CPU.h:98:12:   required from ‘static void BC::CPU::print(T, RANKS, int, int) [with T = const float*; RANKS = int*]’
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Utility.h:82:17:   required from ‘void BC::Tensor_Utility<deriv, typename std::enable_if<(isPrim<typename BC::determine_functor< <template-parameter-1-1> >::fscal> || BC::MTF::isCore<typename BC::determine_functor< <template-parameter-1-1> >::type>::conditional), void>::type>::print() const [with deriv = BC::Matrix<float>; typename std::enable_if<(isPrim<typename BC::determine_functor< <template-parameter-1-1> >::fscal> || BC::MTF::isCore<typename BC::determine_functor< <template-parameter-1-1> >::type>::conditional), void>::type = void]’
../UnitTests/main.cpp:37:10:   required from here
../UnitTests/../BC_Internals/BC_MathLibraries/BC_PrintFunctions.h:43:38: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
     str = str.substr(0, str.length() < printSpace ? str.length() : printSpace);
                                       
../UnitTests/../BC_Internals/BC_MathLibraries/BC_PrintFunctions.h:46:22: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
     if (str.length() < printSpace)
                       
../UnitTests/../BC_Internals/BC_MathLibraries/BC_PrintFunctions.h:67:37: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
    str = str.substr(0, str.length() < printSpace ? str.length() : printSpace);
                                      
../UnitTests/../BC_Internals/BC_MathLibraries/BC_PrintFunctions.h:70:21: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
    if (str.length() < printSpace)
                      
../UnitTests/../BC_Internals/BC_MathLibraries/BC_PrintFunctions.h: In instantiation of ‘void BC::printHelper(const T&, int_ranks, int, std::__cxx11::string, int) [with T = const double*; int_ranks = int*; std::__cxx11::string = std::__cxx11::basic_string<char>]’:
../UnitTests/../BC_Internals/BC_MathLibraries/BC_PrintFunctions.h:102:13:   required from ‘void BC::print(const T&, RANKS, int, int) [with T = const double*; RANKS = int*]’
../UnitTests/../BC_Internals/BC_MathLibraries/Mathematics_CPU.h:98:12:   required from ‘static void BC::CPU::print(T, RANKS, int, int) [with T = const double*; RANKS = int*]’
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Utility.h:82:17:   required from ‘void BC::Tensor_Utility<deriv, typename std::enable_if<(isPrim<typename BC::determine_functor< <template-parameter-1-1> >::fscal> || BC::MTF::isCore<typename BC::determine_functor< <template-parameter-1-1> >::type>::conditional), void>::type>::print() const [with deriv = BC::Matrix<double>; typename std::enable_if<(isPrim<typename BC::determine_functor< <template-parameter-1-1> >::fscal> || BC::MTF::isCore<typename BC::determine_functor< <template-parameter-1-1> >::type>::conditional), void>::type = void]’
../UnitTests/main.cpp:114:14:   required from here
../UnitTests/../BC_Internals/BC_MathLibraries/BC_PrintFunctions.h:43:38: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
     str = str.substr(0, str.length() < printSpace ? str.length() : printSpace);
                                       
../UnitTests/../BC_Internals/BC_MathLibraries/BC_PrintFunctions.h:46:22: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
     if (str.length() < printSpace)
                       
../UnitTests/../BC_Internals/BC_MathLibraries/BC_PrintFunctions.h:67:37: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
    str = str.substr(0, str.length() < printSpace ? str.length() : printSpace);
                                      
../UnitTests/../BC_Internals/BC_MathLibraries/BC_PrintFunctions.h:70:21: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
    if (str.length() < printSpace)
                      
make: *** [UnitTests/main.o] Error 1
UnitTests/subdir.mk:18: recipe for target 'UnitTests/main.o' failed
17:14:19 **** Incremental Build of configuration Debug for project BlackCat_LibraryCPU ****
make all 
Building file: ../UnitTests/main.cpp
Invoking: GCC C++ Compiler
g++ -O0 -g3 -Wall -c -fmessage-length=0 -MMD -MP -MF"UnitTests/main.d" -MT"UnitTests/main.o" -o "UnitTests/main.o" "../UnitTests/main.cpp"
In file included from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:32:0,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_MathLibraries/Mathematics_CPU.h:74:0: warning: ignoring #pragma omp parallel [-Wunknown-pragmas]
 #pragma omp parallel for
 
../UnitTests/../BC_Internals/BC_MathLibraries/Mathematics_CPU.h:78:0: warning: ignoring #pragma omp barrier [-Wunknown-pragmas]
 #pragma omp barrier
 
../UnitTests/../BC_Internals/BC_MathLibraries/Mathematics_CPU.h:88:0: warning: ignoring #pragma omp parallel [-Wunknown-pragmas]
 #pragma omp parallel for
 
../UnitTests/../BC_Internals/BC_MathLibraries/Mathematics_CPU.h:92:0: warning: ignoring #pragma omp barrier [-Wunknown-pragmas]
 #pragma omp barrier
 
In file included from ../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Core_Slice.h:17:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Core.h:13,
                 from ../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h:12,
                 from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:15,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Core_Scalar.h:22:0: warning: "__BCinline__" redefined
 #define __BCinline__
 
In file included from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:29:0,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Expressions/BlackCat_Internal_Definitions.h:25:0: note: this is the location of the previous definition
 #define __BCinline__ __BC_gcpu__ __attribute__((always_inline))
 
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:13:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Utility.h:35:47: error: expected ‘;’ before ‘<’ token
  using t1= typename MTF::shell_of<deriv>::type<d, ml>;
                                               ^
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Utility.h:37:20: error: ‘t1’ does not name a type
  using eval_type = t1<_scalar<deriv>, _mathlib<deriv>>;
                    ^~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Utility.h: In member function ‘auto BC::Tensor_Utility<deriv, <template-parameter-1-2> >::eval() const’:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Utility.h:41:45: error: expected ‘(’ before ‘<’ token
   return typename MTF::shell_of<deriv>::type<_scalar<deriv>, _mathlib<deriv>>(this->asDerived());
                                             ^
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Utility.h:41:60: error: expected primary-expression before ‘,’ token
   return typename MTF::shell_of<deriv>::type<_scalar<deriv>, _mathlib<deriv>>(this->asDerived());
                                                            ^
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Utility.h:41:76: error: expected primary-expression before ‘>’ token
   return typename MTF::shell_of<deriv>::type<_scalar<deriv>, _mathlib<deriv>>(this->asDerived());
                                                                            ^~
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:15:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h: At global scope:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h:74:54: error: expected ‘;’ before ‘<’ token
  using derived_alt = typename shell_of<derived>::type<T, Mathlib>;
                                                      ^
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h:77:26: error: ‘derived_alt’ does not name a type
  TensorInitializer(const derived_alt<U>&  tensor) : black_cat_array(tensor.innerShape()) {
                          ^~~~~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h:77:37: error: expected ‘,’ or ‘...’ before ‘<’ token
  TensorInitializer(const derived_alt<U>&  tensor) : black_cat_array(tensor.innerShape()) {
                                     ^
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h: In constructor ‘BC::TensorInitializer<_tensor<t, ml>, typename std::enable_if<BC::MTF::isCorePure<t>::conditional, void>::type>::TensorInitializer(int)’:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h:77:69: error: ‘tensor’ was not declared in this scope
  TensorInitializer(const derived_alt<U>&  tensor) : black_cat_array(tensor.innerShape()) {
                                                                     ^~~~~~
In file included from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10:0,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/TensorBase.h: At global scope:
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:38:71: error: expected ‘;’ before ‘<’ token
  template<class    U> using deriv   = typename shell_of<derived>::type<U, Mathlib>;
                                                                       ^
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:39:76: error: expected ‘;’ before ‘<’ token
  template<class... U> using functor = typename shell_of<functor_type>::type<U...>;
                                                                            ^
../UnitTests/../BC_Internals/BC_Core/TensorBase.h: In member function ‘auto BC::TensorBase<derived>::operator[](int)’:
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:83:68: error: expected ‘(’ before ‘<’ token
     auto operator [] (int i)    { return typename base<RANK>::slice<decltype(slice(0)), Mathlib>(slice(i)); }
                                                                    ^
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:83:69: error: expected primary-expression before ‘decltype’
     auto operator [] (int i)    { return typename base<RANK>::slice<decltype(slice(0)), Mathlib>(slice(i)); }
                                                                     ^~~~~~~~
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:83:69: error: expected ‘;’ before ‘decltype’
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:83:87: error: expected unqualified-id before ‘,’ token
     auto operator [] (int i)    { return typename base<RANK>::slice<decltype(slice(0)), Mathlib>(slice(i)); }
                                                                                       ^
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:83:96: error: expected initializer before ‘>’ token
     auto operator [] (int i)    { return typename base<RANK>::slice<decltype(slice(0)), Mathlib>(slice(i)); }
                                                                                                ^
../UnitTests/../BC_Internals/BC_Core/TensorBase.h: In member function ‘const auto BC::TensorBase<derived>::operator[](int) const’:
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:84:74: error: expected ‘(’ before ‘<’ token
  const auto operator [] (int i) const { return typename base<RANK>::slice<decltype(slice(0)), Mathlib>(slice(i)); }
                                                                          ^
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:84:75: error: expected primary-expression before ‘decltype’
  const auto operator [] (int i) const { return typename base<RANK>::slice<decltype(slice(0)), Mathlib>(slice(i)); }
                                                                           ^~~~~~~~
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:84:75: error: expected ‘;’ before ‘decltype’
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:84:93: error: expected unqualified-id before ‘,’ token
  const auto operator [] (int i) const { return typename base<RANK>::slice<decltype(slice(0)), Mathlib>(slice(i)); }
                                                                                             ^
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:84:102: error: expected initializer before ‘>’ token
  const auto operator [] (int i) const { return typename base<RANK>::slice<decltype(slice(0)), Mathlib>(slice(i)); }
                                                                                                      ^
In file included from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:50:0,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Vector.h: At global scope:
../UnitTests/../BC_Internals/BC_Core/Vector.h:45:15: error: ‘unary_expression_transpose’ was not declared in this scope
  const Vector<unary_expression_transpose<typename MTF::determine_scalar<T>::type, typename parent_class::functor_type>, Mathlib> t() const {
               ^~~~~~~~~~~~~~~~~~~~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Vector.h:45:118: error: template argument 1 is invalid
  const Vector<unary_expression_transpose<typename MTF::determine_scalar<T>::type, typename parent_class::functor_type>, Mathlib> t() const {
                                                                                                                      ^
../UnitTests/../BC_Internals/BC_Core/Vector.h:45:119: error: expected unqualified-id before ‘,’ token
  const Vector<unary_expression_transpose<typename MTF::determine_scalar<T>::type, typename parent_class::functor_type>, Mathlib> t() const {
                                                                                                                       ^
In file included from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:51:0,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Matrix.h:47:15: error: ‘unary_expression_transpose’ was not declared in this scope
  const Matrix<unary_expression_transpose<typename MTF::determine_scalar<T>::type, typename parent_class::functor_type>, Mathlib> t() const {
               ^~~~~~~~~~~~~~~~~~~~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Matrix.h:47:118: error: template argument 1 is invalid
  const Matrix<unary_expression_transpose<typename MTF::determine_scalar<T>::type, typename parent_class::functor_type>, Mathlib> t() const {
                                                                                                                      ^
../UnitTests/../BC_Internals/BC_Core/Matrix.h:47:119: error: expected unqualified-id before ‘,’ token
  const Matrix<unary_expression_transpose<typename MTF::determine_scalar<T>::type, typename parent_class::functor_type>, Mathlib> t() const {
                                                                                                                       ^
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:15:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h: In instantiation of ‘class BC::TensorInitializer<BC::Vector<BC::binary_expression<float, BC::mul, BC::Tensor_Core<BC::Vector<float> >, BC::Tensor_Core<BC::Vector<float> > >, BC::CPU>, void>’:
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:21:7:   required from ‘class BC::TensorBase<BC::Vector<BC::binary_expression<float, BC::mul, BC::Tensor_Core<BC::Vector<float> >, BC::Tensor_Core<BC::Vector<float> > >, BC::CPU> >’
../UnitTests/../BC_Internals/BC_Core/Vector.h:17:7:   required from ‘class BC::Vector<BC::binary_expression<float, BC::mul, BC::Tensor_Core<BC::Vector<float> >, BC::Tensor_Core<BC::Vector<float> > >, BC::CPU>’
../UnitTests/SpeedTests.h:43:19:   required from here
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h:28:15: error: ‘BC::TensorInitializer<derived, expression_tensor>::black_cat_array’ has incomplete type
  functor_type black_cat_array;
               ^~~~~~~~~~~~~~~
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:12:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:26:41: note: declaration of ‘using functor_type = BC::_functor<BC::Vector<BC::binary_expression<float, BC::mul, BC::Tensor_Core<BC::Vector<float> >, BC::Tensor_Core<BC::Vector<float> > >, BC::CPU> > {aka class BC::binary_expression<float, BC::mul, BC::Tensor_Core<BC::Vector<float> >, BC::Tensor_Core<BC::Vector<float> > >}’
 template<class,class,class,class> class binary_expression;
                                         ^~~~~~~~~~~~~~~~~
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:15:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h: In instantiation of ‘class BC::TensorInitializer<BC::Vector<BC::binary_expression<float, BC::assign, BC::Tensor_Core<BC::Vector<float> >, BC::binary_expression<float, BC::mul, BC::Tensor_Core<BC::Vector<float> >, BC::Tensor_Core<BC::Vector<float> > > >, BC::CPU>, void>’:
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:21:7:   required from ‘class BC::TensorBase<BC::Vector<BC::binary_expression<float, BC::assign, BC::Tensor_Core<BC::Vector<float> >, BC::binary_expression<float, BC::mul, BC::Tensor_Core<BC::Vector<float> >, BC::Tensor_Core<BC::Vector<float> > > >, BC::CPU> >’
../UnitTests/../BC_Internals/BC_Core/Vector.h:17:7:   required from ‘class BC::Vector<BC::binary_expression<float, BC::assign, BC::Tensor_Core<BC::Vector<float> >, BC::binary_expression<float, BC::mul, BC::Tensor_Core<BC::Vector<float> >, BC::Tensor_Core<BC::Vector<float> > > >, BC::CPU>’
../UnitTests/SpeedTests.h:43:24:   required from here
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h:28:15: error: ‘BC::TensorInitializer<derived, expression_tensor>::black_cat_array’ has incomplete type
  functor_type black_cat_array;
               ^~~~~~~~~~~~~~~
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:12:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:26:41: note: declaration of ‘using functor_type = BC::_functor<BC::Vector<BC::binary_expression<float, BC::assign, BC::Tensor_Core<BC::Vector<float> >, BC::binary_expression<float, BC::mul, BC::Tensor_Core<BC::Vector<float> >, BC::Tensor_Core<BC::Vector<float> > > >, BC::CPU> > {aka class BC::binary_expression<float, BC::assign, BC::Tensor_Core<BC::Vector<float> >, BC::binary_expression<float, BC::mul, BC::Tensor_Core<BC::Vector<float> >, BC::Tensor_Core<BC::Vector<float> > > >}’
 template<class,class,class,class> class binary_expression;
                                         ^~~~~~~~~~~~~~~~~
In file included from ../UnitTests/main.cpp:4:0:
../UnitTests/SpeedTests.h: In function ‘int speedTestsScalarIteration()’:
../UnitTests/SpeedTests.h:136:9: error: ‘using mat = class BC::Matrix<float> {aka class BC::Matrix<float>}’ has no member named ‘t’
   c = a.t() * b;
         ^
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:15:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h: In instantiation of ‘class BC::TensorInitializer<BC::Matrix<BC::binary_expression<float, BC::add, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> > >, BC::CPU>, void>’:
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:21:7:   required from ‘class BC::TensorBase<BC::Matrix<BC::binary_expression<float, BC::add, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> > >, BC::CPU> >’
../UnitTests/../BC_Internals/BC_Core/Matrix.h:17:7:   required from ‘class BC::Matrix<BC::binary_expression<float, BC::add, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> > >, BC::CPU>’
../UnitTests/SpeedTests.h:146:23:   required from here
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h:28:15: error: ‘BC::TensorInitializer<derived, expression_tensor>::black_cat_array’ has incomplete type
  functor_type black_cat_array;
               ^~~~~~~~~~~~~~~
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:12:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:26:41: note: declaration of ‘using functor_type = BC::_functor<BC::Matrix<BC::binary_expression<float, BC::add, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> > >, BC::CPU> > {aka class BC::binary_expression<float, BC::add, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> > >}’
 template<class,class,class,class> class binary_expression;
                                         ^~~~~~~~~~~~~~~~~
../UnitTests/main.cpp: In function ‘auto test()’:
../UnitTests/main.cpp:40:8: error: ‘using mat = class BC::Matrix<float> {aka class BC::Matrix<float>}’ has no member named ‘t’
  d = a.t();
        ^
../UnitTests/main.cpp:41:8: error: ‘using mat = class BC::Matrix<float> {aka class BC::Matrix<float>}’ has no member named ‘t’
  e = b.t();
        ^
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:15:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h: In instantiation of ‘class BC::TensorInitializer<BC::Matrix<BC::binary_expression_dotproduct<float, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::CPU>, void>’:
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:21:7:   required from ‘class BC::TensorBase<BC::Matrix<BC::binary_expression_dotproduct<float, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::CPU> >’
../UnitTests/../BC_Internals/BC_Core/Matrix.h:17:7:   required from ‘class BC::Matrix<BC::binary_expression_dotproduct<float, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::CPU>’
../UnitTests/main.cpp:47:10:   required from here
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h:28:15: error: ‘BC::TensorInitializer<derived, expression_tensor>::black_cat_array’ has incomplete type
  functor_type black_cat_array;
               ^~~~~~~~~~~~~~~
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:12:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:29:41: note: declaration of ‘using functor_type = BC::_functor<BC::Matrix<BC::binary_expression_dotproduct<float, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::CPU> > {aka class BC::binary_expression_dotproduct<float, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>}’
 template<class,class,class,class> class binary_expression_dotproduct;
                                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
../UnitTests/main.cpp:50:8: error: ‘using mat = class BC::Matrix<float> {aka class BC::Matrix<float>}’ has no member named ‘t’
  c = a.t() * b.t();
        ^
../UnitTests/main.cpp:50:16: error: ‘using mat = class BC::Matrix<float> {aka class BC::Matrix<float>}’ has no member named ‘t’
  c = a.t() * b.t();
                ^
../UnitTests/main.cpp:53:8: error: ‘using mat = class BC::Matrix<float> {aka class BC::Matrix<float>}’ has no member named ‘t’
  c = a.t() * e;
        ^
../UnitTests/main.cpp:56:12: error: ‘using mat = class BC::Matrix<float> {aka class BC::Matrix<float>}’ has no member named ‘t’
  c = d * b.t();
            ^
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:15:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h: In instantiation of ‘class BC::TensorInitializer<BC::Matrix<BC::binary_expression_scalar_R<float, BC::mul, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >, BC::CPU>, void>’:
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:21:7:   required from ‘class BC::TensorBase<BC::Matrix<BC::binary_expression_scalar_R<float, BC::mul, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >, BC::CPU> >’
../UnitTests/../BC_Internals/BC_Core/Matrix.h:17:7:   required from ‘class BC::Matrix<BC::binary_expression_scalar_R<float, BC::mul, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >, BC::CPU>’
../UnitTests/main.cpp:59:16:   required from here
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h:28:15: error: ‘BC::TensorInitializer<derived, expression_tensor>::black_cat_array’ has incomplete type
  functor_type black_cat_array;
               ^~~~~~~~~~~~~~~
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:12:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:28:41: note: declaration of ‘using functor_type = BC::_functor<BC::Matrix<BC::binary_expression_scalar_R<float, BC::mul, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >, BC::CPU> > {aka class BC::binary_expression_scalar_R<float, BC::mul, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >}’
 template<class,class,class,class> class binary_expression_scalar_R;
                                         ^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:15:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h: In instantiation of ‘class BC::TensorInitializer<BC::Matrix<BC::binary_expression_dotproduct<float, BC::binary_expression_scalar_R<float, BC::mul, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::CPU>, void>’:
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:21:7:   required from ‘class BC::TensorBase<BC::Matrix<BC::binary_expression_dotproduct<float, BC::binary_expression_scalar_R<float, BC::mul, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::CPU> >’
../UnitTests/../BC_Internals/BC_Core/Matrix.h:17:7:   required from ‘class BC::Matrix<BC::binary_expression_dotproduct<float, BC::binary_expression_scalar_R<float, BC::mul, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::CPU>’
../UnitTests/main.cpp:59:20:   required from here
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h:28:15: error: ‘BC::TensorInitializer<derived, expression_tensor>::black_cat_array’ has incomplete type
  functor_type black_cat_array;
               ^~~~~~~~~~~~~~~
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:12:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:29:41: note: declaration of ‘using functor_type = BC::_functor<BC::Matrix<BC::binary_expression_dotproduct<float, BC::binary_expression_scalar_R<float, BC::mul, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::CPU> > {aka class BC::binary_expression_dotproduct<float, BC::binary_expression_scalar_R<float, BC::mul, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>}’
 template<class,class,class,class> class binary_expression_dotproduct;
                                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:15:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h: In instantiation of ‘class BC::TensorInitializer<BC::Matrix<BC::binary_expression_scalar_L<float, BC::mul, BC::Tensor_Core<BC::Scalar<float, BC::CPU> >, BC::Tensor_Core<BC::Matrix<float> > >, BC::CPU>, void>’:
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:21:7:   required from ‘class BC::TensorBase<BC::Matrix<BC::binary_expression_scalar_L<float, BC::mul, BC::Tensor_Core<BC::Scalar<float, BC::CPU> >, BC::Tensor_Core<BC::Matrix<float> > >, BC::CPU> >’
../UnitTests/../BC_Internals/BC_Core/Matrix.h:17:7:   required from ‘class BC::Matrix<BC::binary_expression_scalar_L<float, BC::mul, BC::Tensor_Core<BC::Scalar<float, BC::CPU> >, BC::Tensor_Core<BC::Matrix<float> > >, BC::CPU>’
../UnitTests/main.cpp:62:16:   required from here
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h:28:15: error: ‘BC::TensorInitializer<derived, expression_tensor>::black_cat_array’ has incomplete type
  functor_type black_cat_array;
               ^~~~~~~~~~~~~~~
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:12:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:27:41: note: declaration of ‘using functor_type = BC::_functor<BC::Matrix<BC::binary_expression_scalar_L<float, BC::mul, BC::Tensor_Core<BC::Scalar<float, BC::CPU> >, BC::Tensor_Core<BC::Matrix<float> > >, BC::CPU> > {aka class BC::binary_expression_scalar_L<float, BC::mul, BC::Tensor_Core<BC::Scalar<float, BC::CPU> >, BC::Tensor_Core<BC::Matrix<float> > >}’
 template<class,class,class,class> class binary_expression_scalar_L;
                                         ^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:15:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h: In instantiation of ‘class BC::TensorInitializer<BC::Matrix<BC::binary_expression_dotproduct<float, BC::binary_expression_scalar_L<float, BC::mul, BC::Tensor_Core<BC::Scalar<float, BC::CPU> >, BC::Tensor_Core<BC::Matrix<float> > >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::CPU>, void>’:
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:21:7:   required from ‘class BC::TensorBase<BC::Matrix<BC::binary_expression_dotproduct<float, BC::binary_expression_scalar_L<float, BC::mul, BC::Tensor_Core<BC::Scalar<float, BC::CPU> >, BC::Tensor_Core<BC::Matrix<float> > >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::CPU> >’
../UnitTests/../BC_Internals/BC_Core/Matrix.h:17:7:   required from ‘class BC::Matrix<BC::binary_expression_dotproduct<float, BC::binary_expression_scalar_L<float, BC::mul, BC::Tensor_Core<BC::Scalar<float, BC::CPU> >, BC::Tensor_Core<BC::Matrix<float> > >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::CPU>’
../UnitTests/main.cpp:62:20:   required from here
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h:28:15: error: ‘BC::TensorInitializer<derived, expression_tensor>::black_cat_array’ has incomplete type
  functor_type black_cat_array;
               ^~~~~~~~~~~~~~~
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:12:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:29:41: note: declaration of ‘using functor_type = BC::_functor<BC::Matrix<BC::binary_expression_dotproduct<float, BC::binary_expression_scalar_L<float, BC::mul, BC::Tensor_Core<BC::Scalar<float, BC::CPU> >, BC::Tensor_Core<BC::Matrix<float> > >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::CPU> > {aka class BC::binary_expression_dotproduct<float, BC::binary_expression_scalar_L<float, BC::mul, BC::Tensor_Core<BC::Scalar<float, BC::CPU> >, BC::Tensor_Core<BC::Matrix<float> > >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>}’
 template<class,class,class,class> class binary_expression_dotproduct;
                                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:15:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h: In instantiation of ‘class BC::TensorInitializer<BC::Matrix<BC::binary_expression_scalar_R<float, BC::mul, BC::binary_expression_dotproduct<float, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >, BC::CPU>, void>’:
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:21:7:   required from ‘class BC::TensorBase<BC::Matrix<BC::binary_expression_scalar_R<float, BC::mul, BC::binary_expression_dotproduct<float, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >, BC::CPU> >’
../UnitTests/../BC_Internals/BC_Core/Matrix.h:17:7:   required from ‘class BC::Matrix<BC::binary_expression_scalar_R<float, BC::mul, BC::binary_expression_dotproduct<float, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >, BC::CPU>’
../UnitTests/main.cpp:64:20:   required from here
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h:28:15: error: ‘BC::TensorInitializer<derived, expression_tensor>::black_cat_array’ has incomplete type
  functor_type black_cat_array;
               ^~~~~~~~~~~~~~~
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:12:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:28:41: note: declaration of ‘using functor_type = BC::_functor<BC::Matrix<BC::binary_expression_scalar_R<float, BC::mul, BC::binary_expression_dotproduct<float, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >, BC::CPU> > {aka class BC::binary_expression_scalar_R<float, BC::mul, BC::binary_expression_dotproduct<float, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >}’
 template<class,class,class,class> class binary_expression_scalar_R;
                                         ^~~~~~~~~~~~~~~~~~~~~~~~~~
../UnitTests/main.cpp:76:8: error: ‘using mat = class BC::Matrix<float> {aka class BC::Matrix<float>}’ has no member named ‘t’
  c = a.t() * b.t();
        ^
../UnitTests/main.cpp:76:16: error: ‘using mat = class BC::Matrix<float> {aka class BC::Matrix<float>}’ has no member named ‘t’
  c = a.t() * b.t();
                ^
../UnitTests/main.cpp:80:8: error: ‘using mat = class BC::Matrix<float> {aka class BC::Matrix<float>}’ has no member named ‘t’
  c = a.t() * A * (b.t() * A);
        ^
../UnitTests/main.cpp:80:21: error: ‘using mat = class BC::Matrix<float> {aka class BC::Matrix<float>}’ has no member named ‘t’
  c = a.t() * A * (b.t() * A);
                     ^
../UnitTests/main.cpp:94:14: error: invalid operands of types ‘void’ and ‘void’ to binary ‘operator+’
  d[1] = d[1] + d[1];
         ~~~~~^~~~~~
../UnitTests/main.cpp:99:8: error: invalid types ‘void[int]’ for array subscript
  d[1][1] = d[1][1] + d[1][1];
        ^
../UnitTests/main.cpp:99:18: error: invalid types ‘void[int]’ for array subscript
  d[1][1] = d[1][1] + d[1][1];
                  ^
../UnitTests/main.cpp:99:28: error: invalid types ‘void[int]’ for array subscript
  d[1][1] = d[1][1] + d[1][1];
                            ^
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:13:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Utility.h: In instantiation of ‘void BC::Tensor_Utility<deriv, typename std::enable_if<(isPrim<typename BC::determine_functor< <template-parameter-1-1> >::fscal> || BC::MTF::isCore<typename BC::determine_functor< <template-parameter-1-1> >::type>::conditional), void>::type>::read(std::ifstream&, bool, bool) [with deriv = BC::Matrix<double>; typename std::enable_if<(isPrim<typename BC::determine_functor< <template-parameter-1-1> >::fscal> || BC::MTF::isCore<typename BC::determine_functor< <template-parameter-1-1> >::type>::conditional), void>::type = void; std::ifstream = std::basic_ifstream<char>]’:
../UnitTests/main.cpp:113:15:   required from here
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Utility.h:139:22: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
    for (int i = 0; i < dims.size(); ++i) {
                    ~~^~~~~~~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Utility.h:145:92: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
    MATHLIB::HostToDevice(asDerived().data().core(), &data[data[0] + 1], asDerived().size() > data.size() ? data.size() : asDerived().size());
                                                                                             
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:13:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Utility.h:147:86: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
    MATHLIB::HostToDevice(asDerived().data().core(), &data[0],     asDerived().size() > data.size() ? data.size() : asDerived().size());
                                                                                       
In file included from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:32:0,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_MathLibraries/Mathematics_CPU.h: In instantiation of ‘static void BC::CPU::copy(T&, const J&, int) [with T = BC::Tensor_Core<BC::Matrix<float> >; J = BC::binary_expression_dotproduct<float, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>]’:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:218:21:   required from ‘derived& BC::Tensor_Operations< <template-parameter-1-1> >::operator=(const BC::Tensor_Operations<param_deriv>&) [with pDeriv = BC::Matrix<BC::binary_expression_dotproduct<float, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::CPU>; derived = BC::Matrix<float>]’
../UnitTests/../BC_Internals/BC_Core/Matrix.h:45:83:   required from ‘BC::Matrix< <template-parameter-1-1>, ML>& BC::Matrix< <template-parameter-1-1>, ML>::operator=(const BC::Matrix<U, Mathlib>&) [with U = BC::binary_expression_dotproduct<float, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>; T = float; Mathlib = BC::CPU]’
../UnitTests/main.cpp:47:10:   required from here
../UnitTests/../BC_Internals/BC_MathLibraries/Mathematics_CPU.h:70:13: error: no match for ‘operator[]’ (operand types are ‘const BC::binary_expression_dotproduct<float, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>’ and ‘int’)
     t[i] = j[i];
            ~^
../UnitTests/../BC_Internals/BC_MathLibraries/Mathematics_CPU.h:76:12: error: no match for ‘operator[]’ (operand types are ‘const BC::binary_expression_dotproduct<float, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>’ and ‘int’)
    t[i] = j[i];
           ~^
../UnitTests/../BC_Internals/BC_MathLibraries/Mathematics_CPU.h: In instantiation of ‘static void BC::CPU::copy(T&, const J&, int) [with T = BC::Tensor_Core<BC::Matrix<float> >; J = BC::binary_expression_dotproduct<float, BC::binary_expression_scalar_R<float, BC::mul, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>]’:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:218:21:   required from ‘derived& BC::Tensor_Operations< <template-parameter-1-1> >::operator=(const BC::Tensor_Operations<param_deriv>&) [with pDeriv = BC::Matrix<BC::binary_expression_dotproduct<float, BC::binary_expression_scalar_R<float, BC::mul, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::CPU>; derived = BC::Matrix<float>]’
../UnitTests/../BC_Internals/BC_Core/Matrix.h:45:83:   required from ‘BC::Matrix< <template-parameter-1-1>, ML>& BC::Matrix< <template-parameter-1-1>, ML>::operator=(const BC::Matrix<U, Mathlib>&) [with U = BC::binary_expression_dotproduct<float, BC::binary_expression_scalar_R<float, BC::mul, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>; T = float; Mathlib = BC::CPU]’
../UnitTests/main.cpp:59:20:   required from here
../UnitTests/../BC_Internals/BC_MathLibraries/Mathematics_CPU.h:70:13: error: no match for ‘operator[]’ (operand types are ‘const BC::binary_expression_dotproduct<float, BC::binary_expression_scalar_R<float, BC::mul, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>’ and ‘int’)
     t[i] = j[i];
            ~^
../UnitTests/../BC_Internals/BC_MathLibraries/Mathematics_CPU.h:76:12: error: no match for ‘operator[]’ (operand types are ‘const BC::binary_expression_dotproduct<float, BC::binary_expression_scalar_R<float, BC::mul, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>’ and ‘int’)
    t[i] = j[i];
           ~^
../UnitTests/../BC_Internals/BC_MathLibraries/Mathematics_CPU.h: In instantiation of ‘static void BC::CPU::copy(T&, const J&, int) [with T = BC::Tensor_Core<BC::Matrix<float> >; J = BC::binary_expression_dotproduct<float, BC::binary_expression_scalar_L<float, BC::mul, BC::Tensor_Core<BC::Scalar<float, BC::CPU> >, BC::Tensor_Core<BC::Matrix<float> > >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>]’:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:218:21:   required from ‘derived& BC::Tensor_Operations< <template-parameter-1-1> >::operator=(const BC::Tensor_Operations<param_deriv>&) [with pDeriv = BC::Matrix<BC::binary_expression_dotproduct<float, BC::binary_expression_scalar_L<float, BC::mul, BC::Tensor_Core<BC::Scalar<float, BC::CPU> >, BC::Tensor_Core<BC::Matrix<float> > >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::CPU>; derived = BC::Matrix<float>]’
../UnitTests/../BC_Internals/BC_Core/Matrix.h:45:83:   required from ‘BC::Matrix< <template-parameter-1-1>, ML>& BC::Matrix< <template-parameter-1-1>, ML>::operator=(const BC::Matrix<U, Mathlib>&) [with U = BC::binary_expression_dotproduct<float, BC::binary_expression_scalar_L<float, BC::mul, BC::Tensor_Core<BC::Scalar<float, BC::CPU> >, BC::Tensor_Core<BC::Matrix<float> > >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>; T = float; Mathlib = BC::CPU]’
../UnitTests/main.cpp:62:20:   required from here
../UnitTests/../BC_Internals/BC_MathLibraries/Mathematics_CPU.h:70:13: error: no match for ‘operator[]’ (operand types are ‘const BC::binary_expression_dotproduct<float, BC::binary_expression_scalar_L<float, BC::mul, BC::Tensor_Core<BC::Scalar<float, BC::CPU> >, BC::Tensor_Core<BC::Matrix<float> > >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>’ and ‘int’)
     t[i] = j[i];
            ~^
../UnitTests/../BC_Internals/BC_MathLibraries/Mathematics_CPU.h:76:12: error: no match for ‘operator[]’ (operand types are ‘const BC::binary_expression_dotproduct<float, BC::binary_expression_scalar_L<float, BC::mul, BC::Tensor_Core<BC::Scalar<float, BC::CPU> >, BC::Tensor_Core<BC::Matrix<float> > >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>’ and ‘int’)
    t[i] = j[i];
           ~^
../UnitTests/../BC_Internals/BC_MathLibraries/Mathematics_CPU.h: In instantiation of ‘static void BC::CPU::copy(T&, const J&, int) [with T = BC::Tensor_Core<BC::Matrix<float> >; J = BC::binary_expression_scalar_R<float, BC::mul, BC::binary_expression_dotproduct<float, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >]’:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:218:21:   required from ‘derived& BC::Tensor_Operations< <template-parameter-1-1> >::operator=(const BC::Tensor_Operations<param_deriv>&) [with pDeriv = BC::Matrix<BC::binary_expression_scalar_R<float, BC::mul, BC::binary_expression_dotproduct<float, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >, BC::CPU>; derived = BC::Matrix<float>]’
../UnitTests/../BC_Internals/BC_Core/Matrix.h:45:83:   required from ‘BC::Matrix< <template-parameter-1-1>, ML>& BC::Matrix< <template-parameter-1-1>, ML>::operator=(const BC::Matrix<U, Mathlib>&) [with U = BC::binary_expression_scalar_R<float, BC::mul, BC::binary_expression_dotproduct<float, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >; T = float; Mathlib = BC::CPU]’
../UnitTests/main.cpp:64:20:   required from here
../UnitTests/../BC_Internals/BC_MathLibraries/Mathematics_CPU.h:70:13: error: no match for ‘operator[]’ (operand types are ‘const BC::binary_expression_scalar_R<float, BC::mul, BC::binary_expression_dotproduct<float, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >’ and ‘int’)
     t[i] = j[i];
            ~^
../UnitTests/../BC_Internals/BC_MathLibraries/Mathematics_CPU.h:76:12: error: no match for ‘operator[]’ (operand types are ‘const BC::binary_expression_scalar_R<float, BC::mul, BC::binary_expression_dotproduct<float, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >’ and ‘int’)
    t[i] = j[i];
           ~^
In file included from ../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Core_Slice.h:17:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Core.h:13,
                 from ../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h:12,
                 from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:15,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Core_Scalar.h: In instantiation of ‘BC::Tensor_Scalar<PARENT>::Tensor_Scalar(BC::Tensor_Scalar<PARENT>::scalar*, const PARENT&) [with PARENT = BC::Tensor_Core<BC::Matrix<float> >; BC::Tensor_Scalar<PARENT>::scalar = float]’:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h:33:63:   required from ‘BC::TensorInitializer<derived, expression_tensor>::TensorInitializer(const params& ...) [with params = {float*, BC::Tensor_Core<BC::Matrix<float, BC::CPU> >}; derived = BC::Scalar<BC::Tensor_Scalar<BC::Tensor_Core<BC::Matrix<float> > >, BC::CPU>; expression_tensor = void]’
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:50:51:   required from ‘BC::TensorBase<derived>::TensorBase(const params& ...) [with params = {float*, BC::Tensor_Core<BC::Matrix<float, BC::CPU> >}; derived = BC::Scalar<BC::Tensor_Scalar<BC::Tensor_Core<BC::Matrix<float> > >, BC::CPU>]’
../UnitTests/../BC_Internals/BC_Core/Scalar.h:61:97:   required from ‘BC::Scalar< <template-parameter-1-1>, ML>::Scalar(const var1&, const var2&, const params& ...) [with var1 = float*; var2 = BC::Tensor_Core<BC::Matrix<float> >; params = {}; T = BC::Tensor_Scalar<BC::Tensor_Core<BC::Matrix<float> > >; Mathlib = BC::CPU]’
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:92:19:   required from ‘auto BC::TensorBase<derived>::getScalar(int) [with derived = BC::Matrix<float>]’
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:96:52:   required from ‘auto BC::TensorBase<derived>::operator()(int) [with derived = BC::Matrix<float>]’
../UnitTests/main.cpp:33:6:   required from here
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Core_Scalar.h:36:10: warning: ‘BC::Tensor_Scalar<BC::Tensor_Core<BC::Matrix<float> > >::array_slice’ will be initialized after [-Wreorder]
  scalar* array_slice;
          ^~~~~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Core_Scalar.h:35:16: warning:   ‘const BC::Tensor_Core<BC::Matrix<float> >& BC::Tensor_Scalar<BC::Tensor_Core<BC::Matrix<float> > >::parent’ [-Wreorder]
  const PARENT& parent;
                ^~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Core_Scalar.h:41:2: warning:   when initialized here [-Wreorder]
  Tensor_Scalar(scalar* array, const PARENT& parent_) : array_slice(array), parent(parent_) {}
  ^~~~~~~~~~~~~
In file included from ../UnitTests/../BC_Internals/BC_MathLibraries/Mathematics_CPU.h:15:0,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:32,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_MathLibraries/BC_PrintFunctions.h: In instantiation of ‘void BC::printHelper(const T&, int_ranks, int, std::__cxx11::string, int) [with T = const float*; int_ranks = int*; std::__cxx11::string = std::__cxx11::basic_string<char>]’:
../UnitTests/../BC_Internals/BC_MathLibraries/BC_PrintFunctions.h:102:13:   required from ‘void BC::print(const T&, RANKS, int, int) [with T = const float*; RANKS = int*]’
../UnitTests/../BC_Internals/BC_MathLibraries/Mathematics_CPU.h:98:12:   required from ‘static void BC::CPU::print(T, RANKS, int, int) [with T = const float*; RANKS = int*]’
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Utility.h:82:17:   required from ‘void BC::Tensor_Utility<deriv, typename std::enable_if<(isPrim<typename BC::determine_functor< <template-parameter-1-1> >::fscal> || BC::MTF::isCore<typename BC::determine_functor< <template-parameter-1-1> >::type>::conditional), void>::type>::print() const [with deriv = BC::Matrix<float>; typename std::enable_if<(isPrim<typename BC::determine_functor< <template-parameter-1-1> >::fscal> || BC::MTF::isCore<typename BC::determine_functor< <template-parameter-1-1> >::type>::conditional), void>::type = void]’
../UnitTests/main.cpp:37:10:   required from here
../UnitTests/../BC_Internals/BC_MathLibraries/BC_PrintFunctions.h:43:38: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
     str = str.substr(0, str.length() < printSpace ? str.length() : printSpace);
                                       
../UnitTests/../BC_Internals/BC_MathLibraries/BC_PrintFunctions.h:46:22: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
     if (str.length() < printSpace)
                       
../UnitTests/../BC_Internals/BC_MathLibraries/BC_PrintFunctions.h:67:37: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
    str = str.substr(0, str.length() < printSpace ? str.length() : printSpace);
                                      
../UnitTests/../BC_Internals/BC_MathLibraries/BC_PrintFunctions.h:70:21: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
    if (str.length() < printSpace)
                      
../UnitTests/../BC_Internals/BC_MathLibraries/BC_PrintFunctions.h: In instantiation of ‘void BC::printHelper(const T&, int_ranks, int, std::__cxx11::string, int) [with T = const double*; int_ranks = int*; std::__cxx11::string = std::__cxx11::basic_string<char>]’:
../UnitTests/../BC_Internals/BC_MathLibraries/BC_PrintFunctions.h:102:13:   required from ‘void BC::print(const T&, RANKS, int, int) [with T = const double*; RANKS = int*]’
../UnitTests/../BC_Internals/BC_MathLibraries/Mathematics_CPU.h:98:12:   required from ‘static void BC::CPU::print(T, RANKS, int, int) [with T = const double*; RANKS = int*]’
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Utility.h:82:17:   required from ‘void BC::Tensor_Utility<deriv, typename std::enable_if<(isPrim<typename BC::determine_functor< <template-parameter-1-1> >::fscal> || BC::MTF::isCore<typename BC::determine_functor< <template-parameter-1-1> >::type>::conditional), void>::type>::print() const [with deriv = BC::Matrix<double>; typename std::enable_if<(isPrim<typename BC::determine_functor< <template-parameter-1-1> >::fscal> || BC::MTF::isCore<typename BC::determine_functor< <template-parameter-1-1> >::type>::conditional), void>::type = void]’
../UnitTests/main.cpp:114:14:   required from here
../UnitTests/../BC_Internals/BC_MathLibraries/BC_PrintFunctions.h:43:38: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
     str = str.substr(0, str.length() < printSpace ? str.length() : printSpace);
                                       
../UnitTests/../BC_Internals/BC_MathLibraries/BC_PrintFunctions.h:46:22: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
     if (str.length() < printSpace)
                       
../UnitTests/../BC_Internals/BC_MathLibraries/BC_PrintFunctions.h:67:37: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
    str = str.substr(0, str.length() < printSpace ? str.length() : printSpace);
                                      
../UnitTests/../BC_Internals/BC_MathLibraries/BC_PrintFunctions.h:70:21: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
    if (str.length() < printSpace)
                      
make: *** [UnitTests/main.o] Error 1
UnitTests/subdir.mk:18: recipe for target 'UnitTests/main.o' failed
17:15:29 **** Incremental Build of configuration Debug for project BlackCat_LibraryCPU ****
make all 
Building file: ../UnitTests/main.cpp
Invoking: GCC C++ Compiler
g++ -O0 -g3 -Wall -c -fmessage-length=0 -MMD -MP -MF"UnitTests/main.d" -MT"UnitTests/main.o" -o "UnitTests/main.o" "../UnitTests/main.cpp"
In file included from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:32:0,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_MathLibraries/Mathematics_CPU.h:74:0: warning: ignoring #pragma omp parallel [-Wunknown-pragmas]
 #pragma omp parallel for
 
../UnitTests/../BC_Internals/BC_MathLibraries/Mathematics_CPU.h:78:0: warning: ignoring #pragma omp barrier [-Wunknown-pragmas]
 #pragma omp barrier
 
../UnitTests/../BC_Internals/BC_MathLibraries/Mathematics_CPU.h:88:0: warning: ignoring #pragma omp parallel [-Wunknown-pragmas]
 #pragma omp parallel for
 
../UnitTests/../BC_Internals/BC_MathLibraries/Mathematics_CPU.h:92:0: warning: ignoring #pragma omp barrier [-Wunknown-pragmas]
 #pragma omp barrier
 
In file included from ../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Core_Slice.h:17:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Core.h:13,
                 from ../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h:12,
                 from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:15,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Core_Scalar.h:22:0: warning: "__BCinline__" redefined
 #define __BCinline__
 
In file included from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:29:0,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Expressions/BlackCat_Internal_Definitions.h:25:0: note: this is the location of the previous definition
 #define __BCinline__ __BC_gcpu__ __attribute__((always_inline))
 
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:13:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Utility.h: In member function ‘auto BC::Tensor_Utility<deriv, <template-parameter-1-2> >::eval() const’:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Utility.h:34:45: error: expected ‘(’ before ‘<’ token
   return typename MTF::shell_of<deriv>::type<_scalar<deriv>, _mathlib<deriv>>(this->asDerived());
                                             ^
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Utility.h:34:60: error: expected primary-expression before ‘,’ token
   return typename MTF::shell_of<deriv>::type<_scalar<deriv>, _mathlib<deriv>>(this->asDerived());
                                                            ^
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Utility.h:34:76: error: expected primary-expression before ‘>’ token
   return typename MTF::shell_of<deriv>::type<_scalar<deriv>, _mathlib<deriv>>(this->asDerived());
                                                                            ^~
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:15:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h: At global scope:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h:74:54: error: expected ‘;’ before ‘<’ token
  using derived_alt = typename shell_of<derived>::type<T, Mathlib>;
                                                      ^
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h:77:26: error: ‘derived_alt’ does not name a type
  TensorInitializer(const derived_alt<U>&  tensor) : black_cat_array(tensor.innerShape()) {
                          ^~~~~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h:77:37: error: expected ‘,’ or ‘...’ before ‘<’ token
  TensorInitializer(const derived_alt<U>&  tensor) : black_cat_array(tensor.innerShape()) {
                                     ^
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h: In constructor ‘BC::TensorInitializer<_tensor<t, ml>, typename std::enable_if<BC::MTF::isCorePure<t>::conditional, void>::type>::TensorInitializer(int)’:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h:77:69: error: ‘tensor’ was not declared in this scope
  TensorInitializer(const derived_alt<U>&  tensor) : black_cat_array(tensor.innerShape()) {
                                                                     ^~~~~~
In file included from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10:0,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/TensorBase.h: At global scope:
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:38:71: error: expected ‘;’ before ‘<’ token
  template<class    U> using deriv   = typename shell_of<derived>::type<U, Mathlib>;
                                                                       ^
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:39:76: error: expected ‘;’ before ‘<’ token
  template<class... U> using functor = typename shell_of<functor_type>::type<U...>;
                                                                            ^
../UnitTests/../BC_Internals/BC_Core/TensorBase.h: In member function ‘auto BC::TensorBase<derived>::operator[](int)’:
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:83:68: error: expected ‘(’ before ‘<’ token
     auto operator [] (int i)    { return typename base<RANK>::slice<decltype(slice(0)), Mathlib>(slice(i)); }
                                                                    ^
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:83:69: error: expected primary-expression before ‘decltype’
     auto operator [] (int i)    { return typename base<RANK>::slice<decltype(slice(0)), Mathlib>(slice(i)); }
                                                                     ^~~~~~~~
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:83:69: error: expected ‘;’ before ‘decltype’
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:83:87: error: expected unqualified-id before ‘,’ token
     auto operator [] (int i)    { return typename base<RANK>::slice<decltype(slice(0)), Mathlib>(slice(i)); }
                                                                                       ^
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:83:96: error: expected initializer before ‘>’ token
     auto operator [] (int i)    { return typename base<RANK>::slice<decltype(slice(0)), Mathlib>(slice(i)); }
                                                                                                ^
../UnitTests/../BC_Internals/BC_Core/TensorBase.h: In member function ‘const auto BC::TensorBase<derived>::operator[](int) const’:
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:84:74: error: expected ‘(’ before ‘<’ token
  const auto operator [] (int i) const { return typename base<RANK>::slice<decltype(slice(0)), Mathlib>(slice(i)); }
                                                                          ^
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:84:75: error: expected primary-expression before ‘decltype’
  const auto operator [] (int i) const { return typename base<RANK>::slice<decltype(slice(0)), Mathlib>(slice(i)); }
                                                                           ^~~~~~~~
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:84:75: error: expected ‘;’ before ‘decltype’
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:84:93: error: expected unqualified-id before ‘,’ token
  const auto operator [] (int i) const { return typename base<RANK>::slice<decltype(slice(0)), Mathlib>(slice(i)); }
                                                                                             ^
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:84:102: error: expected initializer before ‘>’ token
  const auto operator [] (int i) const { return typename base<RANK>::slice<decltype(slice(0)), Mathlib>(slice(i)); }
                                                                                                      ^
In file included from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:50:0,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Vector.h: At global scope:
../UnitTests/../BC_Internals/BC_Core/Vector.h:45:15: error: ‘unary_expression_transpose’ was not declared in this scope
  const Vector<unary_expression_transpose<typename MTF::determine_scalar<T>::type, typename parent_class::functor_type>, Mathlib> t() const {
               ^~~~~~~~~~~~~~~~~~~~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Vector.h:45:118: error: template argument 1 is invalid
  const Vector<unary_expression_transpose<typename MTF::determine_scalar<T>::type, typename parent_class::functor_type>, Mathlib> t() const {
                                                                                                                      ^
../UnitTests/../BC_Internals/BC_Core/Vector.h:45:119: error: expected unqualified-id before ‘,’ token
  const Vector<unary_expression_transpose<typename MTF::determine_scalar<T>::type, typename parent_class::functor_type>, Mathlib> t() const {
                                                                                                                       ^
In file included from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:51:0,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Matrix.h:47:15: error: ‘unary_expression_transpose’ was not declared in this scope
  const Matrix<unary_expression_transpose<typename MTF::determine_scalar<T>::type, typename parent_class::functor_type>, Mathlib> t() const {
               ^~~~~~~~~~~~~~~~~~~~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Matrix.h:47:118: error: template argument 1 is invalid
  const Matrix<unary_expression_transpose<typename MTF::determine_scalar<T>::type, typename parent_class::functor_type>, Mathlib> t() const {
                                                                                                                      ^
../UnitTests/../BC_Internals/BC_Core/Matrix.h:47:119: error: expected unqualified-id before ‘,’ token
  const Matrix<unary_expression_transpose<typename MTF::determine_scalar<T>::type, typename parent_class::functor_type>, Mathlib> t() const {
                                                                                                                       ^
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:15:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h: In instantiation of ‘class BC::TensorInitializer<BC::Vector<BC::binary_expression<float, BC::mul, BC::Tensor_Core<BC::Vector<float> >, BC::Tensor_Core<BC::Vector<float> > >, BC::CPU>, void>’:
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:21:7:   required from ‘class BC::TensorBase<BC::Vector<BC::binary_expression<float, BC::mul, BC::Tensor_Core<BC::Vector<float> >, BC::Tensor_Core<BC::Vector<float> > >, BC::CPU> >’
../UnitTests/../BC_Internals/BC_Core/Vector.h:17:7:   required from ‘class BC::Vector<BC::binary_expression<float, BC::mul, BC::Tensor_Core<BC::Vector<float> >, BC::Tensor_Core<BC::Vector<float> > >, BC::CPU>’
../UnitTests/SpeedTests.h:43:19:   required from here
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h:28:15: error: ‘BC::TensorInitializer<derived, expression_tensor>::black_cat_array’ has incomplete type
  functor_type black_cat_array;
               ^~~~~~~~~~~~~~~
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:12:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:26:41: note: declaration of ‘using functor_type = BC::_functor<BC::Vector<BC::binary_expression<float, BC::mul, BC::Tensor_Core<BC::Vector<float> >, BC::Tensor_Core<BC::Vector<float> > >, BC::CPU> > {aka class BC::binary_expression<float, BC::mul, BC::Tensor_Core<BC::Vector<float> >, BC::Tensor_Core<BC::Vector<float> > >}’
 template<class,class,class,class> class binary_expression;
                                         ^~~~~~~~~~~~~~~~~
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:15:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h: In instantiation of ‘class BC::TensorInitializer<BC::Vector<BC::binary_expression<float, BC::assign, BC::Tensor_Core<BC::Vector<float> >, BC::binary_expression<float, BC::mul, BC::Tensor_Core<BC::Vector<float> >, BC::Tensor_Core<BC::Vector<float> > > >, BC::CPU>, void>’:
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:21:7:   required from ‘class BC::TensorBase<BC::Vector<BC::binary_expression<float, BC::assign, BC::Tensor_Core<BC::Vector<float> >, BC::binary_expression<float, BC::mul, BC::Tensor_Core<BC::Vector<float> >, BC::Tensor_Core<BC::Vector<float> > > >, BC::CPU> >’
../UnitTests/../BC_Internals/BC_Core/Vector.h:17:7:   required from ‘class BC::Vector<BC::binary_expression<float, BC::assign, BC::Tensor_Core<BC::Vector<float> >, BC::binary_expression<float, BC::mul, BC::Tensor_Core<BC::Vector<float> >, BC::Tensor_Core<BC::Vector<float> > > >, BC::CPU>’
../UnitTests/SpeedTests.h:43:24:   required from here
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h:28:15: error: ‘BC::TensorInitializer<derived, expression_tensor>::black_cat_array’ has incomplete type
  functor_type black_cat_array;
               ^~~~~~~~~~~~~~~
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:12:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:26:41: note: declaration of ‘using functor_type = BC::_functor<BC::Vector<BC::binary_expression<float, BC::assign, BC::Tensor_Core<BC::Vector<float> >, BC::binary_expression<float, BC::mul, BC::Tensor_Core<BC::Vector<float> >, BC::Tensor_Core<BC::Vector<float> > > >, BC::CPU> > {aka class BC::binary_expression<float, BC::assign, BC::Tensor_Core<BC::Vector<float> >, BC::binary_expression<float, BC::mul, BC::Tensor_Core<BC::Vector<float> >, BC::Tensor_Core<BC::Vector<float> > > >}’
 template<class,class,class,class> class binary_expression;
                                         ^~~~~~~~~~~~~~~~~
In file included from ../UnitTests/main.cpp:4:0:
../UnitTests/SpeedTests.h: In function ‘int speedTestsScalarIteration()’:
../UnitTests/SpeedTests.h:136:9: error: ‘using mat = class BC::Matrix<float> {aka class BC::Matrix<float>}’ has no member named ‘t’
   c = a.t() * b;
         ^
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:15:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h: In instantiation of ‘class BC::TensorInitializer<BC::Matrix<BC::binary_expression<float, BC::add, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> > >, BC::CPU>, void>’:
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:21:7:   required from ‘class BC::TensorBase<BC::Matrix<BC::binary_expression<float, BC::add, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> > >, BC::CPU> >’
../UnitTests/../BC_Internals/BC_Core/Matrix.h:17:7:   required from ‘class BC::Matrix<BC::binary_expression<float, BC::add, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> > >, BC::CPU>’
../UnitTests/SpeedTests.h:146:23:   required from here
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h:28:15: error: ‘BC::TensorInitializer<derived, expression_tensor>::black_cat_array’ has incomplete type
  functor_type black_cat_array;
               ^~~~~~~~~~~~~~~
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:12:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:26:41: note: declaration of ‘using functor_type = BC::_functor<BC::Matrix<BC::binary_expression<float, BC::add, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> > >, BC::CPU> > {aka class BC::binary_expression<float, BC::add, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> > >}’
 template<class,class,class,class> class binary_expression;
                                         ^~~~~~~~~~~~~~~~~
../UnitTests/main.cpp: In function ‘auto test()’:
../UnitTests/main.cpp:40:8: error: ‘using mat = class BC::Matrix<float> {aka class BC::Matrix<float>}’ has no member named ‘t’
  d = a.t();
        ^
../UnitTests/main.cpp:41:8: error: ‘using mat = class BC::Matrix<float> {aka class BC::Matrix<float>}’ has no member named ‘t’
  e = b.t();
        ^
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:15:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h: In instantiation of ‘class BC::TensorInitializer<BC::Matrix<BC::binary_expression_dotproduct<float, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::CPU>, void>’:
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:21:7:   required from ‘class BC::TensorBase<BC::Matrix<BC::binary_expression_dotproduct<float, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::CPU> >’
../UnitTests/../BC_Internals/BC_Core/Matrix.h:17:7:   required from ‘class BC::Matrix<BC::binary_expression_dotproduct<float, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::CPU>’
../UnitTests/main.cpp:47:10:   required from here
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h:28:15: error: ‘BC::TensorInitializer<derived, expression_tensor>::black_cat_array’ has incomplete type
  functor_type black_cat_array;
               ^~~~~~~~~~~~~~~
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:12:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:29:41: note: declaration of ‘using functor_type = BC::_functor<BC::Matrix<BC::binary_expression_dotproduct<float, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::CPU> > {aka class BC::binary_expression_dotproduct<float, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>}’
 template<class,class,class,class> class binary_expression_dotproduct;
                                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
../UnitTests/main.cpp:50:8: error: ‘using mat = class BC::Matrix<float> {aka class BC::Matrix<float>}’ has no member named ‘t’
  c = a.t() * b.t();
        ^
../UnitTests/main.cpp:50:16: error: ‘using mat = class BC::Matrix<float> {aka class BC::Matrix<float>}’ has no member named ‘t’
  c = a.t() * b.t();
                ^
../UnitTests/main.cpp:53:8: error: ‘using mat = class BC::Matrix<float> {aka class BC::Matrix<float>}’ has no member named ‘t’
  c = a.t() * e;
        ^
../UnitTests/main.cpp:56:12: error: ‘using mat = class BC::Matrix<float> {aka class BC::Matrix<float>}’ has no member named ‘t’
  c = d * b.t();
            ^
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:15:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h: In instantiation of ‘class BC::TensorInitializer<BC::Matrix<BC::binary_expression_scalar_R<float, BC::mul, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >, BC::CPU>, void>’:
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:21:7:   required from ‘class BC::TensorBase<BC::Matrix<BC::binary_expression_scalar_R<float, BC::mul, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >, BC::CPU> >’
../UnitTests/../BC_Internals/BC_Core/Matrix.h:17:7:   required from ‘class BC::Matrix<BC::binary_expression_scalar_R<float, BC::mul, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >, BC::CPU>’
../UnitTests/main.cpp:59:16:   required from here
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h:28:15: error: ‘BC::TensorInitializer<derived, expression_tensor>::black_cat_array’ has incomplete type
  functor_type black_cat_array;
               ^~~~~~~~~~~~~~~
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:12:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:28:41: note: declaration of ‘using functor_type = BC::_functor<BC::Matrix<BC::binary_expression_scalar_R<float, BC::mul, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >, BC::CPU> > {aka class BC::binary_expression_scalar_R<float, BC::mul, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >}’
 template<class,class,class,class> class binary_expression_scalar_R;
                                         ^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:15:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h: In instantiation of ‘class BC::TensorInitializer<BC::Matrix<BC::binary_expression_dotproduct<float, BC::binary_expression_scalar_R<float, BC::mul, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::CPU>, void>’:
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:21:7:   required from ‘class BC::TensorBase<BC::Matrix<BC::binary_expression_dotproduct<float, BC::binary_expression_scalar_R<float, BC::mul, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::CPU> >’
../UnitTests/../BC_Internals/BC_Core/Matrix.h:17:7:   required from ‘class BC::Matrix<BC::binary_expression_dotproduct<float, BC::binary_expression_scalar_R<float, BC::mul, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::CPU>’
../UnitTests/main.cpp:59:20:   required from here
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h:28:15: error: ‘BC::TensorInitializer<derived, expression_tensor>::black_cat_array’ has incomplete type
  functor_type black_cat_array;
               ^~~~~~~~~~~~~~~
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:12:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:29:41: note: declaration of ‘using functor_type = BC::_functor<BC::Matrix<BC::binary_expression_dotproduct<float, BC::binary_expression_scalar_R<float, BC::mul, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::CPU> > {aka class BC::binary_expression_dotproduct<float, BC::binary_expression_scalar_R<float, BC::mul, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>}’
 template<class,class,class,class> class binary_expression_dotproduct;
                                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:15:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h: In instantiation of ‘class BC::TensorInitializer<BC::Matrix<BC::binary_expression_scalar_L<float, BC::mul, BC::Tensor_Core<BC::Scalar<float, BC::CPU> >, BC::Tensor_Core<BC::Matrix<float> > >, BC::CPU>, void>’:
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:21:7:   required from ‘class BC::TensorBase<BC::Matrix<BC::binary_expression_scalar_L<float, BC::mul, BC::Tensor_Core<BC::Scalar<float, BC::CPU> >, BC::Tensor_Core<BC::Matrix<float> > >, BC::CPU> >’
../UnitTests/../BC_Internals/BC_Core/Matrix.h:17:7:   required from ‘class BC::Matrix<BC::binary_expression_scalar_L<float, BC::mul, BC::Tensor_Core<BC::Scalar<float, BC::CPU> >, BC::Tensor_Core<BC::Matrix<float> > >, BC::CPU>’
../UnitTests/main.cpp:62:16:   required from here
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h:28:15: error: ‘BC::TensorInitializer<derived, expression_tensor>::black_cat_array’ has incomplete type
  functor_type black_cat_array;
               ^~~~~~~~~~~~~~~
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:12:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:27:41: note: declaration of ‘using functor_type = BC::_functor<BC::Matrix<BC::binary_expression_scalar_L<float, BC::mul, BC::Tensor_Core<BC::Scalar<float, BC::CPU> >, BC::Tensor_Core<BC::Matrix<float> > >, BC::CPU> > {aka class BC::binary_expression_scalar_L<float, BC::mul, BC::Tensor_Core<BC::Scalar<float, BC::CPU> >, BC::Tensor_Core<BC::Matrix<float> > >}’
 template<class,class,class,class> class binary_expression_scalar_L;
                                         ^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:15:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h: In instantiation of ‘class BC::TensorInitializer<BC::Matrix<BC::binary_expression_dotproduct<float, BC::binary_expression_scalar_L<float, BC::mul, BC::Tensor_Core<BC::Scalar<float, BC::CPU> >, BC::Tensor_Core<BC::Matrix<float> > >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::CPU>, void>’:
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:21:7:   required from ‘class BC::TensorBase<BC::Matrix<BC::binary_expression_dotproduct<float, BC::binary_expression_scalar_L<float, BC::mul, BC::Tensor_Core<BC::Scalar<float, BC::CPU> >, BC::Tensor_Core<BC::Matrix<float> > >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::CPU> >’
../UnitTests/../BC_Internals/BC_Core/Matrix.h:17:7:   required from ‘class BC::Matrix<BC::binary_expression_dotproduct<float, BC::binary_expression_scalar_L<float, BC::mul, BC::Tensor_Core<BC::Scalar<float, BC::CPU> >, BC::Tensor_Core<BC::Matrix<float> > >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::CPU>’
../UnitTests/main.cpp:62:20:   required from here
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h:28:15: error: ‘BC::TensorInitializer<derived, expression_tensor>::black_cat_array’ has incomplete type
  functor_type black_cat_array;
               ^~~~~~~~~~~~~~~
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:12:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:29:41: note: declaration of ‘using functor_type = BC::_functor<BC::Matrix<BC::binary_expression_dotproduct<float, BC::binary_expression_scalar_L<float, BC::mul, BC::Tensor_Core<BC::Scalar<float, BC::CPU> >, BC::Tensor_Core<BC::Matrix<float> > >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::CPU> > {aka class BC::binary_expression_dotproduct<float, BC::binary_expression_scalar_L<float, BC::mul, BC::Tensor_Core<BC::Scalar<float, BC::CPU> >, BC::Tensor_Core<BC::Matrix<float> > >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>}’
 template<class,class,class,class> class binary_expression_dotproduct;
                                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:15:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h: In instantiation of ‘class BC::TensorInitializer<BC::Matrix<BC::binary_expression_scalar_R<float, BC::mul, BC::binary_expression_dotproduct<float, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >, BC::CPU>, void>’:
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:21:7:   required from ‘class BC::TensorBase<BC::Matrix<BC::binary_expression_scalar_R<float, BC::mul, BC::binary_expression_dotproduct<float, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >, BC::CPU> >’
../UnitTests/../BC_Internals/BC_Core/Matrix.h:17:7:   required from ‘class BC::Matrix<BC::binary_expression_scalar_R<float, BC::mul, BC::binary_expression_dotproduct<float, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >, BC::CPU>’
../UnitTests/main.cpp:64:20:   required from here
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h:28:15: error: ‘BC::TensorInitializer<derived, expression_tensor>::black_cat_array’ has incomplete type
  functor_type black_cat_array;
               ^~~~~~~~~~~~~~~
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:12:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:28:41: note: declaration of ‘using functor_type = BC::_functor<BC::Matrix<BC::binary_expression_scalar_R<float, BC::mul, BC::binary_expression_dotproduct<float, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >, BC::CPU> > {aka class BC::binary_expression_scalar_R<float, BC::mul, BC::binary_expression_dotproduct<float, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >}’
 template<class,class,class,class> class binary_expression_scalar_R;
                                         ^~~~~~~~~~~~~~~~~~~~~~~~~~
../UnitTests/main.cpp:76:8: error: ‘using mat = class BC::Matrix<float> {aka class BC::Matrix<float>}’ has no member named ‘t’
  c = a.t() * b.t();
        ^
../UnitTests/main.cpp:76:16: error: ‘using mat = class BC::Matrix<float> {aka class BC::Matrix<float>}’ has no member named ‘t’
  c = a.t() * b.t();
                ^
../UnitTests/main.cpp:80:8: error: ‘using mat = class BC::Matrix<float> {aka class BC::Matrix<float>}’ has no member named ‘t’
  c = a.t() * A * (b.t() * A);
        ^
../UnitTests/main.cpp:80:21: error: ‘using mat = class BC::Matrix<float> {aka class BC::Matrix<float>}’ has no member named ‘t’
  c = a.t() * A * (b.t() * A);
                     ^
../UnitTests/main.cpp:94:14: error: invalid operands of types ‘void’ and ‘void’ to binary ‘operator+’
  d[1] = d[1] + d[1];
         ~~~~~^~~~~~
../UnitTests/main.cpp:99:8: error: invalid types ‘void[int]’ for array subscript
  d[1][1] = d[1][1] + d[1][1];
        ^
../UnitTests/main.cpp:99:18: error: invalid types ‘void[int]’ for array subscript
  d[1][1] = d[1][1] + d[1][1];
                  ^
../UnitTests/main.cpp:99:28: error: invalid types ‘void[int]’ for array subscript
  d[1][1] = d[1][1] + d[1][1];
                            ^
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:13:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Utility.h: In instantiation of ‘void BC::Tensor_Utility<deriv, typename std::enable_if<(isPrim<typename BC::determine_functor< <template-parameter-1-1> >::fscal> || BC::MTF::isCore<typename BC::determine_functor< <template-parameter-1-1> >::type>::conditional), void>::type>::read(std::ifstream&, bool, bool) [with deriv = BC::Matrix<double>; typename std::enable_if<(isPrim<typename BC::determine_functor< <template-parameter-1-1> >::fscal> || BC::MTF::isCore<typename BC::determine_functor< <template-parameter-1-1> >::type>::conditional), void>::type = void; std::ifstream = std::basic_ifstream<char>]’:
../UnitTests/main.cpp:113:15:   required from here
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Utility.h:132:22: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
    for (int i = 0; i < dims.size(); ++i) {
                    ~~^~~~~~~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Utility.h:138:92: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
    MATHLIB::HostToDevice(asDerived().data().core(), &data[data[0] + 1], asDerived().size() > data.size() ? data.size() : asDerived().size());
                                                                                             
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:13:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Utility.h:140:86: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
    MATHLIB::HostToDevice(asDerived().data().core(), &data[0],     asDerived().size() > data.size() ? data.size() : asDerived().size());
                                                                                       
In file included from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:32:0,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_MathLibraries/Mathematics_CPU.h: In instantiation of ‘static void BC::CPU::copy(T&, const J&, int) [with T = BC::Tensor_Core<BC::Matrix<float> >; J = BC::binary_expression_dotproduct<float, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>]’:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:218:21:   required from ‘derived& BC::Tensor_Operations< <template-parameter-1-1> >::operator=(const BC::Tensor_Operations<param_deriv>&) [with pDeriv = BC::Matrix<BC::binary_expression_dotproduct<float, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::CPU>; derived = BC::Matrix<float>]’
../UnitTests/../BC_Internals/BC_Core/Matrix.h:45:83:   required from ‘BC::Matrix< <template-parameter-1-1>, ML>& BC::Matrix< <template-parameter-1-1>, ML>::operator=(const BC::Matrix<U, Mathlib>&) [with U = BC::binary_expression_dotproduct<float, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>; T = float; Mathlib = BC::CPU]’
../UnitTests/main.cpp:47:10:   required from here
../UnitTests/../BC_Internals/BC_MathLibraries/Mathematics_CPU.h:70:13: error: no match for ‘operator[]’ (operand types are ‘const BC::binary_expression_dotproduct<float, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>’ and ‘int’)
     t[i] = j[i];
            ~^
../UnitTests/../BC_Internals/BC_MathLibraries/Mathematics_CPU.h:76:12: error: no match for ‘operator[]’ (operand types are ‘const BC::binary_expression_dotproduct<float, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>’ and ‘int’)
    t[i] = j[i];
           ~^
../UnitTests/../BC_Internals/BC_MathLibraries/Mathematics_CPU.h: In instantiation of ‘static void BC::CPU::copy(T&, const J&, int) [with T = BC::Tensor_Core<BC::Matrix<float> >; J = BC::binary_expression_dotproduct<float, BC::binary_expression_scalar_R<float, BC::mul, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>]’:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:218:21:   required from ‘derived& BC::Tensor_Operations< <template-parameter-1-1> >::operator=(const BC::Tensor_Operations<param_deriv>&) [with pDeriv = BC::Matrix<BC::binary_expression_dotproduct<float, BC::binary_expression_scalar_R<float, BC::mul, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::CPU>; derived = BC::Matrix<float>]’
../UnitTests/../BC_Internals/BC_Core/Matrix.h:45:83:   required from ‘BC::Matrix< <template-parameter-1-1>, ML>& BC::Matrix< <template-parameter-1-1>, ML>::operator=(const BC::Matrix<U, Mathlib>&) [with U = BC::binary_expression_dotproduct<float, BC::binary_expression_scalar_R<float, BC::mul, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>; T = float; Mathlib = BC::CPU]’
../UnitTests/main.cpp:59:20:   required from here
../UnitTests/../BC_Internals/BC_MathLibraries/Mathematics_CPU.h:70:13: error: no match for ‘operator[]’ (operand types are ‘const BC::binary_expression_dotproduct<float, BC::binary_expression_scalar_R<float, BC::mul, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>’ and ‘int’)
     t[i] = j[i];
            ~^
../UnitTests/../BC_Internals/BC_MathLibraries/Mathematics_CPU.h:76:12: error: no match for ‘operator[]’ (operand types are ‘const BC::binary_expression_dotproduct<float, BC::binary_expression_scalar_R<float, BC::mul, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>’ and ‘int’)
    t[i] = j[i];
           ~^
../UnitTests/../BC_Internals/BC_MathLibraries/Mathematics_CPU.h: In instantiation of ‘static void BC::CPU::copy(T&, const J&, int) [with T = BC::Tensor_Core<BC::Matrix<float> >; J = BC::binary_expression_dotproduct<float, BC::binary_expression_scalar_L<float, BC::mul, BC::Tensor_Core<BC::Scalar<float, BC::CPU> >, BC::Tensor_Core<BC::Matrix<float> > >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>]’:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:218:21:   required from ‘derived& BC::Tensor_Operations< <template-parameter-1-1> >::operator=(const BC::Tensor_Operations<param_deriv>&) [with pDeriv = BC::Matrix<BC::binary_expression_dotproduct<float, BC::binary_expression_scalar_L<float, BC::mul, BC::Tensor_Core<BC::Scalar<float, BC::CPU> >, BC::Tensor_Core<BC::Matrix<float> > >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::CPU>; derived = BC::Matrix<float>]’
../UnitTests/../BC_Internals/BC_Core/Matrix.h:45:83:   required from ‘BC::Matrix< <template-parameter-1-1>, ML>& BC::Matrix< <template-parameter-1-1>, ML>::operator=(const BC::Matrix<U, Mathlib>&) [with U = BC::binary_expression_dotproduct<float, BC::binary_expression_scalar_L<float, BC::mul, BC::Tensor_Core<BC::Scalar<float, BC::CPU> >, BC::Tensor_Core<BC::Matrix<float> > >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>; T = float; Mathlib = BC::CPU]’
../UnitTests/main.cpp:62:20:   required from here
../UnitTests/../BC_Internals/BC_MathLibraries/Mathematics_CPU.h:70:13: error: no match for ‘operator[]’ (operand types are ‘const BC::binary_expression_dotproduct<float, BC::binary_expression_scalar_L<float, BC::mul, BC::Tensor_Core<BC::Scalar<float, BC::CPU> >, BC::Tensor_Core<BC::Matrix<float> > >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>’ and ‘int’)
     t[i] = j[i];
            ~^
../UnitTests/../BC_Internals/BC_MathLibraries/Mathematics_CPU.h:76:12: error: no match for ‘operator[]’ (operand types are ‘const BC::binary_expression_dotproduct<float, BC::binary_expression_scalar_L<float, BC::mul, BC::Tensor_Core<BC::Scalar<float, BC::CPU> >, BC::Tensor_Core<BC::Matrix<float> > >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>’ and ‘int’)
    t[i] = j[i];
           ~^
../UnitTests/../BC_Internals/BC_MathLibraries/Mathematics_CPU.h: In instantiation of ‘static void BC::CPU::copy(T&, const J&, int) [with T = BC::Tensor_Core<BC::Matrix<float> >; J = BC::binary_expression_scalar_R<float, BC::mul, BC::binary_expression_dotproduct<float, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >]’:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:218:21:   required from ‘derived& BC::Tensor_Operations< <template-parameter-1-1> >::operator=(const BC::Tensor_Operations<param_deriv>&) [with pDeriv = BC::Matrix<BC::binary_expression_scalar_R<float, BC::mul, BC::binary_expression_dotproduct<float, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >, BC::CPU>; derived = BC::Matrix<float>]’
../UnitTests/../BC_Internals/BC_Core/Matrix.h:45:83:   required from ‘BC::Matrix< <template-parameter-1-1>, ML>& BC::Matrix< <template-parameter-1-1>, ML>::operator=(const BC::Matrix<U, Mathlib>&) [with U = BC::binary_expression_scalar_R<float, BC::mul, BC::binary_expression_dotproduct<float, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >; T = float; Mathlib = BC::CPU]’
../UnitTests/main.cpp:64:20:   required from here
../UnitTests/../BC_Internals/BC_MathLibraries/Mathematics_CPU.h:70:13: error: no match for ‘operator[]’ (operand types are ‘const BC::binary_expression_scalar_R<float, BC::mul, BC::binary_expression_dotproduct<float, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >’ and ‘int’)
     t[i] = j[i];
            ~^
../UnitTests/../BC_Internals/BC_MathLibraries/Mathematics_CPU.h:76:12: error: no match for ‘operator[]’ (operand types are ‘const BC::binary_expression_scalar_R<float, BC::mul, BC::binary_expression_dotproduct<float, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >’ and ‘int’)
    t[i] = j[i];
           ~^
In file included from ../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Core_Slice.h:17:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Core.h:13,
                 from ../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h:12,
                 from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:15,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Core_Scalar.h: In instantiation of ‘BC::Tensor_Scalar<PARENT>::Tensor_Scalar(BC::Tensor_Scalar<PARENT>::scalar*, const PARENT&) [with PARENT = BC::Tensor_Core<BC::Matrix<float> >; BC::Tensor_Scalar<PARENT>::scalar = float]’:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h:33:63:   required from ‘BC::TensorInitializer<derived, expression_tensor>::TensorInitializer(const params& ...) [with params = {float*, BC::Tensor_Core<BC::Matrix<float, BC::CPU> >}; derived = BC::Scalar<BC::Tensor_Scalar<BC::Tensor_Core<BC::Matrix<float> > >, BC::CPU>; expression_tensor = void]’
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:50:51:   required from ‘BC::TensorBase<derived>::TensorBase(const params& ...) [with params = {float*, BC::Tensor_Core<BC::Matrix<float, BC::CPU> >}; derived = BC::Scalar<BC::Tensor_Scalar<BC::Tensor_Core<BC::Matrix<float> > >, BC::CPU>]’
../UnitTests/../BC_Internals/BC_Core/Scalar.h:61:97:   required from ‘BC::Scalar< <template-parameter-1-1>, ML>::Scalar(const var1&, const var2&, const params& ...) [with var1 = float*; var2 = BC::Tensor_Core<BC::Matrix<float> >; params = {}; T = BC::Tensor_Scalar<BC::Tensor_Core<BC::Matrix<float> > >; Mathlib = BC::CPU]’
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:92:19:   required from ‘auto BC::TensorBase<derived>::getScalar(int) [with derived = BC::Matrix<float>]’
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:96:52:   required from ‘auto BC::TensorBase<derived>::operator()(int) [with derived = BC::Matrix<float>]’
../UnitTests/main.cpp:33:6:   required from here
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Core_Scalar.h:36:10: warning: ‘BC::Tensor_Scalar<BC::Tensor_Core<BC::Matrix<float> > >::array_slice’ will be initialized after [-Wreorder]
  scalar* array_slice;
          ^~~~~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Core_Scalar.h:35:16: warning:   ‘const BC::Tensor_Core<BC::Matrix<float> >& BC::Tensor_Scalar<BC::Tensor_Core<BC::Matrix<float> > >::parent’ [-Wreorder]
  const PARENT& parent;
                ^~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Core_Scalar.h:41:2: warning:   when initialized here [-Wreorder]
  Tensor_Scalar(scalar* array, const PARENT& parent_) : array_slice(array), parent(parent_) {}
  ^~~~~~~~~~~~~
In file included from ../UnitTests/../BC_Internals/BC_MathLibraries/Mathematics_CPU.h:15:0,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:32,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_MathLibraries/BC_PrintFunctions.h: In instantiation of ‘void BC::printHelper(const T&, int_ranks, int, std::__cxx11::string, int) [with T = const float*; int_ranks = int*; std::__cxx11::string = std::__cxx11::basic_string<char>]’:
../UnitTests/../BC_Internals/BC_MathLibraries/BC_PrintFunctions.h:102:13:   required from ‘void BC::print(const T&, RANKS, int, int) [with T = const float*; RANKS = int*]’
../UnitTests/../BC_Internals/BC_MathLibraries/Mathematics_CPU.h:98:12:   required from ‘static void BC::CPU::print(T, RANKS, int, int) [with T = const float*; RANKS = int*]’
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Utility.h:75:17:   required from ‘void BC::Tensor_Utility<deriv, typename std::enable_if<(isPrim<typename BC::determine_functor< <template-parameter-1-1> >::fscal> || BC::MTF::isCore<typename BC::determine_functor< <template-parameter-1-1> >::type>::conditional), void>::type>::print() const [with deriv = BC::Matrix<float>; typename std::enable_if<(isPrim<typename BC::determine_functor< <template-parameter-1-1> >::fscal> || BC::MTF::isCore<typename BC::determine_functor< <template-parameter-1-1> >::type>::conditional), void>::type = void]’
../UnitTests/main.cpp:37:10:   required from here
../UnitTests/../BC_Internals/BC_MathLibraries/BC_PrintFunctions.h:43:38: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
     str = str.substr(0, str.length() < printSpace ? str.length() : printSpace);
                                       
../UnitTests/../BC_Internals/BC_MathLibraries/BC_PrintFunctions.h:46:22: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
     if (str.length() < printSpace)
                       
../UnitTests/../BC_Internals/BC_MathLibraries/BC_PrintFunctions.h:67:37: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
    str = str.substr(0, str.length() < printSpace ? str.length() : printSpace);
                                      
../UnitTests/../BC_Internals/BC_MathLibraries/BC_PrintFunctions.h:70:21: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
    if (str.length() < printSpace)
                      
../UnitTests/../BC_Internals/BC_MathLibraries/BC_PrintFunctions.h: In instantiation of ‘void BC::printHelper(const T&, int_ranks, int, std::__cxx11::string, int) [with T = const double*; int_ranks = int*; std::__cxx11::string = std::__cxx11::basic_string<char>]’:
../UnitTests/../BC_Internals/BC_MathLibraries/BC_PrintFunctions.h:102:13:   required from ‘void BC::print(const T&, RANKS, int, int) [with T = const double*; RANKS = int*]’
../UnitTests/../BC_Internals/BC_MathLibraries/Mathematics_CPU.h:98:12:   required from ‘static void BC::CPU::print(T, RANKS, int, int) [with T = const double*; RANKS = int*]’
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Utility.h:75:17:   required from ‘void BC::Tensor_Utility<deriv, typename std::enable_if<(isPrim<typename BC::determine_functor< <template-parameter-1-1> >::fscal> || BC::MTF::isCore<typename BC::determine_functor< <template-parameter-1-1> >::type>::conditional), void>::type>::print() const [with deriv = BC::Matrix<double>; typename std::enable_if<(isPrim<typename BC::determine_functor< <template-parameter-1-1> >::fscal> || BC::MTF::isCore<typename BC::determine_functor< <template-parameter-1-1> >::type>::conditional), void>::type = void]’
../UnitTests/main.cpp:114:14:   required from here
../UnitTests/../BC_Internals/BC_MathLibraries/BC_PrintFunctions.h:43:38: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
     str = str.substr(0, str.length() < printSpace ? str.length() : printSpace);
                                       
../UnitTests/../BC_Internals/BC_MathLibraries/BC_PrintFunctions.h:46:22: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
     if (str.length() < printSpace)
                       
../UnitTests/../BC_Internals/BC_MathLibraries/BC_PrintFunctions.h:67:37: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
    str = str.substr(0, str.length() < printSpace ? str.length() : printSpace);
                                      
../UnitTests/../BC_Internals/BC_MathLibraries/BC_PrintFunctions.h:70:21: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
    if (str.length() < printSpace)
                      
make: *** [UnitTests/main.o] Error 1
UnitTests/subdir.mk:18: recipe for target 'UnitTests/main.o' failed
17:15:55 **** Incremental Build of configuration Debug for project BlackCat_LibraryCPU ****
make all 
Building file: ../UnitTests/main.cpp
Invoking: GCC C++ Compiler
g++ -O0 -g3 -Wall -c -fmessage-length=0 -MMD -MP -MF"UnitTests/main.d" -MT"UnitTests/main.o" -o "UnitTests/main.o" "../UnitTests/main.cpp"
In file included from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:32:0,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_MathLibraries/Mathematics_CPU.h:74:0: warning: ignoring #pragma omp parallel [-Wunknown-pragmas]
 #pragma omp parallel for
 
../UnitTests/../BC_Internals/BC_MathLibraries/Mathematics_CPU.h:78:0: warning: ignoring #pragma omp barrier [-Wunknown-pragmas]
 #pragma omp barrier
 
../UnitTests/../BC_Internals/BC_MathLibraries/Mathematics_CPU.h:88:0: warning: ignoring #pragma omp parallel [-Wunknown-pragmas]
 #pragma omp parallel for
 
../UnitTests/../BC_Internals/BC_MathLibraries/Mathematics_CPU.h:92:0: warning: ignoring #pragma omp barrier [-Wunknown-pragmas]
 #pragma omp barrier
 
In file included from ../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Core_Slice.h:17:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Core.h:13,
                 from ../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h:12,
                 from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:15,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Core_Scalar.h:22:0: warning: "__BCinline__" redefined
 #define __BCinline__
 
In file included from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:29:0,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Expressions/BlackCat_Internal_Definitions.h:25:0: note: this is the location of the previous definition
 #define __BCinline__ __BC_gcpu__ __attribute__((always_inline))
 
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:15:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h:74:54: error: expected ‘;’ before ‘<’ token
  using derived_alt = typename shell_of<derived>::type<T, Mathlib>;
                                                      ^
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h:77:26: error: ‘derived_alt’ does not name a type
  TensorInitializer(const derived_alt<U>&  tensor) : black_cat_array(tensor.innerShape()) {
                          ^~~~~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h:77:37: error: expected ‘,’ or ‘...’ before ‘<’ token
  TensorInitializer(const derived_alt<U>&  tensor) : black_cat_array(tensor.innerShape()) {
                                     ^
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h: In constructor ‘BC::TensorInitializer<_tensor<t, ml>, typename std::enable_if<BC::MTF::isCorePure<t>::conditional, void>::type>::TensorInitializer(int)’:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h:77:69: error: ‘tensor’ was not declared in this scope
  TensorInitializer(const derived_alt<U>&  tensor) : black_cat_array(tensor.innerShape()) {
                                                                     ^~~~~~
In file included from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10:0,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/TensorBase.h: At global scope:
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:38:71: error: expected ‘;’ before ‘<’ token
  template<class    U> using deriv   = typename shell_of<derived>::type<U, Mathlib>;
                                                                       ^
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:39:76: error: expected ‘;’ before ‘<’ token
  template<class... U> using functor = typename shell_of<functor_type>::type<U...>;
                                                                            ^
../UnitTests/../BC_Internals/BC_Core/TensorBase.h: In member function ‘auto BC::TensorBase<derived>::operator[](int)’:
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:83:68: error: expected ‘(’ before ‘<’ token
     auto operator [] (int i)    { return typename base<RANK>::slice<decltype(slice(0)), Mathlib>(slice(i)); }
                                                                    ^
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:83:69: error: expected primary-expression before ‘decltype’
     auto operator [] (int i)    { return typename base<RANK>::slice<decltype(slice(0)), Mathlib>(slice(i)); }
                                                                     ^~~~~~~~
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:83:69: error: expected ‘;’ before ‘decltype’
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:83:87: error: expected unqualified-id before ‘,’ token
     auto operator [] (int i)    { return typename base<RANK>::slice<decltype(slice(0)), Mathlib>(slice(i)); }
                                                                                       ^
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:83:96: error: expected initializer before ‘>’ token
     auto operator [] (int i)    { return typename base<RANK>::slice<decltype(slice(0)), Mathlib>(slice(i)); }
                                                                                                ^
../UnitTests/../BC_Internals/BC_Core/TensorBase.h: In member function ‘const auto BC::TensorBase<derived>::operator[](int) const’:
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:84:74: error: expected ‘(’ before ‘<’ token
  const auto operator [] (int i) const { return typename base<RANK>::slice<decltype(slice(0)), Mathlib>(slice(i)); }
                                                                          ^
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:84:75: error: expected primary-expression before ‘decltype’
  const auto operator [] (int i) const { return typename base<RANK>::slice<decltype(slice(0)), Mathlib>(slice(i)); }
                                                                           ^~~~~~~~
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:84:75: error: expected ‘;’ before ‘decltype’
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:84:93: error: expected unqualified-id before ‘,’ token
  const auto operator [] (int i) const { return typename base<RANK>::slice<decltype(slice(0)), Mathlib>(slice(i)); }
                                                                                             ^
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:84:102: error: expected initializer before ‘>’ token
  const auto operator [] (int i) const { return typename base<RANK>::slice<decltype(slice(0)), Mathlib>(slice(i)); }
                                                                                                      ^
In file included from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:50:0,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Vector.h: At global scope:
../UnitTests/../BC_Internals/BC_Core/Vector.h:45:15: error: ‘unary_expression_transpose’ was not declared in this scope
  const Vector<unary_expression_transpose<typename MTF::determine_scalar<T>::type, typename parent_class::functor_type>, Mathlib> t() const {
               ^~~~~~~~~~~~~~~~~~~~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Vector.h:45:118: error: template argument 1 is invalid
  const Vector<unary_expression_transpose<typename MTF::determine_scalar<T>::type, typename parent_class::functor_type>, Mathlib> t() const {
                                                                                                                      ^
../UnitTests/../BC_Internals/BC_Core/Vector.h:45:119: error: expected unqualified-id before ‘,’ token
  const Vector<unary_expression_transpose<typename MTF::determine_scalar<T>::type, typename parent_class::functor_type>, Mathlib> t() const {
                                                                                                                       ^
In file included from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:51:0,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Matrix.h:47:15: error: ‘unary_expression_transpose’ was not declared in this scope
  const Matrix<unary_expression_transpose<typename MTF::determine_scalar<T>::type, typename parent_class::functor_type>, Mathlib> t() const {
               ^~~~~~~~~~~~~~~~~~~~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Matrix.h:47:118: error: template argument 1 is invalid
  const Matrix<unary_expression_transpose<typename MTF::determine_scalar<T>::type, typename parent_class::functor_type>, Mathlib> t() const {
                                                                                                                      ^
../UnitTests/../BC_Internals/BC_Core/Matrix.h:47:119: error: expected unqualified-id before ‘,’ token
  const Matrix<unary_expression_transpose<typename MTF::determine_scalar<T>::type, typename parent_class::functor_type>, Mathlib> t() const {
                                                                                                                       ^
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:15:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h: In instantiation of ‘class BC::TensorInitializer<BC::Vector<BC::binary_expression<float, BC::mul, BC::Tensor_Core<BC::Vector<float> >, BC::Tensor_Core<BC::Vector<float> > >, BC::CPU>, void>’:
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:21:7:   required from ‘class BC::TensorBase<BC::Vector<BC::binary_expression<float, BC::mul, BC::Tensor_Core<BC::Vector<float> >, BC::Tensor_Core<BC::Vector<float> > >, BC::CPU> >’
../UnitTests/../BC_Internals/BC_Core/Vector.h:17:7:   required from ‘class BC::Vector<BC::binary_expression<float, BC::mul, BC::Tensor_Core<BC::Vector<float> >, BC::Tensor_Core<BC::Vector<float> > >, BC::CPU>’
../UnitTests/SpeedTests.h:43:19:   required from here
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h:28:15: error: ‘BC::TensorInitializer<derived, expression_tensor>::black_cat_array’ has incomplete type
  functor_type black_cat_array;
               ^~~~~~~~~~~~~~~
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:12:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:26:41: note: declaration of ‘using functor_type = BC::_functor<BC::Vector<BC::binary_expression<float, BC::mul, BC::Tensor_Core<BC::Vector<float> >, BC::Tensor_Core<BC::Vector<float> > >, BC::CPU> > {aka class BC::binary_expression<float, BC::mul, BC::Tensor_Core<BC::Vector<float> >, BC::Tensor_Core<BC::Vector<float> > >}’
 template<class,class,class,class> class binary_expression;
                                         ^~~~~~~~~~~~~~~~~
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:15:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h: In instantiation of ‘class BC::TensorInitializer<BC::Vector<BC::binary_expression<float, BC::assign, BC::Tensor_Core<BC::Vector<float> >, BC::binary_expression<float, BC::mul, BC::Tensor_Core<BC::Vector<float> >, BC::Tensor_Core<BC::Vector<float> > > >, BC::CPU>, void>’:
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:21:7:   required from ‘class BC::TensorBase<BC::Vector<BC::binary_expression<float, BC::assign, BC::Tensor_Core<BC::Vector<float> >, BC::binary_expression<float, BC::mul, BC::Tensor_Core<BC::Vector<float> >, BC::Tensor_Core<BC::Vector<float> > > >, BC::CPU> >’
../UnitTests/../BC_Internals/BC_Core/Vector.h:17:7:   required from ‘class BC::Vector<BC::binary_expression<float, BC::assign, BC::Tensor_Core<BC::Vector<float> >, BC::binary_expression<float, BC::mul, BC::Tensor_Core<BC::Vector<float> >, BC::Tensor_Core<BC::Vector<float> > > >, BC::CPU>’
../UnitTests/SpeedTests.h:43:24:   required from here
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h:28:15: error: ‘BC::TensorInitializer<derived, expression_tensor>::black_cat_array’ has incomplete type
  functor_type black_cat_array;
               ^~~~~~~~~~~~~~~
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:12:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:26:41: note: declaration of ‘using functor_type = BC::_functor<BC::Vector<BC::binary_expression<float, BC::assign, BC::Tensor_Core<BC::Vector<float> >, BC::binary_expression<float, BC::mul, BC::Tensor_Core<BC::Vector<float> >, BC::Tensor_Core<BC::Vector<float> > > >, BC::CPU> > {aka class BC::binary_expression<float, BC::assign, BC::Tensor_Core<BC::Vector<float> >, BC::binary_expression<float, BC::mul, BC::Tensor_Core<BC::Vector<float> >, BC::Tensor_Core<BC::Vector<float> > > >}’
 template<class,class,class,class> class binary_expression;
                                         ^~~~~~~~~~~~~~~~~
In file included from ../UnitTests/main.cpp:4:0:
../UnitTests/SpeedTests.h: In function ‘int speedTestsScalarIteration()’:
../UnitTests/SpeedTests.h:136:9: error: ‘using mat = class BC::Matrix<float> {aka class BC::Matrix<float>}’ has no member named ‘t’
   c = a.t() * b;
         ^
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:15:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h: In instantiation of ‘class BC::TensorInitializer<BC::Matrix<BC::binary_expression<float, BC::add, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> > >, BC::CPU>, void>’:
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:21:7:   required from ‘class BC::TensorBase<BC::Matrix<BC::binary_expression<float, BC::add, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> > >, BC::CPU> >’
../UnitTests/../BC_Internals/BC_Core/Matrix.h:17:7:   required from ‘class BC::Matrix<BC::binary_expression<float, BC::add, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> > >, BC::CPU>’
../UnitTests/SpeedTests.h:146:23:   required from here
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h:28:15: error: ‘BC::TensorInitializer<derived, expression_tensor>::black_cat_array’ has incomplete type
  functor_type black_cat_array;
               ^~~~~~~~~~~~~~~
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:12:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:26:41: note: declaration of ‘using functor_type = BC::_functor<BC::Matrix<BC::binary_expression<float, BC::add, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> > >, BC::CPU> > {aka class BC::binary_expression<float, BC::add, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> > >}’
 template<class,class,class,class> class binary_expression;
                                         ^~~~~~~~~~~~~~~~~
../UnitTests/main.cpp: In function ‘auto test()’:
../UnitTests/main.cpp:40:8: error: ‘using mat = class BC::Matrix<float> {aka class BC::Matrix<float>}’ has no member named ‘t’
  d = a.t();
        ^
../UnitTests/main.cpp:41:8: error: ‘using mat = class BC::Matrix<float> {aka class BC::Matrix<float>}’ has no member named ‘t’
  e = b.t();
        ^
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:15:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h: In instantiation of ‘class BC::TensorInitializer<BC::Matrix<BC::binary_expression_dotproduct<float, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::CPU>, void>’:
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:21:7:   required from ‘class BC::TensorBase<BC::Matrix<BC::binary_expression_dotproduct<float, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::CPU> >’
../UnitTests/../BC_Internals/BC_Core/Matrix.h:17:7:   required from ‘class BC::Matrix<BC::binary_expression_dotproduct<float, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::CPU>’
../UnitTests/main.cpp:47:10:   required from here
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h:28:15: error: ‘BC::TensorInitializer<derived, expression_tensor>::black_cat_array’ has incomplete type
  functor_type black_cat_array;
               ^~~~~~~~~~~~~~~
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:12:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:29:41: note: declaration of ‘using functor_type = BC::_functor<BC::Matrix<BC::binary_expression_dotproduct<float, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::CPU> > {aka class BC::binary_expression_dotproduct<float, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>}’
 template<class,class,class,class> class binary_expression_dotproduct;
                                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
../UnitTests/main.cpp:50:8: error: ‘using mat = class BC::Matrix<float> {aka class BC::Matrix<float>}’ has no member named ‘t’
  c = a.t() * b.t();
        ^
../UnitTests/main.cpp:50:16: error: ‘using mat = class BC::Matrix<float> {aka class BC::Matrix<float>}’ has no member named ‘t’
  c = a.t() * b.t();
                ^
../UnitTests/main.cpp:53:8: error: ‘using mat = class BC::Matrix<float> {aka class BC::Matrix<float>}’ has no member named ‘t’
  c = a.t() * e;
        ^
../UnitTests/main.cpp:56:12: error: ‘using mat = class BC::Matrix<float> {aka class BC::Matrix<float>}’ has no member named ‘t’
  c = d * b.t();
            ^
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:15:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h: In instantiation of ‘class BC::TensorInitializer<BC::Matrix<BC::binary_expression_scalar_R<float, BC::mul, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >, BC::CPU>, void>’:
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:21:7:   required from ‘class BC::TensorBase<BC::Matrix<BC::binary_expression_scalar_R<float, BC::mul, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >, BC::CPU> >’
../UnitTests/../BC_Internals/BC_Core/Matrix.h:17:7:   required from ‘class BC::Matrix<BC::binary_expression_scalar_R<float, BC::mul, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >, BC::CPU>’
../UnitTests/main.cpp:59:16:   required from here
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h:28:15: error: ‘BC::TensorInitializer<derived, expression_tensor>::black_cat_array’ has incomplete type
  functor_type black_cat_array;
               ^~~~~~~~~~~~~~~
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:12:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:28:41: note: declaration of ‘using functor_type = BC::_functor<BC::Matrix<BC::binary_expression_scalar_R<float, BC::mul, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >, BC::CPU> > {aka class BC::binary_expression_scalar_R<float, BC::mul, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >}’
 template<class,class,class,class> class binary_expression_scalar_R;
                                         ^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:15:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h: In instantiation of ‘class BC::TensorInitializer<BC::Matrix<BC::binary_expression_dotproduct<float, BC::binary_expression_scalar_R<float, BC::mul, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::CPU>, void>’:
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:21:7:   required from ‘class BC::TensorBase<BC::Matrix<BC::binary_expression_dotproduct<float, BC::binary_expression_scalar_R<float, BC::mul, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::CPU> >’
../UnitTests/../BC_Internals/BC_Core/Matrix.h:17:7:   required from ‘class BC::Matrix<BC::binary_expression_dotproduct<float, BC::binary_expression_scalar_R<float, BC::mul, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::CPU>’
../UnitTests/main.cpp:59:20:   required from here
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h:28:15: error: ‘BC::TensorInitializer<derived, expression_tensor>::black_cat_array’ has incomplete type
  functor_type black_cat_array;
               ^~~~~~~~~~~~~~~
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:12:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:29:41: note: declaration of ‘using functor_type = BC::_functor<BC::Matrix<BC::binary_expression_dotproduct<float, BC::binary_expression_scalar_R<float, BC::mul, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::CPU> > {aka class BC::binary_expression_dotproduct<float, BC::binary_expression_scalar_R<float, BC::mul, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>}’
 template<class,class,class,class> class binary_expression_dotproduct;
                                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:15:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h: In instantiation of ‘class BC::TensorInitializer<BC::Matrix<BC::binary_expression_scalar_L<float, BC::mul, BC::Tensor_Core<BC::Scalar<float, BC::CPU> >, BC::Tensor_Core<BC::Matrix<float> > >, BC::CPU>, void>’:
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:21:7:   required from ‘class BC::TensorBase<BC::Matrix<BC::binary_expression_scalar_L<float, BC::mul, BC::Tensor_Core<BC::Scalar<float, BC::CPU> >, BC::Tensor_Core<BC::Matrix<float> > >, BC::CPU> >’
../UnitTests/../BC_Internals/BC_Core/Matrix.h:17:7:   required from ‘class BC::Matrix<BC::binary_expression_scalar_L<float, BC::mul, BC::Tensor_Core<BC::Scalar<float, BC::CPU> >, BC::Tensor_Core<BC::Matrix<float> > >, BC::CPU>’
../UnitTests/main.cpp:62:16:   required from here
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h:28:15: error: ‘BC::TensorInitializer<derived, expression_tensor>::black_cat_array’ has incomplete type
  functor_type black_cat_array;
               ^~~~~~~~~~~~~~~
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:12:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:27:41: note: declaration of ‘using functor_type = BC::_functor<BC::Matrix<BC::binary_expression_scalar_L<float, BC::mul, BC::Tensor_Core<BC::Scalar<float, BC::CPU> >, BC::Tensor_Core<BC::Matrix<float> > >, BC::CPU> > {aka class BC::binary_expression_scalar_L<float, BC::mul, BC::Tensor_Core<BC::Scalar<float, BC::CPU> >, BC::Tensor_Core<BC::Matrix<float> > >}’
 template<class,class,class,class> class binary_expression_scalar_L;
                                         ^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:15:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h: In instantiation of ‘class BC::TensorInitializer<BC::Matrix<BC::binary_expression_dotproduct<float, BC::binary_expression_scalar_L<float, BC::mul, BC::Tensor_Core<BC::Scalar<float, BC::CPU> >, BC::Tensor_Core<BC::Matrix<float> > >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::CPU>, void>’:
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:21:7:   required from ‘class BC::TensorBase<BC::Matrix<BC::binary_expression_dotproduct<float, BC::binary_expression_scalar_L<float, BC::mul, BC::Tensor_Core<BC::Scalar<float, BC::CPU> >, BC::Tensor_Core<BC::Matrix<float> > >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::CPU> >’
../UnitTests/../BC_Internals/BC_Core/Matrix.h:17:7:   required from ‘class BC::Matrix<BC::binary_expression_dotproduct<float, BC::binary_expression_scalar_L<float, BC::mul, BC::Tensor_Core<BC::Scalar<float, BC::CPU> >, BC::Tensor_Core<BC::Matrix<float> > >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::CPU>’
../UnitTests/main.cpp:62:20:   required from here
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h:28:15: error: ‘BC::TensorInitializer<derived, expression_tensor>::black_cat_array’ has incomplete type
  functor_type black_cat_array;
               ^~~~~~~~~~~~~~~
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:12:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:29:41: note: declaration of ‘using functor_type = BC::_functor<BC::Matrix<BC::binary_expression_dotproduct<float, BC::binary_expression_scalar_L<float, BC::mul, BC::Tensor_Core<BC::Scalar<float, BC::CPU> >, BC::Tensor_Core<BC::Matrix<float> > >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::CPU> > {aka class BC::binary_expression_dotproduct<float, BC::binary_expression_scalar_L<float, BC::mul, BC::Tensor_Core<BC::Scalar<float, BC::CPU> >, BC::Tensor_Core<BC::Matrix<float> > >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>}’
 template<class,class,class,class> class binary_expression_dotproduct;
                                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:15:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h: In instantiation of ‘class BC::TensorInitializer<BC::Matrix<BC::binary_expression_scalar_R<float, BC::mul, BC::binary_expression_dotproduct<float, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >, BC::CPU>, void>’:
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:21:7:   required from ‘class BC::TensorBase<BC::Matrix<BC::binary_expression_scalar_R<float, BC::mul, BC::binary_expression_dotproduct<float, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >, BC::CPU> >’
../UnitTests/../BC_Internals/BC_Core/Matrix.h:17:7:   required from ‘class BC::Matrix<BC::binary_expression_scalar_R<float, BC::mul, BC::binary_expression_dotproduct<float, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >, BC::CPU>’
../UnitTests/main.cpp:64:20:   required from here
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h:28:15: error: ‘BC::TensorInitializer<derived, expression_tensor>::black_cat_array’ has incomplete type
  functor_type black_cat_array;
               ^~~~~~~~~~~~~~~
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:12:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:28:41: note: declaration of ‘using functor_type = BC::_functor<BC::Matrix<BC::binary_expression_scalar_R<float, BC::mul, BC::binary_expression_dotproduct<float, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >, BC::CPU> > {aka class BC::binary_expression_scalar_R<float, BC::mul, BC::binary_expression_dotproduct<float, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >}’
 template<class,class,class,class> class binary_expression_scalar_R;
                                         ^~~~~~~~~~~~~~~~~~~~~~~~~~
../UnitTests/main.cpp:76:8: error: ‘using mat = class BC::Matrix<float> {aka class BC::Matrix<float>}’ has no member named ‘t’
  c = a.t() * b.t();
        ^
../UnitTests/main.cpp:76:16: error: ‘using mat = class BC::Matrix<float> {aka class BC::Matrix<float>}’ has no member named ‘t’
  c = a.t() * b.t();
                ^
../UnitTests/main.cpp:80:8: error: ‘using mat = class BC::Matrix<float> {aka class BC::Matrix<float>}’ has no member named ‘t’
  c = a.t() * A * (b.t() * A);
        ^
../UnitTests/main.cpp:80:21: error: ‘using mat = class BC::Matrix<float> {aka class BC::Matrix<float>}’ has no member named ‘t’
  c = a.t() * A * (b.t() * A);
                     ^
../UnitTests/main.cpp:94:14: error: invalid operands of types ‘void’ and ‘void’ to binary ‘operator+’
  d[1] = d[1] + d[1];
         ~~~~~^~~~~~
../UnitTests/main.cpp:99:8: error: invalid types ‘void[int]’ for array subscript
  d[1][1] = d[1][1] + d[1][1];
        ^
../UnitTests/main.cpp:99:18: error: invalid types ‘void[int]’ for array subscript
  d[1][1] = d[1][1] + d[1][1];
                  ^
../UnitTests/main.cpp:99:28: error: invalid types ‘void[int]’ for array subscript
  d[1][1] = d[1][1] + d[1][1];
                            ^
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:13:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Utility.h: In instantiation of ‘void BC::Tensor_Utility<deriv, typename std::enable_if<(isPrim<typename BC::determine_functor< <template-parameter-1-1> >::fscal> || BC::MTF::isCore<typename BC::determine_functor< <template-parameter-1-1> >::type>::conditional), void>::type>::read(std::ifstream&, bool, bool) [with deriv = BC::Matrix<double>; typename std::enable_if<(isPrim<typename BC::determine_functor< <template-parameter-1-1> >::fscal> || BC::MTF::isCore<typename BC::determine_functor< <template-parameter-1-1> >::type>::conditional), void>::type = void; std::ifstream = std::basic_ifstream<char>]’:
../UnitTests/main.cpp:113:15:   required from here
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Utility.h:132:22: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
    for (int i = 0; i < dims.size(); ++i) {
                    ~~^~~~~~~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Utility.h:138:92: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
    MATHLIB::HostToDevice(asDerived().data().core(), &data[data[0] + 1], asDerived().size() > data.size() ? data.size() : asDerived().size());
                                                                                             
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:13:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Utility.h:140:86: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
    MATHLIB::HostToDevice(asDerived().data().core(), &data[0],     asDerived().size() > data.size() ? data.size() : asDerived().size());
                                                                                       
In file included from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:32:0,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_MathLibraries/Mathematics_CPU.h: In instantiation of ‘static void BC::CPU::copy(T&, const J&, int) [with T = BC::Tensor_Core<BC::Matrix<float> >; J = BC::binary_expression_dotproduct<float, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>]’:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:218:21:   required from ‘derived& BC::Tensor_Operations< <template-parameter-1-1> >::operator=(const BC::Tensor_Operations<param_deriv>&) [with pDeriv = BC::Matrix<BC::binary_expression_dotproduct<float, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::CPU>; derived = BC::Matrix<float>]’
../UnitTests/../BC_Internals/BC_Core/Matrix.h:45:83:   required from ‘BC::Matrix< <template-parameter-1-1>, ML>& BC::Matrix< <template-parameter-1-1>, ML>::operator=(const BC::Matrix<U, Mathlib>&) [with U = BC::binary_expression_dotproduct<float, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>; T = float; Mathlib = BC::CPU]’
../UnitTests/main.cpp:47:10:   required from here
../UnitTests/../BC_Internals/BC_MathLibraries/Mathematics_CPU.h:70:13: error: no match for ‘operator[]’ (operand types are ‘const BC::binary_expression_dotproduct<float, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>’ and ‘int’)
     t[i] = j[i];
            ~^
../UnitTests/../BC_Internals/BC_MathLibraries/Mathematics_CPU.h:76:12: error: no match for ‘operator[]’ (operand types are ‘const BC::binary_expression_dotproduct<float, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>’ and ‘int’)
    t[i] = j[i];
           ~^
../UnitTests/../BC_Internals/BC_MathLibraries/Mathematics_CPU.h: In instantiation of ‘static void BC::CPU::copy(T&, const J&, int) [with T = BC::Tensor_Core<BC::Matrix<float> >; J = BC::binary_expression_dotproduct<float, BC::binary_expression_scalar_R<float, BC::mul, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>]’:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:218:21:   required from ‘derived& BC::Tensor_Operations< <template-parameter-1-1> >::operator=(const BC::Tensor_Operations<param_deriv>&) [with pDeriv = BC::Matrix<BC::binary_expression_dotproduct<float, BC::binary_expression_scalar_R<float, BC::mul, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::CPU>; derived = BC::Matrix<float>]’
../UnitTests/../BC_Internals/BC_Core/Matrix.h:45:83:   required from ‘BC::Matrix< <template-parameter-1-1>, ML>& BC::Matrix< <template-parameter-1-1>, ML>::operator=(const BC::Matrix<U, Mathlib>&) [with U = BC::binary_expression_dotproduct<float, BC::binary_expression_scalar_R<float, BC::mul, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>; T = float; Mathlib = BC::CPU]’
../UnitTests/main.cpp:59:20:   required from here
../UnitTests/../BC_Internals/BC_MathLibraries/Mathematics_CPU.h:70:13: error: no match for ‘operator[]’ (operand types are ‘const BC::binary_expression_dotproduct<float, BC::binary_expression_scalar_R<float, BC::mul, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>’ and ‘int’)
     t[i] = j[i];
            ~^
../UnitTests/../BC_Internals/BC_MathLibraries/Mathematics_CPU.h:76:12: error: no match for ‘operator[]’ (operand types are ‘const BC::binary_expression_dotproduct<float, BC::binary_expression_scalar_R<float, BC::mul, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>’ and ‘int’)
    t[i] = j[i];
           ~^
../UnitTests/../BC_Internals/BC_MathLibraries/Mathematics_CPU.h: In instantiation of ‘static void BC::CPU::copy(T&, const J&, int) [with T = BC::Tensor_Core<BC::Matrix<float> >; J = BC::binary_expression_dotproduct<float, BC::binary_expression_scalar_L<float, BC::mul, BC::Tensor_Core<BC::Scalar<float, BC::CPU> >, BC::Tensor_Core<BC::Matrix<float> > >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>]’:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:218:21:   required from ‘derived& BC::Tensor_Operations< <template-parameter-1-1> >::operator=(const BC::Tensor_Operations<param_deriv>&) [with pDeriv = BC::Matrix<BC::binary_expression_dotproduct<float, BC::binary_expression_scalar_L<float, BC::mul, BC::Tensor_Core<BC::Scalar<float, BC::CPU> >, BC::Tensor_Core<BC::Matrix<float> > >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::CPU>; derived = BC::Matrix<float>]’
../UnitTests/../BC_Internals/BC_Core/Matrix.h:45:83:   required from ‘BC::Matrix< <template-parameter-1-1>, ML>& BC::Matrix< <template-parameter-1-1>, ML>::operator=(const BC::Matrix<U, Mathlib>&) [with U = BC::binary_expression_dotproduct<float, BC::binary_expression_scalar_L<float, BC::mul, BC::Tensor_Core<BC::Scalar<float, BC::CPU> >, BC::Tensor_Core<BC::Matrix<float> > >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>; T = float; Mathlib = BC::CPU]’
../UnitTests/main.cpp:62:20:   required from here
../UnitTests/../BC_Internals/BC_MathLibraries/Mathematics_CPU.h:70:13: error: no match for ‘operator[]’ (operand types are ‘const BC::binary_expression_dotproduct<float, BC::binary_expression_scalar_L<float, BC::mul, BC::Tensor_Core<BC::Scalar<float, BC::CPU> >, BC::Tensor_Core<BC::Matrix<float> > >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>’ and ‘int’)
     t[i] = j[i];
            ~^
../UnitTests/../BC_Internals/BC_MathLibraries/Mathematics_CPU.h:76:12: error: no match for ‘operator[]’ (operand types are ‘const BC::binary_expression_dotproduct<float, BC::binary_expression_scalar_L<float, BC::mul, BC::Tensor_Core<BC::Scalar<float, BC::CPU> >, BC::Tensor_Core<BC::Matrix<float> > >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>’ and ‘int’)
    t[i] = j[i];
           ~^
../UnitTests/../BC_Internals/BC_MathLibraries/Mathematics_CPU.h: In instantiation of ‘static void BC::CPU::copy(T&, const J&, int) [with T = BC::Tensor_Core<BC::Matrix<float> >; J = BC::binary_expression_scalar_R<float, BC::mul, BC::binary_expression_dotproduct<float, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >]’:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:218:21:   required from ‘derived& BC::Tensor_Operations< <template-parameter-1-1> >::operator=(const BC::Tensor_Operations<param_deriv>&) [with pDeriv = BC::Matrix<BC::binary_expression_scalar_R<float, BC::mul, BC::binary_expression_dotproduct<float, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >, BC::CPU>; derived = BC::Matrix<float>]’
../UnitTests/../BC_Internals/BC_Core/Matrix.h:45:83:   required from ‘BC::Matrix< <template-parameter-1-1>, ML>& BC::Matrix< <template-parameter-1-1>, ML>::operator=(const BC::Matrix<U, Mathlib>&) [with U = BC::binary_expression_scalar_R<float, BC::mul, BC::binary_expression_dotproduct<float, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >; T = float; Mathlib = BC::CPU]’
../UnitTests/main.cpp:64:20:   required from here
../UnitTests/../BC_Internals/BC_MathLibraries/Mathematics_CPU.h:70:13: error: no match for ‘operator[]’ (operand types are ‘const BC::binary_expression_scalar_R<float, BC::mul, BC::binary_expression_dotproduct<float, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >’ and ‘int’)
     t[i] = j[i];
            ~^
../UnitTests/../BC_Internals/BC_MathLibraries/Mathematics_CPU.h:76:12: error: no match for ‘operator[]’ (operand types are ‘const BC::binary_expression_scalar_R<float, BC::mul, BC::binary_expression_dotproduct<float, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >’ and ‘int’)
    t[i] = j[i];
           ~^
In file included from ../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Core_Slice.h:17:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Core.h:13,
                 from ../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h:12,
                 from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:15,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Core_Scalar.h: In instantiation of ‘BC::Tensor_Scalar<PARENT>::Tensor_Scalar(BC::Tensor_Scalar<PARENT>::scalar*, const PARENT&) [with PARENT = BC::Tensor_Core<BC::Matrix<float> >; BC::Tensor_Scalar<PARENT>::scalar = float]’:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h:33:63:   required from ‘BC::TensorInitializer<derived, expression_tensor>::TensorInitializer(const params& ...) [with params = {float*, BC::Tensor_Core<BC::Matrix<float, BC::CPU> >}; derived = BC::Scalar<BC::Tensor_Scalar<BC::Tensor_Core<BC::Matrix<float> > >, BC::CPU>; expression_tensor = void]’
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:50:51:   required from ‘BC::TensorBase<derived>::TensorBase(const params& ...) [with params = {float*, BC::Tensor_Core<BC::Matrix<float, BC::CPU> >}; derived = BC::Scalar<BC::Tensor_Scalar<BC::Tensor_Core<BC::Matrix<float> > >, BC::CPU>]’
../UnitTests/../BC_Internals/BC_Core/Scalar.h:61:97:   required from ‘BC::Scalar< <template-parameter-1-1>, ML>::Scalar(const var1&, const var2&, const params& ...) [with var1 = float*; var2 = BC::Tensor_Core<BC::Matrix<float> >; params = {}; T = BC::Tensor_Scalar<BC::Tensor_Core<BC::Matrix<float> > >; Mathlib = BC::CPU]’
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:92:19:   required from ‘auto BC::TensorBase<derived>::getScalar(int) [with derived = BC::Matrix<float>]’
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:96:52:   required from ‘auto BC::TensorBase<derived>::operator()(int) [with derived = BC::Matrix<float>]’
../UnitTests/main.cpp:33:6:   required from here
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Core_Scalar.h:36:10: warning: ‘BC::Tensor_Scalar<BC::Tensor_Core<BC::Matrix<float> > >::array_slice’ will be initialized after [-Wreorder]
  scalar* array_slice;
          ^~~~~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Core_Scalar.h:35:16: warning:   ‘const BC::Tensor_Core<BC::Matrix<float> >& BC::Tensor_Scalar<BC::Tensor_Core<BC::Matrix<float> > >::parent’ [-Wreorder]
  const PARENT& parent;
                ^~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Core_Scalar.h:41:2: warning:   when initialized here [-Wreorder]
  Tensor_Scalar(scalar* array, const PARENT& parent_) : array_slice(array), parent(parent_) {}
  ^~~~~~~~~~~~~
In file included from ../UnitTests/../BC_Internals/BC_MathLibraries/Mathematics_CPU.h:15:0,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:32,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_MathLibraries/BC_PrintFunctions.h: In instantiation of ‘void BC::printHelper(const T&, int_ranks, int, std::__cxx11::string, int) [with T = const float*; int_ranks = int*; std::__cxx11::string = std::__cxx11::basic_string<char>]’:
../UnitTests/../BC_Internals/BC_MathLibraries/BC_PrintFunctions.h:102:13:   required from ‘void BC::print(const T&, RANKS, int, int) [with T = const float*; RANKS = int*]’
../UnitTests/../BC_Internals/BC_MathLibraries/Mathematics_CPU.h:98:12:   required from ‘static void BC::CPU::print(T, RANKS, int, int) [with T = const float*; RANKS = int*]’
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Utility.h:75:17:   required from ‘void BC::Tensor_Utility<deriv, typename std::enable_if<(isPrim<typename BC::determine_functor< <template-parameter-1-1> >::fscal> || BC::MTF::isCore<typename BC::determine_functor< <template-parameter-1-1> >::type>::conditional), void>::type>::print() const [with deriv = BC::Matrix<float>; typename std::enable_if<(isPrim<typename BC::determine_functor< <template-parameter-1-1> >::fscal> || BC::MTF::isCore<typename BC::determine_functor< <template-parameter-1-1> >::type>::conditional), void>::type = void]’
../UnitTests/main.cpp:37:10:   required from here
../UnitTests/../BC_Internals/BC_MathLibraries/BC_PrintFunctions.h:43:38: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
     str = str.substr(0, str.length() < printSpace ? str.length() : printSpace);
                                       
../UnitTests/../BC_Internals/BC_MathLibraries/BC_PrintFunctions.h:46:22: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
     if (str.length() < printSpace)
                       
../UnitTests/../BC_Internals/BC_MathLibraries/BC_PrintFunctions.h:67:37: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
    str = str.substr(0, str.length() < printSpace ? str.length() : printSpace);
                                      
../UnitTests/../BC_Internals/BC_MathLibraries/BC_PrintFunctions.h:70:21: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
    if (str.length() < printSpace)
                      
In file included from ../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h:12:0,
                 from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:15,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Core.h: In instantiation of ‘BC::Tensor_Core< <template-parameter-1-1> >::Tensor_Core() [with T = BC::Matrix<float>]’:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h:56:2:   required from ‘BC::TensorInitializer<_tensor<t, ml>, typename std::enable_if<BC::MTF::isCorePure<t>::conditional, void>::type>::TensorInitializer(BC::TensorInitializer<_tensor<t, ml>, typename std::enable_if<BC::MTF::isCorePure<t>::conditional, void>::type>::derived&&) [with _tensor = BC::Matrix; t = float; ml = BC::CPU; typename std::enable_if<BC::MTF::isCorePure<t>::conditional, void>::type = void; BC::TensorInitializer<_tensor<t, ml>, typename std::enable_if<BC::MTF::isCorePure<t>::conditional, void>::type>::derived = BC::Matrix<float>]’
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:50:51:   required from ‘BC::TensorBase<derived>::TensorBase(const params& ...) [with params = {BC::Matrix<BC::binary_expression<float, BC::add, BC::Tensor_Core<BC::Matrix<float, BC::CPU> >, BC::Tensor_Core<BC::Matrix<float, BC::CPU> > >, BC::CPU>}; derived = BC::Matrix<float>]’
../UnitTests/../BC_Internals/BC_Core/Matrix.h:37:77:   required from ‘BC::Matrix< <template-parameter-1-1>, ML>::Matrix(const BC::Matrix<U, Mathlib>&) [with U = BC::binary_expression<float, BC::add, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> > >; T = float; Mathlib = BC::CPU]’
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Utility.h:34:50:   required from ‘auto BC::Tensor_Utility<deriv, <template-parameter-1-2> >::eval() const [with deriv = BC::Matrix<BC::binary_expression<float, BC::add, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> > >, BC::CPU>; <template-parameter-1-2> = void]’
../UnitTests/main.cpp:75:15:   required from here
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Core.h:38:3: error: static assertion failed: DEFAULT CONSTRUCTOR FOR TENSOR_CORE ONLY AVAILABLE FOR RANK == 0 (SCALAR)
   static_assert(RANK == 0, "DEFAULT CONSTRUCTOR FOR TENSOR_CORE ONLY AVAILABLE FOR RANK == 0 (SCALAR)");
   ^~~~~~~~~~~~~
In file included from ../UnitTests/../BC_Internals/BC_MathLibraries/Mathematics_CPU.h:15:0,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:32,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_MathLibraries/BC_PrintFunctions.h: In instantiation of ‘void BC::printHelper(const T&, int_ranks, int, std::__cxx11::string, int) [with T = const double*; int_ranks = int*; std::__cxx11::string = std::__cxx11::basic_string<char>]’:
../UnitTests/../BC_Internals/BC_MathLibraries/BC_PrintFunctions.h:102:13:   required from ‘void BC::print(const T&, RANKS, int, int) [with T = const double*; RANKS = int*]’
../UnitTests/../BC_Internals/BC_MathLibraries/Mathematics_CPU.h:98:12:   required from ‘static void BC::CPU::print(T, RANKS, int, int) [with T = const double*; RANKS = int*]’
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Utility.h:75:17:   required from ‘void BC::Tensor_Utility<deriv, typename std::enable_if<(isPrim<typename BC::determine_functor< <template-parameter-1-1> >::fscal> || BC::MTF::isCore<typename BC::determine_functor< <template-parameter-1-1> >::type>::conditional), void>::type>::print() const [with deriv = BC::Matrix<double>; typename std::enable_if<(isPrim<typename BC::determine_functor< <template-parameter-1-1> >::fscal> || BC::MTF::isCore<typename BC::determine_functor< <template-parameter-1-1> >::type>::conditional), void>::type = void]’
../UnitTests/main.cpp:114:14:   required from here
../UnitTests/../BC_Internals/BC_MathLibraries/BC_PrintFunctions.h:43:38: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
     str = str.substr(0, str.length() < printSpace ? str.length() : printSpace);
                                       
../UnitTests/../BC_Internals/BC_MathLibraries/BC_PrintFunctions.h:46:22: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
     if (str.length() < printSpace)
                       
../UnitTests/../BC_Internals/BC_MathLibraries/BC_PrintFunctions.h:67:37: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
    str = str.substr(0, str.length() < printSpace ? str.length() : printSpace);
                                      
../UnitTests/../BC_Internals/BC_MathLibraries/BC_PrintFunctions.h:70:21: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
    if (str.length() < printSpace)
                      
make: *** [UnitTests/main.o] Error 1
UnitTests/subdir.mk:18: recipe for target 'UnitTests/main.o' failed
17:16:26 **** Incremental Build of configuration Debug for project BlackCat_LibraryCPU ****
make all 
Building file: ../UnitTests/main.cpp
Invoking: GCC C++ Compiler
g++ -O0 -g3 -Wall -c -fmessage-length=0 -MMD -MP -MF"UnitTests/main.d" -MT"UnitTests/main.o" -o "UnitTests/main.o" "../UnitTests/main.cpp"
In file included from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:32:0,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_MathLibraries/Mathematics_CPU.h:74:0: warning: ignoring #pragma omp parallel [-Wunknown-pragmas]
 #pragma omp parallel for
 
../UnitTests/../BC_Internals/BC_MathLibraries/Mathematics_CPU.h:78:0: warning: ignoring #pragma omp barrier [-Wunknown-pragmas]
 #pragma omp barrier
 
../UnitTests/../BC_Internals/BC_MathLibraries/Mathematics_CPU.h:88:0: warning: ignoring #pragma omp parallel [-Wunknown-pragmas]
 #pragma omp parallel for
 
../UnitTests/../BC_Internals/BC_MathLibraries/Mathematics_CPU.h:92:0: warning: ignoring #pragma omp barrier [-Wunknown-pragmas]
 #pragma omp barrier
 
In file included from ../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Core_Slice.h:17:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Core.h:13,
                 from ../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h:12,
                 from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:15,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Core_Scalar.h:22:0: warning: "__BCinline__" redefined
 #define __BCinline__
 
In file included from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:29:0,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Expressions/BlackCat_Internal_Definitions.h:25:0: note: this is the location of the previous definition
 #define __BCinline__ __BC_gcpu__ __attribute__((always_inline))
 
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:15:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h:74:54: error: expected ‘;’ before ‘<’ token
  using derived_alt = typename shell_of<derived>::type<T, Mathlib>;
                                                      ^
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h:77:26: error: ‘derived_alt’ does not name a type
  TensorInitializer(const derived_alt<U>&  tensor) : black_cat_array(tensor.innerShape()) {
                          ^~~~~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h:77:37: error: expected ‘,’ or ‘...’ before ‘<’ token
  TensorInitializer(const derived_alt<U>&  tensor) : black_cat_array(tensor.innerShape()) {
                                     ^
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h: In constructor ‘BC::TensorInitializer<_tensor<t, ml>, typename std::enable_if<BC::MTF::isCorePure<t>::conditional, void>::type>::TensorInitializer(int)’:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h:77:69: error: ‘tensor’ was not declared in this scope
  TensorInitializer(const derived_alt<U>&  tensor) : black_cat_array(tensor.innerShape()) {
                                                                     ^~~~~~
In file included from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10:0,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/TensorBase.h: At global scope:
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:38:71: error: expected ‘;’ before ‘<’ token
  template<class    U> using deriv   = typename shell_of<derived>::type<U, Mathlib>;
                                                                       ^
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:39:76: error: expected ‘;’ before ‘<’ token
  template<class... U> using functor = typename shell_of<functor_type>::type<U...>;
                                                                            ^
../UnitTests/../BC_Internals/BC_Core/TensorBase.h: In member function ‘auto BC::TensorBase<derived>::operator[](int)’:
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:83:68: error: expected ‘(’ before ‘<’ token
     auto operator [] (int i)    { return typename base<RANK>::slice<decltype(slice(0)), Mathlib>(slice(i)); }
                                                                    ^
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:83:69: error: expected primary-expression before ‘decltype’
     auto operator [] (int i)    { return typename base<RANK>::slice<decltype(slice(0)), Mathlib>(slice(i)); }
                                                                     ^~~~~~~~
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:83:69: error: expected ‘;’ before ‘decltype’
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:83:87: error: expected unqualified-id before ‘,’ token
     auto operator [] (int i)    { return typename base<RANK>::slice<decltype(slice(0)), Mathlib>(slice(i)); }
                                                                                       ^
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:83:96: error: expected initializer before ‘>’ token
     auto operator [] (int i)    { return typename base<RANK>::slice<decltype(slice(0)), Mathlib>(slice(i)); }
                                                                                                ^
../UnitTests/../BC_Internals/BC_Core/TensorBase.h: In member function ‘const auto BC::TensorBase<derived>::operator[](int) const’:
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:84:74: error: expected ‘(’ before ‘<’ token
  const auto operator [] (int i) const { return typename base<RANK>::slice<decltype(slice(0)), Mathlib>(slice(i)); }
                                                                          ^
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:84:75: error: expected primary-expression before ‘decltype’
  const auto operator [] (int i) const { return typename base<RANK>::slice<decltype(slice(0)), Mathlib>(slice(i)); }
                                                                           ^~~~~~~~
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:84:75: error: expected ‘;’ before ‘decltype’
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:84:93: error: expected unqualified-id before ‘,’ token
  const auto operator [] (int i) const { return typename base<RANK>::slice<decltype(slice(0)), Mathlib>(slice(i)); }
                                                                                             ^
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:84:102: error: expected initializer before ‘>’ token
  const auto operator [] (int i) const { return typename base<RANK>::slice<decltype(slice(0)), Mathlib>(slice(i)); }
                                                                                                      ^
In file included from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:50:0,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Vector.h: At global scope:
../UnitTests/../BC_Internals/BC_Core/Vector.h:45:15: error: ‘unary_expression_transpose’ was not declared in this scope
  const Vector<unary_expression_transpose<typename MTF::determine_scalar<T>::type, typename parent_class::functor_type>, Mathlib> t() const {
               ^~~~~~~~~~~~~~~~~~~~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Vector.h:45:118: error: template argument 1 is invalid
  const Vector<unary_expression_transpose<typename MTF::determine_scalar<T>::type, typename parent_class::functor_type>, Mathlib> t() const {
                                                                                                                      ^
../UnitTests/../BC_Internals/BC_Core/Vector.h:45:119: error: expected unqualified-id before ‘,’ token
  const Vector<unary_expression_transpose<typename MTF::determine_scalar<T>::type, typename parent_class::functor_type>, Mathlib> t() const {
                                                                                                                       ^
In file included from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:51:0,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Matrix.h:47:15: error: ‘unary_expression_transpose’ was not declared in this scope
  const Matrix<unary_expression_transpose<typename MTF::determine_scalar<T>::type, typename parent_class::functor_type>, Mathlib> t() const {
               ^~~~~~~~~~~~~~~~~~~~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Matrix.h:47:118: error: template argument 1 is invalid
  const Matrix<unary_expression_transpose<typename MTF::determine_scalar<T>::type, typename parent_class::functor_type>, Mathlib> t() const {
                                                                                                                      ^
../UnitTests/../BC_Internals/BC_Core/Matrix.h:47:119: error: expected unqualified-id before ‘,’ token
  const Matrix<unary_expression_transpose<typename MTF::determine_scalar<T>::type, typename parent_class::functor_type>, Mathlib> t() const {
                                                                                                                       ^
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:15:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h: In instantiation of ‘class BC::TensorInitializer<BC::Vector<BC::binary_expression<float, BC::mul, BC::Tensor_Core<BC::Vector<float> >, BC::Tensor_Core<BC::Vector<float> > >, BC::CPU>, void>’:
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:21:7:   required from ‘class BC::TensorBase<BC::Vector<BC::binary_expression<float, BC::mul, BC::Tensor_Core<BC::Vector<float> >, BC::Tensor_Core<BC::Vector<float> > >, BC::CPU> >’
../UnitTests/../BC_Internals/BC_Core/Vector.h:17:7:   required from ‘class BC::Vector<BC::binary_expression<float, BC::mul, BC::Tensor_Core<BC::Vector<float> >, BC::Tensor_Core<BC::Vector<float> > >, BC::CPU>’
../UnitTests/SpeedTests.h:43:19:   required from here
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h:28:15: error: ‘BC::TensorInitializer<derived, expression_tensor>::black_cat_array’ has incomplete type
  functor_type black_cat_array;
               ^~~~~~~~~~~~~~~
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:12:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:26:41: note: declaration of ‘using functor_type = BC::_functor<BC::Vector<BC::binary_expression<float, BC::mul, BC::Tensor_Core<BC::Vector<float> >, BC::Tensor_Core<BC::Vector<float> > >, BC::CPU> > {aka class BC::binary_expression<float, BC::mul, BC::Tensor_Core<BC::Vector<float> >, BC::Tensor_Core<BC::Vector<float> > >}’
 template<class,class,class,class> class binary_expression;
                                         ^~~~~~~~~~~~~~~~~
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:15:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h: In instantiation of ‘class BC::TensorInitializer<BC::Vector<BC::binary_expression<float, BC::assign, BC::Tensor_Core<BC::Vector<float> >, BC::binary_expression<float, BC::mul, BC::Tensor_Core<BC::Vector<float> >, BC::Tensor_Core<BC::Vector<float> > > >, BC::CPU>, void>’:
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:21:7:   required from ‘class BC::TensorBase<BC::Vector<BC::binary_expression<float, BC::assign, BC::Tensor_Core<BC::Vector<float> >, BC::binary_expression<float, BC::mul, BC::Tensor_Core<BC::Vector<float> >, BC::Tensor_Core<BC::Vector<float> > > >, BC::CPU> >’
../UnitTests/../BC_Internals/BC_Core/Vector.h:17:7:   required from ‘class BC::Vector<BC::binary_expression<float, BC::assign, BC::Tensor_Core<BC::Vector<float> >, BC::binary_expression<float, BC::mul, BC::Tensor_Core<BC::Vector<float> >, BC::Tensor_Core<BC::Vector<float> > > >, BC::CPU>’
../UnitTests/SpeedTests.h:43:24:   required from here
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h:28:15: error: ‘BC::TensorInitializer<derived, expression_tensor>::black_cat_array’ has incomplete type
  functor_type black_cat_array;
               ^~~~~~~~~~~~~~~
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:12:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:26:41: note: declaration of ‘using functor_type = BC::_functor<BC::Vector<BC::binary_expression<float, BC::assign, BC::Tensor_Core<BC::Vector<float> >, BC::binary_expression<float, BC::mul, BC::Tensor_Core<BC::Vector<float> >, BC::Tensor_Core<BC::Vector<float> > > >, BC::CPU> > {aka class BC::binary_expression<float, BC::assign, BC::Tensor_Core<BC::Vector<float> >, BC::binary_expression<float, BC::mul, BC::Tensor_Core<BC::Vector<float> >, BC::Tensor_Core<BC::Vector<float> > > >}’
 template<class,class,class,class> class binary_expression;
                                         ^~~~~~~~~~~~~~~~~
In file included from ../UnitTests/main.cpp:4:0:
../UnitTests/SpeedTests.h: In function ‘int speedTestsScalarIteration()’:
../UnitTests/SpeedTests.h:136:9: error: ‘using mat = class BC::Matrix<float> {aka class BC::Matrix<float>}’ has no member named ‘t’
   c = a.t() * b;
         ^
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:15:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h: In instantiation of ‘class BC::TensorInitializer<BC::Matrix<BC::binary_expression<float, BC::add, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> > >, BC::CPU>, void>’:
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:21:7:   required from ‘class BC::TensorBase<BC::Matrix<BC::binary_expression<float, BC::add, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> > >, BC::CPU> >’
../UnitTests/../BC_Internals/BC_Core/Matrix.h:17:7:   required from ‘class BC::Matrix<BC::binary_expression<float, BC::add, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> > >, BC::CPU>’
../UnitTests/SpeedTests.h:146:23:   required from here
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h:28:15: error: ‘BC::TensorInitializer<derived, expression_tensor>::black_cat_array’ has incomplete type
  functor_type black_cat_array;
               ^~~~~~~~~~~~~~~
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:12:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:26:41: note: declaration of ‘using functor_type = BC::_functor<BC::Matrix<BC::binary_expression<float, BC::add, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> > >, BC::CPU> > {aka class BC::binary_expression<float, BC::add, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> > >}’
 template<class,class,class,class> class binary_expression;
                                         ^~~~~~~~~~~~~~~~~
../UnitTests/main.cpp: In function ‘auto test()’:
../UnitTests/main.cpp:40:8: error: ‘using mat = class BC::Matrix<float> {aka class BC::Matrix<float>}’ has no member named ‘t’
  d = a.t();
        ^
../UnitTests/main.cpp:41:8: error: ‘using mat = class BC::Matrix<float> {aka class BC::Matrix<float>}’ has no member named ‘t’
  e = b.t();
        ^
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:15:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h: In instantiation of ‘class BC::TensorInitializer<BC::Matrix<BC::binary_expression_dotproduct<float, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::CPU>, void>’:
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:21:7:   required from ‘class BC::TensorBase<BC::Matrix<BC::binary_expression_dotproduct<float, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::CPU> >’
../UnitTests/../BC_Internals/BC_Core/Matrix.h:17:7:   required from ‘class BC::Matrix<BC::binary_expression_dotproduct<float, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::CPU>’
../UnitTests/main.cpp:47:10:   required from here
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h:28:15: error: ‘BC::TensorInitializer<derived, expression_tensor>::black_cat_array’ has incomplete type
  functor_type black_cat_array;
               ^~~~~~~~~~~~~~~
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:12:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:29:41: note: declaration of ‘using functor_type = BC::_functor<BC::Matrix<BC::binary_expression_dotproduct<float, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::CPU> > {aka class BC::binary_expression_dotproduct<float, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>}’
 template<class,class,class,class> class binary_expression_dotproduct;
                                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
../UnitTests/main.cpp:50:8: error: ‘using mat = class BC::Matrix<float> {aka class BC::Matrix<float>}’ has no member named ‘t’
  c = a.t() * b.t();
        ^
../UnitTests/main.cpp:50:16: error: ‘using mat = class BC::Matrix<float> {aka class BC::Matrix<float>}’ has no member named ‘t’
  c = a.t() * b.t();
                ^
../UnitTests/main.cpp:53:8: error: ‘using mat = class BC::Matrix<float> {aka class BC::Matrix<float>}’ has no member named ‘t’
  c = a.t() * e;
        ^
../UnitTests/main.cpp:56:12: error: ‘using mat = class BC::Matrix<float> {aka class BC::Matrix<float>}’ has no member named ‘t’
  c = d * b.t();
            ^
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:15:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h: In instantiation of ‘class BC::TensorInitializer<BC::Matrix<BC::binary_expression_scalar_R<float, BC::mul, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >, BC::CPU>, void>’:
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:21:7:   required from ‘class BC::TensorBase<BC::Matrix<BC::binary_expression_scalar_R<float, BC::mul, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >, BC::CPU> >’
../UnitTests/../BC_Internals/BC_Core/Matrix.h:17:7:   required from ‘class BC::Matrix<BC::binary_expression_scalar_R<float, BC::mul, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >, BC::CPU>’
../UnitTests/main.cpp:59:16:   required from here
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h:28:15: error: ‘BC::TensorInitializer<derived, expression_tensor>::black_cat_array’ has incomplete type
  functor_type black_cat_array;
               ^~~~~~~~~~~~~~~
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:12:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:28:41: note: declaration of ‘using functor_type = BC::_functor<BC::Matrix<BC::binary_expression_scalar_R<float, BC::mul, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >, BC::CPU> > {aka class BC::binary_expression_scalar_R<float, BC::mul, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >}’
 template<class,class,class,class> class binary_expression_scalar_R;
                                         ^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:15:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h: In instantiation of ‘class BC::TensorInitializer<BC::Matrix<BC::binary_expression_dotproduct<float, BC::binary_expression_scalar_R<float, BC::mul, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::CPU>, void>’:
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:21:7:   required from ‘class BC::TensorBase<BC::Matrix<BC::binary_expression_dotproduct<float, BC::binary_expression_scalar_R<float, BC::mul, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::CPU> >’
../UnitTests/../BC_Internals/BC_Core/Matrix.h:17:7:   required from ‘class BC::Matrix<BC::binary_expression_dotproduct<float, BC::binary_expression_scalar_R<float, BC::mul, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::CPU>’
../UnitTests/main.cpp:59:20:   required from here
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h:28:15: error: ‘BC::TensorInitializer<derived, expression_tensor>::black_cat_array’ has incomplete type
  functor_type black_cat_array;
               ^~~~~~~~~~~~~~~
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:12:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:29:41: note: declaration of ‘using functor_type = BC::_functor<BC::Matrix<BC::binary_expression_dotproduct<float, BC::binary_expression_scalar_R<float, BC::mul, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::CPU> > {aka class BC::binary_expression_dotproduct<float, BC::binary_expression_scalar_R<float, BC::mul, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>}’
 template<class,class,class,class> class binary_expression_dotproduct;
                                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:15:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h: In instantiation of ‘class BC::TensorInitializer<BC::Matrix<BC::binary_expression_scalar_L<float, BC::mul, BC::Tensor_Core<BC::Scalar<float, BC::CPU> >, BC::Tensor_Core<BC::Matrix<float> > >, BC::CPU>, void>’:
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:21:7:   required from ‘class BC::TensorBase<BC::Matrix<BC::binary_expression_scalar_L<float, BC::mul, BC::Tensor_Core<BC::Scalar<float, BC::CPU> >, BC::Tensor_Core<BC::Matrix<float> > >, BC::CPU> >’
../UnitTests/../BC_Internals/BC_Core/Matrix.h:17:7:   required from ‘class BC::Matrix<BC::binary_expression_scalar_L<float, BC::mul, BC::Tensor_Core<BC::Scalar<float, BC::CPU> >, BC::Tensor_Core<BC::Matrix<float> > >, BC::CPU>’
../UnitTests/main.cpp:62:16:   required from here
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h:28:15: error: ‘BC::TensorInitializer<derived, expression_tensor>::black_cat_array’ has incomplete type
  functor_type black_cat_array;
               ^~~~~~~~~~~~~~~
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:12:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:27:41: note: declaration of ‘using functor_type = BC::_functor<BC::Matrix<BC::binary_expression_scalar_L<float, BC::mul, BC::Tensor_Core<BC::Scalar<float, BC::CPU> >, BC::Tensor_Core<BC::Matrix<float> > >, BC::CPU> > {aka class BC::binary_expression_scalar_L<float, BC::mul, BC::Tensor_Core<BC::Scalar<float, BC::CPU> >, BC::Tensor_Core<BC::Matrix<float> > >}’
 template<class,class,class,class> class binary_expression_scalar_L;
                                         ^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:15:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h: In instantiation of ‘class BC::TensorInitializer<BC::Matrix<BC::binary_expression_dotproduct<float, BC::binary_expression_scalar_L<float, BC::mul, BC::Tensor_Core<BC::Scalar<float, BC::CPU> >, BC::Tensor_Core<BC::Matrix<float> > >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::CPU>, void>’:
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:21:7:   required from ‘class BC::TensorBase<BC::Matrix<BC::binary_expression_dotproduct<float, BC::binary_expression_scalar_L<float, BC::mul, BC::Tensor_Core<BC::Scalar<float, BC::CPU> >, BC::Tensor_Core<BC::Matrix<float> > >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::CPU> >’
../UnitTests/../BC_Internals/BC_Core/Matrix.h:17:7:   required from ‘class BC::Matrix<BC::binary_expression_dotproduct<float, BC::binary_expression_scalar_L<float, BC::mul, BC::Tensor_Core<BC::Scalar<float, BC::CPU> >, BC::Tensor_Core<BC::Matrix<float> > >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::CPU>’
../UnitTests/main.cpp:62:20:   required from here
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h:28:15: error: ‘BC::TensorInitializer<derived, expression_tensor>::black_cat_array’ has incomplete type
  functor_type black_cat_array;
               ^~~~~~~~~~~~~~~
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:12:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:29:41: note: declaration of ‘using functor_type = BC::_functor<BC::Matrix<BC::binary_expression_dotproduct<float, BC::binary_expression_scalar_L<float, BC::mul, BC::Tensor_Core<BC::Scalar<float, BC::CPU> >, BC::Tensor_Core<BC::Matrix<float> > >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::CPU> > {aka class BC::binary_expression_dotproduct<float, BC::binary_expression_scalar_L<float, BC::mul, BC::Tensor_Core<BC::Scalar<float, BC::CPU> >, BC::Tensor_Core<BC::Matrix<float> > >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>}’
 template<class,class,class,class> class binary_expression_dotproduct;
                                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:15:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h: In instantiation of ‘class BC::TensorInitializer<BC::Matrix<BC::binary_expression_scalar_R<float, BC::mul, BC::binary_expression_dotproduct<float, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >, BC::CPU>, void>’:
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:21:7:   required from ‘class BC::TensorBase<BC::Matrix<BC::binary_expression_scalar_R<float, BC::mul, BC::binary_expression_dotproduct<float, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >, BC::CPU> >’
../UnitTests/../BC_Internals/BC_Core/Matrix.h:17:7:   required from ‘class BC::Matrix<BC::binary_expression_scalar_R<float, BC::mul, BC::binary_expression_dotproduct<float, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >, BC::CPU>’
../UnitTests/main.cpp:64:20:   required from here
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h:28:15: error: ‘BC::TensorInitializer<derived, expression_tensor>::black_cat_array’ has incomplete type
  functor_type black_cat_array;
               ^~~~~~~~~~~~~~~
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:12:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:28:41: note: declaration of ‘using functor_type = BC::_functor<BC::Matrix<BC::binary_expression_scalar_R<float, BC::mul, BC::binary_expression_dotproduct<float, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >, BC::CPU> > {aka class BC::binary_expression_scalar_R<float, BC::mul, BC::binary_expression_dotproduct<float, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >}’
 template<class,class,class,class> class binary_expression_scalar_R;
                                         ^~~~~~~~~~~~~~~~~~~~~~~~~~
../UnitTests/main.cpp:76:8: error: ‘using mat = class BC::Matrix<float> {aka class BC::Matrix<float>}’ has no member named ‘t’
  c = a.t() * b.t();
        ^
../UnitTests/main.cpp:76:16: error: ‘using mat = class BC::Matrix<float> {aka class BC::Matrix<float>}’ has no member named ‘t’
  c = a.t() * b.t();
                ^
../UnitTests/main.cpp:80:8: error: ‘using mat = class BC::Matrix<float> {aka class BC::Matrix<float>}’ has no member named ‘t’
  c = a.t() * A * (b.t() * A);
        ^
../UnitTests/main.cpp:80:21: error: ‘using mat = class BC::Matrix<float> {aka class BC::Matrix<float>}’ has no member named ‘t’
  c = a.t() * A * (b.t() * A);
                     ^
../UnitTests/main.cpp:94:14: error: invalid operands of types ‘void’ and ‘void’ to binary ‘operator+’
  d[1] = d[1] + d[1];
         ~~~~~^~~~~~
../UnitTests/main.cpp:99:8: error: invalid types ‘void[int]’ for array subscript
  d[1][1] = d[1][1] + d[1][1];
        ^
../UnitTests/main.cpp:99:18: error: invalid types ‘void[int]’ for array subscript
  d[1][1] = d[1][1] + d[1][1];
                  ^
../UnitTests/main.cpp:99:28: error: invalid types ‘void[int]’ for array subscript
  d[1][1] = d[1][1] + d[1][1];
                            ^
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:13:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Utility.h: In instantiation of ‘void BC::Tensor_Utility<deriv, typename std::enable_if<(isPrim<typename BC::determine_functor< <template-parameter-1-1> >::fscal> || BC::MTF::isCore<typename BC::determine_functor< <template-parameter-1-1> >::type>::conditional), void>::type>::read(std::ifstream&, bool, bool) [with deriv = BC::Matrix<double>; typename std::enable_if<(isPrim<typename BC::determine_functor< <template-parameter-1-1> >::fscal> || BC::MTF::isCore<typename BC::determine_functor< <template-parameter-1-1> >::type>::conditional), void>::type = void; std::ifstream = std::basic_ifstream<char>]’:
../UnitTests/main.cpp:113:15:   required from here
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Utility.h:132:22: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
    for (int i = 0; i < dims.size(); ++i) {
                    ~~^~~~~~~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Utility.h:138:92: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
    MATHLIB::HostToDevice(asDerived().data().core(), &data[data[0] + 1], asDerived().size() > data.size() ? data.size() : asDerived().size());
                                                                                             
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:13:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Utility.h:140:86: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
    MATHLIB::HostToDevice(asDerived().data().core(), &data[0],     asDerived().size() > data.size() ? data.size() : asDerived().size());
                                                                                       
In file included from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:32:0,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_MathLibraries/Mathematics_CPU.h: In instantiation of ‘static void BC::CPU::copy(T&, const J&, int) [with T = BC::Tensor_Core<BC::Matrix<float> >; J = BC::binary_expression_dotproduct<float, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>]’:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:218:21:   required from ‘derived& BC::Tensor_Operations< <template-parameter-1-1> >::operator=(const BC::Tensor_Operations<param_deriv>&) [with pDeriv = BC::Matrix<BC::binary_expression_dotproduct<float, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::CPU>; derived = BC::Matrix<float>]’
../UnitTests/../BC_Internals/BC_Core/Matrix.h:45:83:   required from ‘BC::Matrix< <template-parameter-1-1>, ML>& BC::Matrix< <template-parameter-1-1>, ML>::operator=(const BC::Matrix<U, Mathlib>&) [with U = BC::binary_expression_dotproduct<float, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>; T = float; Mathlib = BC::CPU]’
../UnitTests/main.cpp:47:10:   required from here
../UnitTests/../BC_Internals/BC_MathLibraries/Mathematics_CPU.h:70:13: error: no match for ‘operator[]’ (operand types are ‘const BC::binary_expression_dotproduct<float, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>’ and ‘int’)
     t[i] = j[i];
            ~^
../UnitTests/../BC_Internals/BC_MathLibraries/Mathematics_CPU.h:76:12: error: no match for ‘operator[]’ (operand types are ‘const BC::binary_expression_dotproduct<float, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>’ and ‘int’)
    t[i] = j[i];
           ~^
../UnitTests/../BC_Internals/BC_MathLibraries/Mathematics_CPU.h: In instantiation of ‘static void BC::CPU::copy(T&, const J&, int) [with T = BC::Tensor_Core<BC::Matrix<float> >; J = BC::binary_expression_dotproduct<float, BC::binary_expression_scalar_R<float, BC::mul, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>]’:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:218:21:   required from ‘derived& BC::Tensor_Operations< <template-parameter-1-1> >::operator=(const BC::Tensor_Operations<param_deriv>&) [with pDeriv = BC::Matrix<BC::binary_expression_dotproduct<float, BC::binary_expression_scalar_R<float, BC::mul, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::CPU>; derived = BC::Matrix<float>]’
../UnitTests/../BC_Internals/BC_Core/Matrix.h:45:83:   required from ‘BC::Matrix< <template-parameter-1-1>, ML>& BC::Matrix< <template-parameter-1-1>, ML>::operator=(const BC::Matrix<U, Mathlib>&) [with U = BC::binary_expression_dotproduct<float, BC::binary_expression_scalar_R<float, BC::mul, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>; T = float; Mathlib = BC::CPU]’
../UnitTests/main.cpp:59:20:   required from here
../UnitTests/../BC_Internals/BC_MathLibraries/Mathematics_CPU.h:70:13: error: no match for ‘operator[]’ (operand types are ‘const BC::binary_expression_dotproduct<float, BC::binary_expression_scalar_R<float, BC::mul, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>’ and ‘int’)
     t[i] = j[i];
            ~^
../UnitTests/../BC_Internals/BC_MathLibraries/Mathematics_CPU.h:76:12: error: no match for ‘operator[]’ (operand types are ‘const BC::binary_expression_dotproduct<float, BC::binary_expression_scalar_R<float, BC::mul, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>’ and ‘int’)
    t[i] = j[i];
           ~^
../UnitTests/../BC_Internals/BC_MathLibraries/Mathematics_CPU.h: In instantiation of ‘static void BC::CPU::copy(T&, const J&, int) [with T = BC::Tensor_Core<BC::Matrix<float> >; J = BC::binary_expression_dotproduct<float, BC::binary_expression_scalar_L<float, BC::mul, BC::Tensor_Core<BC::Scalar<float, BC::CPU> >, BC::Tensor_Core<BC::Matrix<float> > >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>]’:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:218:21:   required from ‘derived& BC::Tensor_Operations< <template-parameter-1-1> >::operator=(const BC::Tensor_Operations<param_deriv>&) [with pDeriv = BC::Matrix<BC::binary_expression_dotproduct<float, BC::binary_expression_scalar_L<float, BC::mul, BC::Tensor_Core<BC::Scalar<float, BC::CPU> >, BC::Tensor_Core<BC::Matrix<float> > >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::CPU>; derived = BC::Matrix<float>]’
../UnitTests/../BC_Internals/BC_Core/Matrix.h:45:83:   required from ‘BC::Matrix< <template-parameter-1-1>, ML>& BC::Matrix< <template-parameter-1-1>, ML>::operator=(const BC::Matrix<U, Mathlib>&) [with U = BC::binary_expression_dotproduct<float, BC::binary_expression_scalar_L<float, BC::mul, BC::Tensor_Core<BC::Scalar<float, BC::CPU> >, BC::Tensor_Core<BC::Matrix<float> > >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>; T = float; Mathlib = BC::CPU]’
../UnitTests/main.cpp:62:20:   required from here
../UnitTests/../BC_Internals/BC_MathLibraries/Mathematics_CPU.h:70:13: error: no match for ‘operator[]’ (operand types are ‘const BC::binary_expression_dotproduct<float, BC::binary_expression_scalar_L<float, BC::mul, BC::Tensor_Core<BC::Scalar<float, BC::CPU> >, BC::Tensor_Core<BC::Matrix<float> > >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>’ and ‘int’)
     t[i] = j[i];
            ~^
../UnitTests/../BC_Internals/BC_MathLibraries/Mathematics_CPU.h:76:12: error: no match for ‘operator[]’ (operand types are ‘const BC::binary_expression_dotproduct<float, BC::binary_expression_scalar_L<float, BC::mul, BC::Tensor_Core<BC::Scalar<float, BC::CPU> >, BC::Tensor_Core<BC::Matrix<float> > >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>’ and ‘int’)
    t[i] = j[i];
           ~^
../UnitTests/../BC_Internals/BC_MathLibraries/Mathematics_CPU.h: In instantiation of ‘static void BC::CPU::copy(T&, const J&, int) [with T = BC::Tensor_Core<BC::Matrix<float> >; J = BC::binary_expression_scalar_R<float, BC::mul, BC::binary_expression_dotproduct<float, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >]’:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:218:21:   required from ‘derived& BC::Tensor_Operations< <template-parameter-1-1> >::operator=(const BC::Tensor_Operations<param_deriv>&) [with pDeriv = BC::Matrix<BC::binary_expression_scalar_R<float, BC::mul, BC::binary_expression_dotproduct<float, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >, BC::CPU>; derived = BC::Matrix<float>]’
../UnitTests/../BC_Internals/BC_Core/Matrix.h:45:83:   required from ‘BC::Matrix< <template-parameter-1-1>, ML>& BC::Matrix< <template-parameter-1-1>, ML>::operator=(const BC::Matrix<U, Mathlib>&) [with U = BC::binary_expression_scalar_R<float, BC::mul, BC::binary_expression_dotproduct<float, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >; T = float; Mathlib = BC::CPU]’
../UnitTests/main.cpp:64:20:   required from here
../UnitTests/../BC_Internals/BC_MathLibraries/Mathematics_CPU.h:70:13: error: no match for ‘operator[]’ (operand types are ‘const BC::binary_expression_scalar_R<float, BC::mul, BC::binary_expression_dotproduct<float, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >’ and ‘int’)
     t[i] = j[i];
            ~^
../UnitTests/../BC_Internals/BC_MathLibraries/Mathematics_CPU.h:76:12: error: no match for ‘operator[]’ (operand types are ‘const BC::binary_expression_scalar_R<float, BC::mul, BC::binary_expression_dotproduct<float, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >’ and ‘int’)
    t[i] = j[i];
           ~^
In file included from ../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Core_Slice.h:17:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Core.h:13,
                 from ../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h:12,
                 from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:15,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Core_Scalar.h: In instantiation of ‘BC::Tensor_Scalar<PARENT>::Tensor_Scalar(BC::Tensor_Scalar<PARENT>::scalar*, const PARENT&) [with PARENT = BC::Tensor_Core<BC::Matrix<float> >; BC::Tensor_Scalar<PARENT>::scalar = float]’:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h:33:63:   required from ‘BC::TensorInitializer<derived, expression_tensor>::TensorInitializer(const params& ...) [with params = {float*, BC::Tensor_Core<BC::Matrix<float, BC::CPU> >}; derived = BC::Scalar<BC::Tensor_Scalar<BC::Tensor_Core<BC::Matrix<float> > >, BC::CPU>; expression_tensor = void]’
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:50:51:   required from ‘BC::TensorBase<derived>::TensorBase(const params& ...) [with params = {float*, BC::Tensor_Core<BC::Matrix<float, BC::CPU> >}; derived = BC::Scalar<BC::Tensor_Scalar<BC::Tensor_Core<BC::Matrix<float> > >, BC::CPU>]’
../UnitTests/../BC_Internals/BC_Core/Scalar.h:61:97:   required from ‘BC::Scalar< <template-parameter-1-1>, ML>::Scalar(const var1&, const var2&, const params& ...) [with var1 = float*; var2 = BC::Tensor_Core<BC::Matrix<float> >; params = {}; T = BC::Tensor_Scalar<BC::Tensor_Core<BC::Matrix<float> > >; Mathlib = BC::CPU]’
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:92:19:   required from ‘auto BC::TensorBase<derived>::getScalar(int) [with derived = BC::Matrix<float>]’
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:96:52:   required from ‘auto BC::TensorBase<derived>::operator()(int) [with derived = BC::Matrix<float>]’
../UnitTests/main.cpp:33:6:   required from here
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Core_Scalar.h:36:10: warning: ‘BC::Tensor_Scalar<BC::Tensor_Core<BC::Matrix<float> > >::array_slice’ will be initialized after [-Wreorder]
  scalar* array_slice;
          ^~~~~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Core_Scalar.h:35:16: warning:   ‘const BC::Tensor_Core<BC::Matrix<float> >& BC::Tensor_Scalar<BC::Tensor_Core<BC::Matrix<float> > >::parent’ [-Wreorder]
  const PARENT& parent;
                ^~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Core_Scalar.h:41:2: warning:   when initialized here [-Wreorder]
  Tensor_Scalar(scalar* array, const PARENT& parent_) : array_slice(array), parent(parent_) {}
  ^~~~~~~~~~~~~
In file included from ../UnitTests/../BC_Internals/BC_MathLibraries/Mathematics_CPU.h:15:0,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:32,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_MathLibraries/BC_PrintFunctions.h: In instantiation of ‘void BC::printHelper(const T&, int_ranks, int, std::__cxx11::string, int) [with T = const float*; int_ranks = int*; std::__cxx11::string = std::__cxx11::basic_string<char>]’:
../UnitTests/../BC_Internals/BC_MathLibraries/BC_PrintFunctions.h:102:13:   required from ‘void BC::print(const T&, RANKS, int, int) [with T = const float*; RANKS = int*]’
../UnitTests/../BC_Internals/BC_MathLibraries/Mathematics_CPU.h:98:12:   required from ‘static void BC::CPU::print(T, RANKS, int, int) [with T = const float*; RANKS = int*]’
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Utility.h:75:17:   required from ‘void BC::Tensor_Utility<deriv, typename std::enable_if<(isPrim<typename BC::determine_functor< <template-parameter-1-1> >::fscal> || BC::MTF::isCore<typename BC::determine_functor< <template-parameter-1-1> >::type>::conditional), void>::type>::print() const [with deriv = BC::Matrix<float>; typename std::enable_if<(isPrim<typename BC::determine_functor< <template-parameter-1-1> >::fscal> || BC::MTF::isCore<typename BC::determine_functor< <template-parameter-1-1> >::type>::conditional), void>::type = void]’
../UnitTests/main.cpp:37:10:   required from here
../UnitTests/../BC_Internals/BC_MathLibraries/BC_PrintFunctions.h:43:38: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
     str = str.substr(0, str.length() < printSpace ? str.length() : printSpace);
                                       
../UnitTests/../BC_Internals/BC_MathLibraries/BC_PrintFunctions.h:46:22: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
     if (str.length() < printSpace)
                       
../UnitTests/../BC_Internals/BC_MathLibraries/BC_PrintFunctions.h:67:37: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
    str = str.substr(0, str.length() < printSpace ? str.length() : printSpace);
                                      
../UnitTests/../BC_Internals/BC_MathLibraries/BC_PrintFunctions.h:70:21: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
    if (str.length() < printSpace)
                      
In file included from ../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h:12:0,
                 from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:15,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Core.h: In instantiation of ‘BC::Tensor_Core< <template-parameter-1-1> >::Tensor_Core() [with T = BC::Matrix<float>]’:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h:56:2:   required from ‘BC::TensorInitializer<_tensor<t, ml>, typename std::enable_if<BC::MTF::isCorePure<t>::conditional, void>::type>::TensorInitializer(BC::TensorInitializer<_tensor<t, ml>, typename std::enable_if<BC::MTF::isCorePure<t>::conditional, void>::type>::derived&&) [with _tensor = BC::Matrix; t = float; ml = BC::CPU; typename std::enable_if<BC::MTF::isCorePure<t>::conditional, void>::type = void; BC::TensorInitializer<_tensor<t, ml>, typename std::enable_if<BC::MTF::isCorePure<t>::conditional, void>::type>::derived = BC::Matrix<float>]’
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:50:51:   required from ‘BC::TensorBase<derived>::TensorBase(const params& ...) [with params = {BC::Matrix<BC::binary_expression<float, BC::add, BC::Tensor_Core<BC::Matrix<float, BC::CPU> >, BC::Tensor_Core<BC::Matrix<float, BC::CPU> > >, BC::CPU>}; derived = BC::Matrix<float>]’
../UnitTests/../BC_Internals/BC_Core/Matrix.h:37:77:   required from ‘BC::Matrix< <template-parameter-1-1>, ML>::Matrix(const BC::Matrix<U, Mathlib>&) [with U = BC::binary_expression<float, BC::add, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> > >; T = float; Mathlib = BC::CPU]’
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Utility.h:34:50:   required from ‘auto BC::Tensor_Utility<deriv, <template-parameter-1-2> >::eval() const [with deriv = BC::Matrix<BC::binary_expression<float, BC::add, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> > >, BC::CPU>; <template-parameter-1-2> = void]’
../UnitTests/main.cpp:75:15:   required from here
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Core.h:38:3: error: static assertion failed: DEFAULT CONSTRUCTOR FOR TENSOR_CORE ONLY AVAILABLE FOR RANK == 0 (SCALAR)
   static_assert(RANK == 0, "DEFAULT CONSTRUCTOR FOR TENSOR_CORE ONLY AVAILABLE FOR RANK == 0 (SCALAR)");
   ^~~~~~~~~~~~~
In file included from ../UnitTests/../BC_Internals/BC_MathLibraries/Mathematics_CPU.h:15:0,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:32,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_MathLibraries/BC_PrintFunctions.h: In instantiation of ‘void BC::printHelper(const T&, int_ranks, int, std::__cxx11::string, int) [with T = const double*; int_ranks = int*; std::__cxx11::string = std::__cxx11::basic_string<char>]’:
../UnitTests/../BC_Internals/BC_MathLibraries/BC_PrintFunctions.h:102:13:   required from ‘void BC::print(const T&, RANKS, int, int) [with T = const double*; RANKS = int*]’
../UnitTests/../BC_Internals/BC_MathLibraries/Mathematics_CPU.h:98:12:   required from ‘static void BC::CPU::print(T, RANKS, int, int) [with T = const double*; RANKS = int*]’
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Utility.h:75:17:   required from ‘void BC::Tensor_Utility<deriv, typename std::enable_if<(isPrim<typename BC::determine_functor< <template-parameter-1-1> >::fscal> || BC::MTF::isCore<typename BC::determine_functor< <template-parameter-1-1> >::type>::conditional), void>::type>::print() const [with deriv = BC::Matrix<double>; typename std::enable_if<(isPrim<typename BC::determine_functor< <template-parameter-1-1> >::fscal> || BC::MTF::isCore<typename BC::determine_functor< <template-parameter-1-1> >::type>::conditional), void>::type = void]’
../UnitTests/main.cpp:114:14:   required from here
../UnitTests/../BC_Internals/BC_MathLibraries/BC_PrintFunctions.h:43:38: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
     str = str.substr(0, str.length() < printSpace ? str.length() : printSpace);
                                       
../UnitTests/../BC_Internals/BC_MathLibraries/BC_PrintFunctions.h:46:22: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
     if (str.length() < printSpace)
                       
../UnitTests/../BC_Internals/BC_MathLibraries/BC_PrintFunctions.h:67:37: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
    str = str.substr(0, str.length() < printSpace ? str.length() : printSpace);
                                      
../UnitTests/../BC_Internals/BC_MathLibraries/BC_PrintFunctions.h:70:21: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
    if (str.length() < printSpace)
                      
make: *** [UnitTests/main.o] Error 1
UnitTests/subdir.mk:18: recipe for target 'UnitTests/main.o' failed
17:17:10 **** Incremental Build of configuration Debug for project BlackCat_LibraryCPU ****
make all 
Building file: ../UnitTests/main.cpp
Invoking: GCC C++ Compiler
g++ -O0 -g3 -Wall -c -fmessage-length=0 -MMD -MP -MF"UnitTests/main.d" -MT"UnitTests/main.o" -o "UnitTests/main.o" "../UnitTests/main.cpp"
In file included from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:32:0,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_MathLibraries/Mathematics_CPU.h:74:0: warning: ignoring #pragma omp parallel [-Wunknown-pragmas]
 #pragma omp parallel for
 
../UnitTests/../BC_Internals/BC_MathLibraries/Mathematics_CPU.h:78:0: warning: ignoring #pragma omp barrier [-Wunknown-pragmas]
 #pragma omp barrier
 
../UnitTests/../BC_Internals/BC_MathLibraries/Mathematics_CPU.h:88:0: warning: ignoring #pragma omp parallel [-Wunknown-pragmas]
 #pragma omp parallel for
 
../UnitTests/../BC_Internals/BC_MathLibraries/Mathematics_CPU.h:92:0: warning: ignoring #pragma omp barrier [-Wunknown-pragmas]
 #pragma omp barrier
 
In file included from ../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Core_Slice.h:17:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Core.h:13,
                 from ../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h:12,
                 from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:15,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Core_Scalar.h:22:0: warning: "__BCinline__" redefined
 #define __BCinline__
 
In file included from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:29:0,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Expressions/BlackCat_Internal_Definitions.h:25:0: note: this is the location of the previous definition
 #define __BCinline__ __BC_gcpu__ __attribute__((always_inline))
 
In file included from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10:0,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:38:71: error: expected ‘;’ before ‘<’ token
  template<class    U> using deriv   = typename shell_of<derived>::type<U, Mathlib>;
                                                                       ^
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:39:76: error: expected ‘;’ before ‘<’ token
  template<class... U> using functor = typename shell_of<functor_type>::type<U...>;
                                                                            ^
../UnitTests/../BC_Internals/BC_Core/TensorBase.h: In member function ‘auto BC::TensorBase<derived>::operator[](int)’:
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:83:68: error: expected ‘(’ before ‘<’ token
     auto operator [] (int i)    { return typename base<RANK>::slice<decltype(slice(0)), Mathlib>(slice(i)); }
                                                                    ^
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:83:69: error: expected primary-expression before ‘decltype’
     auto operator [] (int i)    { return typename base<RANK>::slice<decltype(slice(0)), Mathlib>(slice(i)); }
                                                                     ^~~~~~~~
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:83:69: error: expected ‘;’ before ‘decltype’
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:83:87: error: expected unqualified-id before ‘,’ token
     auto operator [] (int i)    { return typename base<RANK>::slice<decltype(slice(0)), Mathlib>(slice(i)); }
                                                                                       ^
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:83:96: error: expected initializer before ‘>’ token
     auto operator [] (int i)    { return typename base<RANK>::slice<decltype(slice(0)), Mathlib>(slice(i)); }
                                                                                                ^
../UnitTests/../BC_Internals/BC_Core/TensorBase.h: In member function ‘const auto BC::TensorBase<derived>::operator[](int) const’:
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:84:74: error: expected ‘(’ before ‘<’ token
  const auto operator [] (int i) const { return typename base<RANK>::slice<decltype(slice(0)), Mathlib>(slice(i)); }
                                                                          ^
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:84:75: error: expected primary-expression before ‘decltype’
  const auto operator [] (int i) const { return typename base<RANK>::slice<decltype(slice(0)), Mathlib>(slice(i)); }
                                                                           ^~~~~~~~
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:84:75: error: expected ‘;’ before ‘decltype’
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:84:93: error: expected unqualified-id before ‘,’ token
  const auto operator [] (int i) const { return typename base<RANK>::slice<decltype(slice(0)), Mathlib>(slice(i)); }
                                                                                             ^
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:84:102: error: expected initializer before ‘>’ token
  const auto operator [] (int i) const { return typename base<RANK>::slice<decltype(slice(0)), Mathlib>(slice(i)); }
                                                                                                      ^
In file included from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:50:0,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Vector.h: At global scope:
../UnitTests/../BC_Internals/BC_Core/Vector.h:45:15: error: ‘unary_expression_transpose’ was not declared in this scope
  const Vector<unary_expression_transpose<typename MTF::determine_scalar<T>::type, typename parent_class::functor_type>, Mathlib> t() const {
               ^~~~~~~~~~~~~~~~~~~~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Vector.h:45:118: error: template argument 1 is invalid
  const Vector<unary_expression_transpose<typename MTF::determine_scalar<T>::type, typename parent_class::functor_type>, Mathlib> t() const {
                                                                                                                      ^
../UnitTests/../BC_Internals/BC_Core/Vector.h:45:119: error: expected unqualified-id before ‘,’ token
  const Vector<unary_expression_transpose<typename MTF::determine_scalar<T>::type, typename parent_class::functor_type>, Mathlib> t() const {
                                                                                                                       ^
In file included from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:51:0,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Matrix.h:47:15: error: ‘unary_expression_transpose’ was not declared in this scope
  const Matrix<unary_expression_transpose<typename MTF::determine_scalar<T>::type, typename parent_class::functor_type>, Mathlib> t() const {
               ^~~~~~~~~~~~~~~~~~~~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Matrix.h:47:118: error: template argument 1 is invalid
  const Matrix<unary_expression_transpose<typename MTF::determine_scalar<T>::type, typename parent_class::functor_type>, Mathlib> t() const {
                                                                                                                      ^
../UnitTests/../BC_Internals/BC_Core/Matrix.h:47:119: error: expected unqualified-id before ‘,’ token
  const Matrix<unary_expression_transpose<typename MTF::determine_scalar<T>::type, typename parent_class::functor_type>, Mathlib> t() const {
                                                                                                                       ^
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:15:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h: In instantiation of ‘class BC::TensorInitializer<BC::Vector<BC::binary_expression<float, BC::mul, BC::Tensor_Core<BC::Vector<float> >, BC::Tensor_Core<BC::Vector<float> > >, BC::CPU>, void>’:
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:21:7:   required from ‘class BC::TensorBase<BC::Vector<BC::binary_expression<float, BC::mul, BC::Tensor_Core<BC::Vector<float> >, BC::Tensor_Core<BC::Vector<float> > >, BC::CPU> >’
../UnitTests/../BC_Internals/BC_Core/Vector.h:17:7:   required from ‘class BC::Vector<BC::binary_expression<float, BC::mul, BC::Tensor_Core<BC::Vector<float> >, BC::Tensor_Core<BC::Vector<float> > >, BC::CPU>’
../UnitTests/SpeedTests.h:43:19:   required from here
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h:28:15: error: ‘BC::TensorInitializer<derived, expression_tensor>::black_cat_array’ has incomplete type
  functor_type black_cat_array;
               ^~~~~~~~~~~~~~~
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:12:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:26:41: note: declaration of ‘using functor_type = BC::_functor<BC::Vector<BC::binary_expression<float, BC::mul, BC::Tensor_Core<BC::Vector<float> >, BC::Tensor_Core<BC::Vector<float> > >, BC::CPU> > {aka class BC::binary_expression<float, BC::mul, BC::Tensor_Core<BC::Vector<float> >, BC::Tensor_Core<BC::Vector<float> > >}’
 template<class,class,class,class> class binary_expression;
                                         ^~~~~~~~~~~~~~~~~
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:15:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h: In instantiation of ‘class BC::TensorInitializer<BC::Vector<BC::binary_expression<float, BC::assign, BC::Tensor_Core<BC::Vector<float> >, BC::binary_expression<float, BC::mul, BC::Tensor_Core<BC::Vector<float> >, BC::Tensor_Core<BC::Vector<float> > > >, BC::CPU>, void>’:
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:21:7:   required from ‘class BC::TensorBase<BC::Vector<BC::binary_expression<float, BC::assign, BC::Tensor_Core<BC::Vector<float> >, BC::binary_expression<float, BC::mul, BC::Tensor_Core<BC::Vector<float> >, BC::Tensor_Core<BC::Vector<float> > > >, BC::CPU> >’
../UnitTests/../BC_Internals/BC_Core/Vector.h:17:7:   required from ‘class BC::Vector<BC::binary_expression<float, BC::assign, BC::Tensor_Core<BC::Vector<float> >, BC::binary_expression<float, BC::mul, BC::Tensor_Core<BC::Vector<float> >, BC::Tensor_Core<BC::Vector<float> > > >, BC::CPU>’
../UnitTests/SpeedTests.h:43:24:   required from here
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h:28:15: error: ‘BC::TensorInitializer<derived, expression_tensor>::black_cat_array’ has incomplete type
  functor_type black_cat_array;
               ^~~~~~~~~~~~~~~
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:12:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:26:41: note: declaration of ‘using functor_type = BC::_functor<BC::Vector<BC::binary_expression<float, BC::assign, BC::Tensor_Core<BC::Vector<float> >, BC::binary_expression<float, BC::mul, BC::Tensor_Core<BC::Vector<float> >, BC::Tensor_Core<BC::Vector<float> > > >, BC::CPU> > {aka class BC::binary_expression<float, BC::assign, BC::Tensor_Core<BC::Vector<float> >, BC::binary_expression<float, BC::mul, BC::Tensor_Core<BC::Vector<float> >, BC::Tensor_Core<BC::Vector<float> > > >}’
 template<class,class,class,class> class binary_expression;
                                         ^~~~~~~~~~~~~~~~~
In file included from ../UnitTests/main.cpp:4:0:
../UnitTests/SpeedTests.h: In function ‘int speedTestsScalarIteration()’:
../UnitTests/SpeedTests.h:136:9: error: ‘using mat = class BC::Matrix<float> {aka class BC::Matrix<float>}’ has no member named ‘t’
   c = a.t() * b;
         ^
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:15:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h: In instantiation of ‘class BC::TensorInitializer<BC::Matrix<BC::binary_expression<float, BC::add, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> > >, BC::CPU>, void>’:
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:21:7:   required from ‘class BC::TensorBase<BC::Matrix<BC::binary_expression<float, BC::add, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> > >, BC::CPU> >’
../UnitTests/../BC_Internals/BC_Core/Matrix.h:17:7:   required from ‘class BC::Matrix<BC::binary_expression<float, BC::add, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> > >, BC::CPU>’
../UnitTests/SpeedTests.h:146:23:   required from here
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h:28:15: error: ‘BC::TensorInitializer<derived, expression_tensor>::black_cat_array’ has incomplete type
  functor_type black_cat_array;
               ^~~~~~~~~~~~~~~
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:12:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:26:41: note: declaration of ‘using functor_type = BC::_functor<BC::Matrix<BC::binary_expression<float, BC::add, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> > >, BC::CPU> > {aka class BC::binary_expression<float, BC::add, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> > >}’
 template<class,class,class,class> class binary_expression;
                                         ^~~~~~~~~~~~~~~~~
../UnitTests/main.cpp: In function ‘auto test()’:
../UnitTests/main.cpp:40:8: error: ‘using mat = class BC::Matrix<float> {aka class BC::Matrix<float>}’ has no member named ‘t’
  d = a.t();
        ^
../UnitTests/main.cpp:41:8: error: ‘using mat = class BC::Matrix<float> {aka class BC::Matrix<float>}’ has no member named ‘t’
  e = b.t();
        ^
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:15:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h: In instantiation of ‘class BC::TensorInitializer<BC::Matrix<BC::binary_expression_dotproduct<float, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::CPU>, void>’:
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:21:7:   required from ‘class BC::TensorBase<BC::Matrix<BC::binary_expression_dotproduct<float, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::CPU> >’
../UnitTests/../BC_Internals/BC_Core/Matrix.h:17:7:   required from ‘class BC::Matrix<BC::binary_expression_dotproduct<float, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::CPU>’
../UnitTests/main.cpp:47:10:   required from here
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h:28:15: error: ‘BC::TensorInitializer<derived, expression_tensor>::black_cat_array’ has incomplete type
  functor_type black_cat_array;
               ^~~~~~~~~~~~~~~
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:12:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:29:41: note: declaration of ‘using functor_type = BC::_functor<BC::Matrix<BC::binary_expression_dotproduct<float, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::CPU> > {aka class BC::binary_expression_dotproduct<float, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>}’
 template<class,class,class,class> class binary_expression_dotproduct;
                                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
../UnitTests/main.cpp:50:8: error: ‘using mat = class BC::Matrix<float> {aka class BC::Matrix<float>}’ has no member named ‘t’
  c = a.t() * b.t();
        ^
../UnitTests/main.cpp:50:16: error: ‘using mat = class BC::Matrix<float> {aka class BC::Matrix<float>}’ has no member named ‘t’
  c = a.t() * b.t();
                ^
../UnitTests/main.cpp:53:8: error: ‘using mat = class BC::Matrix<float> {aka class BC::Matrix<float>}’ has no member named ‘t’
  c = a.t() * e;
        ^
../UnitTests/main.cpp:56:12: error: ‘using mat = class BC::Matrix<float> {aka class BC::Matrix<float>}’ has no member named ‘t’
  c = d * b.t();
            ^
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:15:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h: In instantiation of ‘class BC::TensorInitializer<BC::Matrix<BC::binary_expression_scalar_R<float, BC::mul, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >, BC::CPU>, void>’:
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:21:7:   required from ‘class BC::TensorBase<BC::Matrix<BC::binary_expression_scalar_R<float, BC::mul, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >, BC::CPU> >’
../UnitTests/../BC_Internals/BC_Core/Matrix.h:17:7:   required from ‘class BC::Matrix<BC::binary_expression_scalar_R<float, BC::mul, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >, BC::CPU>’
../UnitTests/main.cpp:59:16:   required from here
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h:28:15: error: ‘BC::TensorInitializer<derived, expression_tensor>::black_cat_array’ has incomplete type
  functor_type black_cat_array;
               ^~~~~~~~~~~~~~~
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:12:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:28:41: note: declaration of ‘using functor_type = BC::_functor<BC::Matrix<BC::binary_expression_scalar_R<float, BC::mul, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >, BC::CPU> > {aka class BC::binary_expression_scalar_R<float, BC::mul, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >}’
 template<class,class,class,class> class binary_expression_scalar_R;
                                         ^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:15:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h: In instantiation of ‘class BC::TensorInitializer<BC::Matrix<BC::binary_expression_dotproduct<float, BC::binary_expression_scalar_R<float, BC::mul, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::CPU>, void>’:
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:21:7:   required from ‘class BC::TensorBase<BC::Matrix<BC::binary_expression_dotproduct<float, BC::binary_expression_scalar_R<float, BC::mul, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::CPU> >’
../UnitTests/../BC_Internals/BC_Core/Matrix.h:17:7:   required from ‘class BC::Matrix<BC::binary_expression_dotproduct<float, BC::binary_expression_scalar_R<float, BC::mul, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::CPU>’
../UnitTests/main.cpp:59:20:   required from here
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h:28:15: error: ‘BC::TensorInitializer<derived, expression_tensor>::black_cat_array’ has incomplete type
  functor_type black_cat_array;
               ^~~~~~~~~~~~~~~
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:12:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:29:41: note: declaration of ‘using functor_type = BC::_functor<BC::Matrix<BC::binary_expression_dotproduct<float, BC::binary_expression_scalar_R<float, BC::mul, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::CPU> > {aka class BC::binary_expression_dotproduct<float, BC::binary_expression_scalar_R<float, BC::mul, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>}’
 template<class,class,class,class> class binary_expression_dotproduct;
                                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:15:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h: In instantiation of ‘class BC::TensorInitializer<BC::Matrix<BC::binary_expression_scalar_L<float, BC::mul, BC::Tensor_Core<BC::Scalar<float, BC::CPU> >, BC::Tensor_Core<BC::Matrix<float> > >, BC::CPU>, void>’:
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:21:7:   required from ‘class BC::TensorBase<BC::Matrix<BC::binary_expression_scalar_L<float, BC::mul, BC::Tensor_Core<BC::Scalar<float, BC::CPU> >, BC::Tensor_Core<BC::Matrix<float> > >, BC::CPU> >’
../UnitTests/../BC_Internals/BC_Core/Matrix.h:17:7:   required from ‘class BC::Matrix<BC::binary_expression_scalar_L<float, BC::mul, BC::Tensor_Core<BC::Scalar<float, BC::CPU> >, BC::Tensor_Core<BC::Matrix<float> > >, BC::CPU>’
../UnitTests/main.cpp:62:16:   required from here
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h:28:15: error: ‘BC::TensorInitializer<derived, expression_tensor>::black_cat_array’ has incomplete type
  functor_type black_cat_array;
               ^~~~~~~~~~~~~~~
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:12:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:27:41: note: declaration of ‘using functor_type = BC::_functor<BC::Matrix<BC::binary_expression_scalar_L<float, BC::mul, BC::Tensor_Core<BC::Scalar<float, BC::CPU> >, BC::Tensor_Core<BC::Matrix<float> > >, BC::CPU> > {aka class BC::binary_expression_scalar_L<float, BC::mul, BC::Tensor_Core<BC::Scalar<float, BC::CPU> >, BC::Tensor_Core<BC::Matrix<float> > >}’
 template<class,class,class,class> class binary_expression_scalar_L;
                                         ^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:15:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h: In instantiation of ‘class BC::TensorInitializer<BC::Matrix<BC::binary_expression_dotproduct<float, BC::binary_expression_scalar_L<float, BC::mul, BC::Tensor_Core<BC::Scalar<float, BC::CPU> >, BC::Tensor_Core<BC::Matrix<float> > >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::CPU>, void>’:
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:21:7:   required from ‘class BC::TensorBase<BC::Matrix<BC::binary_expression_dotproduct<float, BC::binary_expression_scalar_L<float, BC::mul, BC::Tensor_Core<BC::Scalar<float, BC::CPU> >, BC::Tensor_Core<BC::Matrix<float> > >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::CPU> >’
../UnitTests/../BC_Internals/BC_Core/Matrix.h:17:7:   required from ‘class BC::Matrix<BC::binary_expression_dotproduct<float, BC::binary_expression_scalar_L<float, BC::mul, BC::Tensor_Core<BC::Scalar<float, BC::CPU> >, BC::Tensor_Core<BC::Matrix<float> > >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::CPU>’
../UnitTests/main.cpp:62:20:   required from here
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h:28:15: error: ‘BC::TensorInitializer<derived, expression_tensor>::black_cat_array’ has incomplete type
  functor_type black_cat_array;
               ^~~~~~~~~~~~~~~
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:12:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:29:41: note: declaration of ‘using functor_type = BC::_functor<BC::Matrix<BC::binary_expression_dotproduct<float, BC::binary_expression_scalar_L<float, BC::mul, BC::Tensor_Core<BC::Scalar<float, BC::CPU> >, BC::Tensor_Core<BC::Matrix<float> > >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::CPU> > {aka class BC::binary_expression_dotproduct<float, BC::binary_expression_scalar_L<float, BC::mul, BC::Tensor_Core<BC::Scalar<float, BC::CPU> >, BC::Tensor_Core<BC::Matrix<float> > >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>}’
 template<class,class,class,class> class binary_expression_dotproduct;
                                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:15:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h: In instantiation of ‘class BC::TensorInitializer<BC::Matrix<BC::binary_expression_scalar_R<float, BC::mul, BC::binary_expression_dotproduct<float, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >, BC::CPU>, void>’:
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:21:7:   required from ‘class BC::TensorBase<BC::Matrix<BC::binary_expression_scalar_R<float, BC::mul, BC::binary_expression_dotproduct<float, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >, BC::CPU> >’
../UnitTests/../BC_Internals/BC_Core/Matrix.h:17:7:   required from ‘class BC::Matrix<BC::binary_expression_scalar_R<float, BC::mul, BC::binary_expression_dotproduct<float, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >, BC::CPU>’
../UnitTests/main.cpp:64:20:   required from here
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h:28:15: error: ‘BC::TensorInitializer<derived, expression_tensor>::black_cat_array’ has incomplete type
  functor_type black_cat_array;
               ^~~~~~~~~~~~~~~
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:12:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:28:41: note: declaration of ‘using functor_type = BC::_functor<BC::Matrix<BC::binary_expression_scalar_R<float, BC::mul, BC::binary_expression_dotproduct<float, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >, BC::CPU> > {aka class BC::binary_expression_scalar_R<float, BC::mul, BC::binary_expression_dotproduct<float, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >}’
 template<class,class,class,class> class binary_expression_scalar_R;
                                         ^~~~~~~~~~~~~~~~~~~~~~~~~~
../UnitTests/main.cpp:76:8: error: ‘using mat = class BC::Matrix<float> {aka class BC::Matrix<float>}’ has no member named ‘t’
  c = a.t() * b.t();
        ^
../UnitTests/main.cpp:76:16: error: ‘using mat = class BC::Matrix<float> {aka class BC::Matrix<float>}’ has no member named ‘t’
  c = a.t() * b.t();
                ^
../UnitTests/main.cpp:80:8: error: ‘using mat = class BC::Matrix<float> {aka class BC::Matrix<float>}’ has no member named ‘t’
  c = a.t() * A * (b.t() * A);
        ^
../UnitTests/main.cpp:80:21: error: ‘using mat = class BC::Matrix<float> {aka class BC::Matrix<float>}’ has no member named ‘t’
  c = a.t() * A * (b.t() * A);
                     ^
../UnitTests/main.cpp:94:14: error: invalid operands of types ‘void’ and ‘void’ to binary ‘operator+’
  d[1] = d[1] + d[1];
         ~~~~~^~~~~~
../UnitTests/main.cpp:99:8: error: invalid types ‘void[int]’ for array subscript
  d[1][1] = d[1][1] + d[1][1];
        ^
../UnitTests/main.cpp:99:18: error: invalid types ‘void[int]’ for array subscript
  d[1][1] = d[1][1] + d[1][1];
                  ^
../UnitTests/main.cpp:99:28: error: invalid types ‘void[int]’ for array subscript
  d[1][1] = d[1][1] + d[1][1];
                            ^
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:13:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Utility.h: In instantiation of ‘void BC::Tensor_Utility<deriv, typename std::enable_if<(isPrim<typename BC::determine_functor< <template-parameter-1-1> >::fscal> || BC::MTF::isCore<typename BC::determine_functor< <template-parameter-1-1> >::type>::conditional), void>::type>::read(std::ifstream&, bool, bool) [with deriv = BC::Matrix<double>; typename std::enable_if<(isPrim<typename BC::determine_functor< <template-parameter-1-1> >::fscal> || BC::MTF::isCore<typename BC::determine_functor< <template-parameter-1-1> >::type>::conditional), void>::type = void; std::ifstream = std::basic_ifstream<char>]’:
../UnitTests/main.cpp:113:15:   required from here
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Utility.h:132:22: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
    for (int i = 0; i < dims.size(); ++i) {
                    ~~^~~~~~~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Utility.h:138:92: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
    MATHLIB::HostToDevice(asDerived().data().core(), &data[data[0] + 1], asDerived().size() > data.size() ? data.size() : asDerived().size());
                                                                                             
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:13:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Utility.h:140:86: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
    MATHLIB::HostToDevice(asDerived().data().core(), &data[0],     asDerived().size() > data.size() ? data.size() : asDerived().size());
                                                                                       
In file included from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:32:0,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_MathLibraries/Mathematics_CPU.h: In instantiation of ‘static void BC::CPU::copy(T&, const J&, int) [with T = BC::Tensor_Core<BC::Matrix<float> >; J = BC::binary_expression_dotproduct<float, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>]’:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:218:21:   required from ‘derived& BC::Tensor_Operations< <template-parameter-1-1> >::operator=(const BC::Tensor_Operations<param_deriv>&) [with pDeriv = BC::Matrix<BC::binary_expression_dotproduct<float, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::CPU>; derived = BC::Matrix<float>]’
../UnitTests/../BC_Internals/BC_Core/Matrix.h:45:83:   required from ‘BC::Matrix< <template-parameter-1-1>, ML>& BC::Matrix< <template-parameter-1-1>, ML>::operator=(const BC::Matrix<U, Mathlib>&) [with U = BC::binary_expression_dotproduct<float, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>; T = float; Mathlib = BC::CPU]’
../UnitTests/main.cpp:47:10:   required from here
../UnitTests/../BC_Internals/BC_MathLibraries/Mathematics_CPU.h:70:13: error: no match for ‘operator[]’ (operand types are ‘const BC::binary_expression_dotproduct<float, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>’ and ‘int’)
     t[i] = j[i];
            ~^
../UnitTests/../BC_Internals/BC_MathLibraries/Mathematics_CPU.h:76:12: error: no match for ‘operator[]’ (operand types are ‘const BC::binary_expression_dotproduct<float, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>’ and ‘int’)
    t[i] = j[i];
           ~^
../UnitTests/../BC_Internals/BC_MathLibraries/Mathematics_CPU.h: In instantiation of ‘static void BC::CPU::copy(T&, const J&, int) [with T = BC::Tensor_Core<BC::Matrix<float> >; J = BC::binary_expression_dotproduct<float, BC::binary_expression_scalar_R<float, BC::mul, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>]’:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:218:21:   required from ‘derived& BC::Tensor_Operations< <template-parameter-1-1> >::operator=(const BC::Tensor_Operations<param_deriv>&) [with pDeriv = BC::Matrix<BC::binary_expression_dotproduct<float, BC::binary_expression_scalar_R<float, BC::mul, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::CPU>; derived = BC::Matrix<float>]’
../UnitTests/../BC_Internals/BC_Core/Matrix.h:45:83:   required from ‘BC::Matrix< <template-parameter-1-1>, ML>& BC::Matrix< <template-parameter-1-1>, ML>::operator=(const BC::Matrix<U, Mathlib>&) [with U = BC::binary_expression_dotproduct<float, BC::binary_expression_scalar_R<float, BC::mul, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>; T = float; Mathlib = BC::CPU]’
../UnitTests/main.cpp:59:20:   required from here
../UnitTests/../BC_Internals/BC_MathLibraries/Mathematics_CPU.h:70:13: error: no match for ‘operator[]’ (operand types are ‘const BC::binary_expression_dotproduct<float, BC::binary_expression_scalar_R<float, BC::mul, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>’ and ‘int’)
     t[i] = j[i];
            ~^
../UnitTests/../BC_Internals/BC_MathLibraries/Mathematics_CPU.h:76:12: error: no match for ‘operator[]’ (operand types are ‘const BC::binary_expression_dotproduct<float, BC::binary_expression_scalar_R<float, BC::mul, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>’ and ‘int’)
    t[i] = j[i];
           ~^
../UnitTests/../BC_Internals/BC_MathLibraries/Mathematics_CPU.h: In instantiation of ‘static void BC::CPU::copy(T&, const J&, int) [with T = BC::Tensor_Core<BC::Matrix<float> >; J = BC::binary_expression_dotproduct<float, BC::binary_expression_scalar_L<float, BC::mul, BC::Tensor_Core<BC::Scalar<float, BC::CPU> >, BC::Tensor_Core<BC::Matrix<float> > >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>]’:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:218:21:   required from ‘derived& BC::Tensor_Operations< <template-parameter-1-1> >::operator=(const BC::Tensor_Operations<param_deriv>&) [with pDeriv = BC::Matrix<BC::binary_expression_dotproduct<float, BC::binary_expression_scalar_L<float, BC::mul, BC::Tensor_Core<BC::Scalar<float, BC::CPU> >, BC::Tensor_Core<BC::Matrix<float> > >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::CPU>; derived = BC::Matrix<float>]’
../UnitTests/../BC_Internals/BC_Core/Matrix.h:45:83:   required from ‘BC::Matrix< <template-parameter-1-1>, ML>& BC::Matrix< <template-parameter-1-1>, ML>::operator=(const BC::Matrix<U, Mathlib>&) [with U = BC::binary_expression_dotproduct<float, BC::binary_expression_scalar_L<float, BC::mul, BC::Tensor_Core<BC::Scalar<float, BC::CPU> >, BC::Tensor_Core<BC::Matrix<float> > >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>; T = float; Mathlib = BC::CPU]’
../UnitTests/main.cpp:62:20:   required from here
../UnitTests/../BC_Internals/BC_MathLibraries/Mathematics_CPU.h:70:13: error: no match for ‘operator[]’ (operand types are ‘const BC::binary_expression_dotproduct<float, BC::binary_expression_scalar_L<float, BC::mul, BC::Tensor_Core<BC::Scalar<float, BC::CPU> >, BC::Tensor_Core<BC::Matrix<float> > >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>’ and ‘int’)
     t[i] = j[i];
            ~^
../UnitTests/../BC_Internals/BC_MathLibraries/Mathematics_CPU.h:76:12: error: no match for ‘operator[]’ (operand types are ‘const BC::binary_expression_dotproduct<float, BC::binary_expression_scalar_L<float, BC::mul, BC::Tensor_Core<BC::Scalar<float, BC::CPU> >, BC::Tensor_Core<BC::Matrix<float> > >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>’ and ‘int’)
    t[i] = j[i];
           ~^
../UnitTests/../BC_Internals/BC_MathLibraries/Mathematics_CPU.h: In instantiation of ‘static void BC::CPU::copy(T&, const J&, int) [with T = BC::Tensor_Core<BC::Matrix<float> >; J = BC::binary_expression_scalar_R<float, BC::mul, BC::binary_expression_dotproduct<float, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >]’:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:218:21:   required from ‘derived& BC::Tensor_Operations< <template-parameter-1-1> >::operator=(const BC::Tensor_Operations<param_deriv>&) [with pDeriv = BC::Matrix<BC::binary_expression_scalar_R<float, BC::mul, BC::binary_expression_dotproduct<float, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >, BC::CPU>; derived = BC::Matrix<float>]’
../UnitTests/../BC_Internals/BC_Core/Matrix.h:45:83:   required from ‘BC::Matrix< <template-parameter-1-1>, ML>& BC::Matrix< <template-parameter-1-1>, ML>::operator=(const BC::Matrix<U, Mathlib>&) [with U = BC::binary_expression_scalar_R<float, BC::mul, BC::binary_expression_dotproduct<float, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >; T = float; Mathlib = BC::CPU]’
../UnitTests/main.cpp:64:20:   required from here
../UnitTests/../BC_Internals/BC_MathLibraries/Mathematics_CPU.h:70:13: error: no match for ‘operator[]’ (operand types are ‘const BC::binary_expression_scalar_R<float, BC::mul, BC::binary_expression_dotproduct<float, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >’ and ‘int’)
     t[i] = j[i];
            ~^
../UnitTests/../BC_Internals/BC_MathLibraries/Mathematics_CPU.h:76:12: error: no match for ‘operator[]’ (operand types are ‘const BC::binary_expression_scalar_R<float, BC::mul, BC::binary_expression_dotproduct<float, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >’ and ‘int’)
    t[i] = j[i];
           ~^
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:15:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h: In instantiation of ‘BC::TensorInitializer<_tensor<t, ml>, typename std::enable_if<BC::MTF::isCorePure<t>::conditional, void>::type>::TensorInitializer(BC::TensorInitializer<_tensor<t, ml>, typename std::enable_if<BC::MTF::isCorePure<t>::conditional, void>::type>::derived_alt<U>&) [with U = BC::binary_expression<float, BC::add, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> > >; _tensor = BC::Matrix; t = float; ml = BC::CPU; typename std::enable_if<BC::MTF::isCorePure<t>::conditional, void>::type = void; BC::TensorInitializer<_tensor<t, ml>, typename std::enable_if<BC::MTF::isCorePure<t>::conditional, void>::type>::derived_alt<U> = BC::Matrix<BC::binary_expression<float, BC::add, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> > >, BC::CPU>]’:
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:50:51:   required from ‘BC::TensorBase<derived>::TensorBase(const params& ...) [with params = {BC::Matrix<BC::binary_expression<float, BC::add, BC::Tensor_Core<BC::Matrix<float, BC::CPU> >, BC::Tensor_Core<BC::Matrix<float, BC::CPU> > >, BC::CPU>}; derived = BC::Matrix<float>]’
../UnitTests/../BC_Internals/BC_Core/Matrix.h:37:77:   required from ‘BC::Matrix< <template-parameter-1-1>, ML>::Matrix(const BC::Matrix<U, Mathlib>&) [with U = BC::binary_expression<float, BC::add, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> > >; T = float; Mathlib = BC::CPU]’
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Utility.h:34:50:   required from ‘auto BC::Tensor_Utility<deriv, <template-parameter-1-2> >::eval() const [with deriv = BC::Matrix<BC::binary_expression<float, BC::add, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> > >, BC::CPU>; <template-parameter-1-2> = void]’
../UnitTests/main.cpp:75:15:   required from here
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h:77:88: error: invalid use of void expression
  TensorInitializer(const derived_alt<U>&  tensor) : black_cat_array(tensor.innerShape()) {
                                                                                        ^
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h:78:32: error: use of ‘auto& BC::TensorInitializer<_tensor<t, ml>, typename std::enable_if<BC::MTF::isCorePure<t>::conditional, void>::type>::asBase() [with _tensor = BC::Matrix; t = float; ml = BC::CPU; typename std::enable_if<BC::MTF::isCorePure<t>::conditional, void>::type = void]’ before deduction of ‘auto’
   Mathlib::copy(this->asBase().data(), tensor.data(), this->asBase().size());
                                 
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h:78:16: error: use of ‘const auto& BC::Tensor_Operations< <template-parameter-1-1> >::data() const [with derived = BC::Matrix<BC::binary_expression<float, BC::add, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> > >, BC::CPU>]’ before deduction of ‘auto’
   Mathlib::copy(this->asBase().data(), tensor.data(), this->asBase().size());
   ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h:78:70: error: use of ‘auto& BC::TensorInitializer<_tensor<t, ml>, typename std::enable_if<BC::MTF::isCorePure<t>::conditional, void>::type>::asBase() [with _tensor = BC::Matrix; t = float; ml = BC::CPU; typename std::enable_if<BC::MTF::isCorePure<t>::conditional, void>::type = void]’ before deduction of ‘auto’
   Mathlib::copy(this->asBase().data(), tensor.data(), this->asBase().size());
                                                                       
In file included from ../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Core_Slice.h:17:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Core.h:13,
                 from ../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h:12,
                 from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:15,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Core_Scalar.h: In instantiation of ‘BC::Tensor_Scalar<PARENT>::Tensor_Scalar(BC::Tensor_Scalar<PARENT>::scalar*, const PARENT&) [with PARENT = BC::Tensor_Core<BC::Matrix<float> >; BC::Tensor_Scalar<PARENT>::scalar = float]’:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h:33:63:   required from ‘BC::TensorInitializer<derived, expression_tensor>::TensorInitializer(const params& ...) [with params = {float*, BC::Tensor_Core<BC::Matrix<float, BC::CPU> >}; derived = BC::Scalar<BC::Tensor_Scalar<BC::Tensor_Core<BC::Matrix<float> > >, BC::CPU>; expression_tensor = void]’
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:50:51:   required from ‘BC::TensorBase<derived>::TensorBase(const params& ...) [with params = {float*, BC::Tensor_Core<BC::Matrix<float, BC::CPU> >}; derived = BC::Scalar<BC::Tensor_Scalar<BC::Tensor_Core<BC::Matrix<float> > >, BC::CPU>]’
../UnitTests/../BC_Internals/BC_Core/Scalar.h:61:97:   required from ‘BC::Scalar< <template-parameter-1-1>, ML>::Scalar(const var1&, const var2&, const params& ...) [with var1 = float*; var2 = BC::Tensor_Core<BC::Matrix<float> >; params = {}; T = BC::Tensor_Scalar<BC::Tensor_Core<BC::Matrix<float> > >; Mathlib = BC::CPU]’
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:92:19:   required from ‘auto BC::TensorBase<derived>::getScalar(int) [with derived = BC::Matrix<float>]’
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:96:52:   required from ‘auto BC::TensorBase<derived>::operator()(int) [with derived = BC::Matrix<float>]’
../UnitTests/main.cpp:33:6:   required from here
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Core_Scalar.h:36:10: warning: ‘BC::Tensor_Scalar<BC::Tensor_Core<BC::Matrix<float> > >::array_slice’ will be initialized after [-Wreorder]
  scalar* array_slice;
          ^~~~~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Core_Scalar.h:35:16: warning:   ‘const BC::Tensor_Core<BC::Matrix<float> >& BC::Tensor_Scalar<BC::Tensor_Core<BC::Matrix<float> > >::parent’ [-Wreorder]
  const PARENT& parent;
                ^~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Core_Scalar.h:41:2: warning:   when initialized here [-Wreorder]
  Tensor_Scalar(scalar* array, const PARENT& parent_) : array_slice(array), parent(parent_) {}
  ^~~~~~~~~~~~~
In file included from ../UnitTests/../BC_Internals/BC_MathLibraries/Mathematics_CPU.h:15:0,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:32,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_MathLibraries/BC_PrintFunctions.h: In instantiation of ‘void BC::printHelper(const T&, int_ranks, int, std::__cxx11::string, int) [with T = const float*; int_ranks = int*; std::__cxx11::string = std::__cxx11::basic_string<char>]’:
../UnitTests/../BC_Internals/BC_MathLibraries/BC_PrintFunctions.h:102:13:   required from ‘void BC::print(const T&, RANKS, int, int) [with T = const float*; RANKS = int*]’
../UnitTests/../BC_Internals/BC_MathLibraries/Mathematics_CPU.h:98:12:   required from ‘static void BC::CPU::print(T, RANKS, int, int) [with T = const float*; RANKS = int*]’
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Utility.h:75:17:   required from ‘void BC::Tensor_Utility<deriv, typename std::enable_if<(isPrim<typename BC::determine_functor< <template-parameter-1-1> >::fscal> || BC::MTF::isCore<typename BC::determine_functor< <template-parameter-1-1> >::type>::conditional), void>::type>::print() const [with deriv = BC::Matrix<float>; typename std::enable_if<(isPrim<typename BC::determine_functor< <template-parameter-1-1> >::fscal> || BC::MTF::isCore<typename BC::determine_functor< <template-parameter-1-1> >::type>::conditional), void>::type = void]’
../UnitTests/main.cpp:37:10:   required from here
../UnitTests/../BC_Internals/BC_MathLibraries/BC_PrintFunctions.h:43:38: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
     str = str.substr(0, str.length() < printSpace ? str.length() : printSpace);
                                       
../UnitTests/../BC_Internals/BC_MathLibraries/BC_PrintFunctions.h:46:22: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
     if (str.length() < printSpace)
                       
../UnitTests/../BC_Internals/BC_MathLibraries/BC_PrintFunctions.h:67:37: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
    str = str.substr(0, str.length() < printSpace ? str.length() : printSpace);
                                      
../UnitTests/../BC_Internals/BC_MathLibraries/BC_PrintFunctions.h:70:21: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
    if (str.length() < printSpace)
                      
../UnitTests/../BC_Internals/BC_MathLibraries/BC_PrintFunctions.h: In instantiation of ‘void BC::printHelper(const T&, int_ranks, int, std::__cxx11::string, int) [with T = const double*; int_ranks = int*; std::__cxx11::string = std::__cxx11::basic_string<char>]’:
../UnitTests/../BC_Internals/BC_MathLibraries/BC_PrintFunctions.h:102:13:   required from ‘void BC::print(const T&, RANKS, int, int) [with T = const double*; RANKS = int*]’
../UnitTests/../BC_Internals/BC_MathLibraries/Mathematics_CPU.h:98:12:   required from ‘static void BC::CPU::print(T, RANKS, int, int) [with T = const double*; RANKS = int*]’
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Utility.h:75:17:   required from ‘void BC::Tensor_Utility<deriv, typename std::enable_if<(isPrim<typename BC::determine_functor< <template-parameter-1-1> >::fscal> || BC::MTF::isCore<typename BC::determine_functor< <template-parameter-1-1> >::type>::conditional), void>::type>::print() const [with deriv = BC::Matrix<double>; typename std::enable_if<(isPrim<typename BC::determine_functor< <template-parameter-1-1> >::fscal> || BC::MTF::isCore<typename BC::determine_functor< <template-parameter-1-1> >::type>::conditional), void>::type = void]’
../UnitTests/main.cpp:114:14:   required from here
../UnitTests/../BC_Internals/BC_MathLibraries/BC_PrintFunctions.h:43:38: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
     str = str.substr(0, str.length() < printSpace ? str.length() : printSpace);
                                       
../UnitTests/../BC_Internals/BC_MathLibraries/BC_PrintFunctions.h:46:22: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
     if (str.length() < printSpace)
                       
../UnitTests/../BC_Internals/BC_MathLibraries/BC_PrintFunctions.h:67:37: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
    str = str.substr(0, str.length() < printSpace ? str.length() : printSpace);
                                      
../UnitTests/../BC_Internals/BC_MathLibraries/BC_PrintFunctions.h:70:21: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
    if (str.length() < printSpace)
                      
UnitTests/subdir.mk:18: recipe for target 'UnitTests/main.o' failed
make: *** [UnitTests/main.o] Error 1
17:17:22 **** Incremental Build of configuration Debug for project BlackCat_LibraryCPU ****
make all 
Building file: ../UnitTests/main.cpp
Invoking: GCC C++ Compiler
g++ -O0 -g3 -Wall -c -fmessage-length=0 -MMD -MP -MF"UnitTests/main.d" -MT"UnitTests/main.o" -o "UnitTests/main.o" "../UnitTests/main.cpp"
In file included from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:32:0,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_MathLibraries/Mathematics_CPU.h:74:0: warning: ignoring #pragma omp parallel [-Wunknown-pragmas]
 #pragma omp parallel for
 
../UnitTests/../BC_Internals/BC_MathLibraries/Mathematics_CPU.h:78:0: warning: ignoring #pragma omp barrier [-Wunknown-pragmas]
 #pragma omp barrier
 
../UnitTests/../BC_Internals/BC_MathLibraries/Mathematics_CPU.h:88:0: warning: ignoring #pragma omp parallel [-Wunknown-pragmas]
 #pragma omp parallel for
 
../UnitTests/../BC_Internals/BC_MathLibraries/Mathematics_CPU.h:92:0: warning: ignoring #pragma omp barrier [-Wunknown-pragmas]
 #pragma omp barrier
 
In file included from ../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Core_Slice.h:17:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Core.h:13,
                 from ../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h:12,
                 from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:15,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Core_Scalar.h:22:0: warning: "__BCinline__" redefined
 #define __BCinline__
 
In file included from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:29:0,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Expressions/BlackCat_Internal_Definitions.h:25:0: note: this is the location of the previous definition
 #define __BCinline__ __BC_gcpu__ __attribute__((always_inline))
 
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:15:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h:77:20: error: ISO C++ forbids declaration of ‘parameter’ with no type [-fpermissive]
  TensorInitializer(const template derived_alt<U>&  tensor) : black_cat_array(tensor.innerShape()) {
                    ^~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h:77:26: error: expected ‘,’ or ‘...’ before ‘template’
  TensorInitializer(const template derived_alt<U>&  tensor) : black_cat_array(tensor.innerShape()) {
                          ^~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h: In constructor ‘BC::TensorInitializer<_tensor<t, ml>, typename std::enable_if<BC::MTF::isCorePure<t>::conditional, void>::type>::TensorInitializer(int)’:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h:77:78: error: ‘tensor’ was not declared in this scope
  TensorInitializer(const template derived_alt<U>&  tensor) : black_cat_array(tensor.innerShape()) {
                                                                              ^~~~~~
In file included from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10:0,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/TensorBase.h: At global scope:
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:38:71: error: expected ‘;’ before ‘<’ token
  template<class    U> using deriv   = typename shell_of<derived>::type<U, Mathlib>;
                                                                       ^
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:39:76: error: expected ‘;’ before ‘<’ token
  template<class... U> using functor = typename shell_of<functor_type>::type<U...>;
                                                                            ^
../UnitTests/../BC_Internals/BC_Core/TensorBase.h: In member function ‘auto BC::TensorBase<derived>::operator[](int)’:
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:83:68: error: expected ‘(’ before ‘<’ token
     auto operator [] (int i)    { return typename base<RANK>::slice<decltype(slice(0)), Mathlib>(slice(i)); }
                                                                    ^
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:83:69: error: expected primary-expression before ‘decltype’
     auto operator [] (int i)    { return typename base<RANK>::slice<decltype(slice(0)), Mathlib>(slice(i)); }
                                                                     ^~~~~~~~
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:83:69: error: expected ‘;’ before ‘decltype’
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:83:87: error: expected unqualified-id before ‘,’ token
     auto operator [] (int i)    { return typename base<RANK>::slice<decltype(slice(0)), Mathlib>(slice(i)); }
                                                                                       ^
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:83:96: error: expected initializer before ‘>’ token
     auto operator [] (int i)    { return typename base<RANK>::slice<decltype(slice(0)), Mathlib>(slice(i)); }
                                                                                                ^
../UnitTests/../BC_Internals/BC_Core/TensorBase.h: In member function ‘const auto BC::TensorBase<derived>::operator[](int) const’:
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:84:74: error: expected ‘(’ before ‘<’ token
  const auto operator [] (int i) const { return typename base<RANK>::slice<decltype(slice(0)), Mathlib>(slice(i)); }
                                                                          ^
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:84:75: error: expected primary-expression before ‘decltype’
  const auto operator [] (int i) const { return typename base<RANK>::slice<decltype(slice(0)), Mathlib>(slice(i)); }
                                                                           ^~~~~~~~
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:84:75: error: expected ‘;’ before ‘decltype’
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:84:93: error: expected unqualified-id before ‘,’ token
  const auto operator [] (int i) const { return typename base<RANK>::slice<decltype(slice(0)), Mathlib>(slice(i)); }
                                                                                             ^
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:84:102: error: expected initializer before ‘>’ token
  const auto operator [] (int i) const { return typename base<RANK>::slice<decltype(slice(0)), Mathlib>(slice(i)); }
                                                                                                      ^
In file included from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:50:0,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Vector.h: At global scope:
../UnitTests/../BC_Internals/BC_Core/Vector.h:45:15: error: ‘unary_expression_transpose’ was not declared in this scope
  const Vector<unary_expression_transpose<typename MTF::determine_scalar<T>::type, typename parent_class::functor_type>, Mathlib> t() const {
               ^~~~~~~~~~~~~~~~~~~~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Vector.h:45:118: error: template argument 1 is invalid
  const Vector<unary_expression_transpose<typename MTF::determine_scalar<T>::type, typename parent_class::functor_type>, Mathlib> t() const {
                                                                                                                      ^
../UnitTests/../BC_Internals/BC_Core/Vector.h:45:119: error: expected unqualified-id before ‘,’ token
  const Vector<unary_expression_transpose<typename MTF::determine_scalar<T>::type, typename parent_class::functor_type>, Mathlib> t() const {
                                                                                                                       ^
In file included from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:51:0,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Matrix.h:47:15: error: ‘unary_expression_transpose’ was not declared in this scope
  const Matrix<unary_expression_transpose<typename MTF::determine_scalar<T>::type, typename parent_class::functor_type>, Mathlib> t() const {
               ^~~~~~~~~~~~~~~~~~~~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Matrix.h:47:118: error: template argument 1 is invalid
  const Matrix<unary_expression_transpose<typename MTF::determine_scalar<T>::type, typename parent_class::functor_type>, Mathlib> t() const {
                                                                                                                      ^
../UnitTests/../BC_Internals/BC_Core/Matrix.h:47:119: error: expected unqualified-id before ‘,’ token
  const Matrix<unary_expression_transpose<typename MTF::determine_scalar<T>::type, typename parent_class::functor_type>, Mathlib> t() const {
                                                                                                                       ^
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:15:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h: In instantiation of ‘class BC::TensorInitializer<BC::Vector<BC::binary_expression<float, BC::mul, BC::Tensor_Core<BC::Vector<float> >, BC::Tensor_Core<BC::Vector<float> > >, BC::CPU>, void>’:
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:21:7:   required from ‘class BC::TensorBase<BC::Vector<BC::binary_expression<float, BC::mul, BC::Tensor_Core<BC::Vector<float> >, BC::Tensor_Core<BC::Vector<float> > >, BC::CPU> >’
../UnitTests/../BC_Internals/BC_Core/Vector.h:17:7:   required from ‘class BC::Vector<BC::binary_expression<float, BC::mul, BC::Tensor_Core<BC::Vector<float> >, BC::Tensor_Core<BC::Vector<float> > >, BC::CPU>’
../UnitTests/SpeedTests.h:43:19:   required from here
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h:28:15: error: ‘BC::TensorInitializer<derived, expression_tensor>::black_cat_array’ has incomplete type
  functor_type black_cat_array;
               ^~~~~~~~~~~~~~~
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:12:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:26:41: note: declaration of ‘using functor_type = BC::_functor<BC::Vector<BC::binary_expression<float, BC::mul, BC::Tensor_Core<BC::Vector<float> >, BC::Tensor_Core<BC::Vector<float> > >, BC::CPU> > {aka class BC::binary_expression<float, BC::mul, BC::Tensor_Core<BC::Vector<float> >, BC::Tensor_Core<BC::Vector<float> > >}’
 template<class,class,class,class> class binary_expression;
                                         ^~~~~~~~~~~~~~~~~
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:15:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h: In instantiation of ‘class BC::TensorInitializer<BC::Vector<BC::binary_expression<float, BC::assign, BC::Tensor_Core<BC::Vector<float> >, BC::binary_expression<float, BC::mul, BC::Tensor_Core<BC::Vector<float> >, BC::Tensor_Core<BC::Vector<float> > > >, BC::CPU>, void>’:
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:21:7:   required from ‘class BC::TensorBase<BC::Vector<BC::binary_expression<float, BC::assign, BC::Tensor_Core<BC::Vector<float> >, BC::binary_expression<float, BC::mul, BC::Tensor_Core<BC::Vector<float> >, BC::Tensor_Core<BC::Vector<float> > > >, BC::CPU> >’
../UnitTests/../BC_Internals/BC_Core/Vector.h:17:7:   required from ‘class BC::Vector<BC::binary_expression<float, BC::assign, BC::Tensor_Core<BC::Vector<float> >, BC::binary_expression<float, BC::mul, BC::Tensor_Core<BC::Vector<float> >, BC::Tensor_Core<BC::Vector<float> > > >, BC::CPU>’
../UnitTests/SpeedTests.h:43:24:   required from here
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h:28:15: error: ‘BC::TensorInitializer<derived, expression_tensor>::black_cat_array’ has incomplete type
  functor_type black_cat_array;
               ^~~~~~~~~~~~~~~
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:12:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:26:41: note: declaration of ‘using functor_type = BC::_functor<BC::Vector<BC::binary_expression<float, BC::assign, BC::Tensor_Core<BC::Vector<float> >, BC::binary_expression<float, BC::mul, BC::Tensor_Core<BC::Vector<float> >, BC::Tensor_Core<BC::Vector<float> > > >, BC::CPU> > {aka class BC::binary_expression<float, BC::assign, BC::Tensor_Core<BC::Vector<float> >, BC::binary_expression<float, BC::mul, BC::Tensor_Core<BC::Vector<float> >, BC::Tensor_Core<BC::Vector<float> > > >}’
 template<class,class,class,class> class binary_expression;
                                         ^~~~~~~~~~~~~~~~~
In file included from ../UnitTests/main.cpp:4:0:
../UnitTests/SpeedTests.h: In function ‘int speedTestsScalarIteration()’:
../UnitTests/SpeedTests.h:136:9: error: ‘using mat = class BC::Matrix<float> {aka class BC::Matrix<float>}’ has no member named ‘t’
   c = a.t() * b;
         ^
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:15:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h: In instantiation of ‘class BC::TensorInitializer<BC::Matrix<BC::binary_expression<float, BC::add, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> > >, BC::CPU>, void>’:
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:21:7:   required from ‘class BC::TensorBase<BC::Matrix<BC::binary_expression<float, BC::add, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> > >, BC::CPU> >’
../UnitTests/../BC_Internals/BC_Core/Matrix.h:17:7:   required from ‘class BC::Matrix<BC::binary_expression<float, BC::add, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> > >, BC::CPU>’
../UnitTests/SpeedTests.h:146:23:   required from here
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h:28:15: error: ‘BC::TensorInitializer<derived, expression_tensor>::black_cat_array’ has incomplete type
  functor_type black_cat_array;
               ^~~~~~~~~~~~~~~
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:12:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:26:41: note: declaration of ‘using functor_type = BC::_functor<BC::Matrix<BC::binary_expression<float, BC::add, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> > >, BC::CPU> > {aka class BC::binary_expression<float, BC::add, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> > >}’
 template<class,class,class,class> class binary_expression;
                                         ^~~~~~~~~~~~~~~~~
../UnitTests/main.cpp: In function ‘auto test()’:
../UnitTests/main.cpp:40:8: error: ‘using mat = class BC::Matrix<float> {aka class BC::Matrix<float>}’ has no member named ‘t’
  d = a.t();
        ^
../UnitTests/main.cpp:41:8: error: ‘using mat = class BC::Matrix<float> {aka class BC::Matrix<float>}’ has no member named ‘t’
  e = b.t();
        ^
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:15:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h: In instantiation of ‘class BC::TensorInitializer<BC::Matrix<BC::binary_expression_dotproduct<float, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::CPU>, void>’:
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:21:7:   required from ‘class BC::TensorBase<BC::Matrix<BC::binary_expression_dotproduct<float, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::CPU> >’
../UnitTests/../BC_Internals/BC_Core/Matrix.h:17:7:   required from ‘class BC::Matrix<BC::binary_expression_dotproduct<float, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::CPU>’
../UnitTests/main.cpp:47:10:   required from here
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h:28:15: error: ‘BC::TensorInitializer<derived, expression_tensor>::black_cat_array’ has incomplete type
  functor_type black_cat_array;
               ^~~~~~~~~~~~~~~
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:12:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:29:41: note: declaration of ‘using functor_type = BC::_functor<BC::Matrix<BC::binary_expression_dotproduct<float, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::CPU> > {aka class BC::binary_expression_dotproduct<float, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>}’
 template<class,class,class,class> class binary_expression_dotproduct;
                                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
../UnitTests/main.cpp:50:8: error: ‘using mat = class BC::Matrix<float> {aka class BC::Matrix<float>}’ has no member named ‘t’
  c = a.t() * b.t();
        ^
../UnitTests/main.cpp:50:16: error: ‘using mat = class BC::Matrix<float> {aka class BC::Matrix<float>}’ has no member named ‘t’
  c = a.t() * b.t();
                ^
../UnitTests/main.cpp:53:8: error: ‘using mat = class BC::Matrix<float> {aka class BC::Matrix<float>}’ has no member named ‘t’
  c = a.t() * e;
        ^
../UnitTests/main.cpp:56:12: error: ‘using mat = class BC::Matrix<float> {aka class BC::Matrix<float>}’ has no member named ‘t’
  c = d * b.t();
            ^
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:15:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h: In instantiation of ‘class BC::TensorInitializer<BC::Matrix<BC::binary_expression_scalar_R<float, BC::mul, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >, BC::CPU>, void>’:
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:21:7:   required from ‘class BC::TensorBase<BC::Matrix<BC::binary_expression_scalar_R<float, BC::mul, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >, BC::CPU> >’
../UnitTests/../BC_Internals/BC_Core/Matrix.h:17:7:   required from ‘class BC::Matrix<BC::binary_expression_scalar_R<float, BC::mul, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >, BC::CPU>’
../UnitTests/main.cpp:59:16:   required from here
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h:28:15: error: ‘BC::TensorInitializer<derived, expression_tensor>::black_cat_array’ has incomplete type
  functor_type black_cat_array;
               ^~~~~~~~~~~~~~~
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:12:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:28:41: note: declaration of ‘using functor_type = BC::_functor<BC::Matrix<BC::binary_expression_scalar_R<float, BC::mul, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >, BC::CPU> > {aka class BC::binary_expression_scalar_R<float, BC::mul, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >}’
 template<class,class,class,class> class binary_expression_scalar_R;
                                         ^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:15:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h: In instantiation of ‘class BC::TensorInitializer<BC::Matrix<BC::binary_expression_dotproduct<float, BC::binary_expression_scalar_R<float, BC::mul, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::CPU>, void>’:
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:21:7:   required from ‘class BC::TensorBase<BC::Matrix<BC::binary_expression_dotproduct<float, BC::binary_expression_scalar_R<float, BC::mul, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::CPU> >’
../UnitTests/../BC_Internals/BC_Core/Matrix.h:17:7:   required from ‘class BC::Matrix<BC::binary_expression_dotproduct<float, BC::binary_expression_scalar_R<float, BC::mul, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::CPU>’
../UnitTests/main.cpp:59:20:   required from here
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h:28:15: error: ‘BC::TensorInitializer<derived, expression_tensor>::black_cat_array’ has incomplete type
  functor_type black_cat_array;
               ^~~~~~~~~~~~~~~
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:12:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:29:41: note: declaration of ‘using functor_type = BC::_functor<BC::Matrix<BC::binary_expression_dotproduct<float, BC::binary_expression_scalar_R<float, BC::mul, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::CPU> > {aka class BC::binary_expression_dotproduct<float, BC::binary_expression_scalar_R<float, BC::mul, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>}’
 template<class,class,class,class> class binary_expression_dotproduct;
                                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:15:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h: In instantiation of ‘class BC::TensorInitializer<BC::Matrix<BC::binary_expression_scalar_L<float, BC::mul, BC::Tensor_Core<BC::Scalar<float, BC::CPU> >, BC::Tensor_Core<BC::Matrix<float> > >, BC::CPU>, void>’:
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:21:7:   required from ‘class BC::TensorBase<BC::Matrix<BC::binary_expression_scalar_L<float, BC::mul, BC::Tensor_Core<BC::Scalar<float, BC::CPU> >, BC::Tensor_Core<BC::Matrix<float> > >, BC::CPU> >’
../UnitTests/../BC_Internals/BC_Core/Matrix.h:17:7:   required from ‘class BC::Matrix<BC::binary_expression_scalar_L<float, BC::mul, BC::Tensor_Core<BC::Scalar<float, BC::CPU> >, BC::Tensor_Core<BC::Matrix<float> > >, BC::CPU>’
../UnitTests/main.cpp:62:16:   required from here
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h:28:15: error: ‘BC::TensorInitializer<derived, expression_tensor>::black_cat_array’ has incomplete type
  functor_type black_cat_array;
               ^~~~~~~~~~~~~~~
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:12:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:27:41: note: declaration of ‘using functor_type = BC::_functor<BC::Matrix<BC::binary_expression_scalar_L<float, BC::mul, BC::Tensor_Core<BC::Scalar<float, BC::CPU> >, BC::Tensor_Core<BC::Matrix<float> > >, BC::CPU> > {aka class BC::binary_expression_scalar_L<float, BC::mul, BC::Tensor_Core<BC::Scalar<float, BC::CPU> >, BC::Tensor_Core<BC::Matrix<float> > >}’
 template<class,class,class,class> class binary_expression_scalar_L;
                                         ^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:15:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h: In instantiation of ‘class BC::TensorInitializer<BC::Matrix<BC::binary_expression_dotproduct<float, BC::binary_expression_scalar_L<float, BC::mul, BC::Tensor_Core<BC::Scalar<float, BC::CPU> >, BC::Tensor_Core<BC::Matrix<float> > >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::CPU>, void>’:
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:21:7:   required from ‘class BC::TensorBase<BC::Matrix<BC::binary_expression_dotproduct<float, BC::binary_expression_scalar_L<float, BC::mul, BC::Tensor_Core<BC::Scalar<float, BC::CPU> >, BC::Tensor_Core<BC::Matrix<float> > >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::CPU> >’
../UnitTests/../BC_Internals/BC_Core/Matrix.h:17:7:   required from ‘class BC::Matrix<BC::binary_expression_dotproduct<float, BC::binary_expression_scalar_L<float, BC::mul, BC::Tensor_Core<BC::Scalar<float, BC::CPU> >, BC::Tensor_Core<BC::Matrix<float> > >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::CPU>’
../UnitTests/main.cpp:62:20:   required from here
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h:28:15: error: ‘BC::TensorInitializer<derived, expression_tensor>::black_cat_array’ has incomplete type
  functor_type black_cat_array;
               ^~~~~~~~~~~~~~~
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:12:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:29:41: note: declaration of ‘using functor_type = BC::_functor<BC::Matrix<BC::binary_expression_dotproduct<float, BC::binary_expression_scalar_L<float, BC::mul, BC::Tensor_Core<BC::Scalar<float, BC::CPU> >, BC::Tensor_Core<BC::Matrix<float> > >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::CPU> > {aka class BC::binary_expression_dotproduct<float, BC::binary_expression_scalar_L<float, BC::mul, BC::Tensor_Core<BC::Scalar<float, BC::CPU> >, BC::Tensor_Core<BC::Matrix<float> > >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>}’
 template<class,class,class,class> class binary_expression_dotproduct;
                                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:15:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h: In instantiation of ‘class BC::TensorInitializer<BC::Matrix<BC::binary_expression_scalar_R<float, BC::mul, BC::binary_expression_dotproduct<float, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >, BC::CPU>, void>’:
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:21:7:   required from ‘class BC::TensorBase<BC::Matrix<BC::binary_expression_scalar_R<float, BC::mul, BC::binary_expression_dotproduct<float, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >, BC::CPU> >’
../UnitTests/../BC_Internals/BC_Core/Matrix.h:17:7:   required from ‘class BC::Matrix<BC::binary_expression_scalar_R<float, BC::mul, BC::binary_expression_dotproduct<float, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >, BC::CPU>’
../UnitTests/main.cpp:64:20:   required from here
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h:28:15: error: ‘BC::TensorInitializer<derived, expression_tensor>::black_cat_array’ has incomplete type
  functor_type black_cat_array;
               ^~~~~~~~~~~~~~~
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:12:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:28:41: note: declaration of ‘using functor_type = BC::_functor<BC::Matrix<BC::binary_expression_scalar_R<float, BC::mul, BC::binary_expression_dotproduct<float, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >, BC::CPU> > {aka class BC::binary_expression_scalar_R<float, BC::mul, BC::binary_expression_dotproduct<float, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >}’
 template<class,class,class,class> class binary_expression_scalar_R;
                                         ^~~~~~~~~~~~~~~~~~~~~~~~~~
../UnitTests/main.cpp:76:8: error: ‘using mat = class BC::Matrix<float> {aka class BC::Matrix<float>}’ has no member named ‘t’
  c = a.t() * b.t();
        ^
../UnitTests/main.cpp:76:16: error: ‘using mat = class BC::Matrix<float> {aka class BC::Matrix<float>}’ has no member named ‘t’
  c = a.t() * b.t();
                ^
../UnitTests/main.cpp:80:8: error: ‘using mat = class BC::Matrix<float> {aka class BC::Matrix<float>}’ has no member named ‘t’
  c = a.t() * A * (b.t() * A);
        ^
../UnitTests/main.cpp:80:21: error: ‘using mat = class BC::Matrix<float> {aka class BC::Matrix<float>}’ has no member named ‘t’
  c = a.t() * A * (b.t() * A);
                     ^
../UnitTests/main.cpp:94:14: error: invalid operands of types ‘void’ and ‘void’ to binary ‘operator+’
  d[1] = d[1] + d[1];
         ~~~~~^~~~~~
../UnitTests/main.cpp:99:8: error: invalid types ‘void[int]’ for array subscript
  d[1][1] = d[1][1] + d[1][1];
        ^
../UnitTests/main.cpp:99:18: error: invalid types ‘void[int]’ for array subscript
  d[1][1] = d[1][1] + d[1][1];
                  ^
../UnitTests/main.cpp:99:28: error: invalid types ‘void[int]’ for array subscript
  d[1][1] = d[1][1] + d[1][1];
                            ^
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:13:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Utility.h: In instantiation of ‘void BC::Tensor_Utility<deriv, typename std::enable_if<(isPrim<typename BC::determine_functor< <template-parameter-1-1> >::fscal> || BC::MTF::isCore<typename BC::determine_functor< <template-parameter-1-1> >::type>::conditional), void>::type>::read(std::ifstream&, bool, bool) [with deriv = BC::Matrix<double>; typename std::enable_if<(isPrim<typename BC::determine_functor< <template-parameter-1-1> >::fscal> || BC::MTF::isCore<typename BC::determine_functor< <template-parameter-1-1> >::type>::conditional), void>::type = void; std::ifstream = std::basic_ifstream<char>]’:
../UnitTests/main.cpp:113:15:   required from here
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Utility.h:132:22: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
    for (int i = 0; i < dims.size(); ++i) {
                    ~~^~~~~~~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Utility.h:138:92: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
    MATHLIB::HostToDevice(asDerived().data().core(), &data[data[0] + 1], asDerived().size() > data.size() ? data.size() : asDerived().size());
                                                                                             
In file included from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:13:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Utility.h:140:86: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
    MATHLIB::HostToDevice(asDerived().data().core(), &data[0],     asDerived().size() > data.size() ? data.size() : asDerived().size());
                                                                                       
In file included from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:32:0,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_MathLibraries/Mathematics_CPU.h: In instantiation of ‘static void BC::CPU::copy(T&, const J&, int) [with T = BC::Tensor_Core<BC::Matrix<float> >; J = BC::binary_expression_dotproduct<float, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>]’:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:218:21:   required from ‘derived& BC::Tensor_Operations< <template-parameter-1-1> >::operator=(const BC::Tensor_Operations<param_deriv>&) [with pDeriv = BC::Matrix<BC::binary_expression_dotproduct<float, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::CPU>; derived = BC::Matrix<float>]’
../UnitTests/../BC_Internals/BC_Core/Matrix.h:45:83:   required from ‘BC::Matrix< <template-parameter-1-1>, ML>& BC::Matrix< <template-parameter-1-1>, ML>::operator=(const BC::Matrix<U, Mathlib>&) [with U = BC::binary_expression_dotproduct<float, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>; T = float; Mathlib = BC::CPU]’
../UnitTests/main.cpp:47:10:   required from here
../UnitTests/../BC_Internals/BC_MathLibraries/Mathematics_CPU.h:70:13: error: no match for ‘operator[]’ (operand types are ‘const BC::binary_expression_dotproduct<float, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>’ and ‘int’)
     t[i] = j[i];
            ~^
../UnitTests/../BC_Internals/BC_MathLibraries/Mathematics_CPU.h:76:12: error: no match for ‘operator[]’ (operand types are ‘const BC::binary_expression_dotproduct<float, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>’ and ‘int’)
    t[i] = j[i];
           ~^
../UnitTests/../BC_Internals/BC_MathLibraries/Mathematics_CPU.h: In instantiation of ‘static void BC::CPU::copy(T&, const J&, int) [with T = BC::Tensor_Core<BC::Matrix<float> >; J = BC::binary_expression_dotproduct<float, BC::binary_expression_scalar_R<float, BC::mul, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>]’:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:218:21:   required from ‘derived& BC::Tensor_Operations< <template-parameter-1-1> >::operator=(const BC::Tensor_Operations<param_deriv>&) [with pDeriv = BC::Matrix<BC::binary_expression_dotproduct<float, BC::binary_expression_scalar_R<float, BC::mul, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::CPU>; derived = BC::Matrix<float>]’
../UnitTests/../BC_Internals/BC_Core/Matrix.h:45:83:   required from ‘BC::Matrix< <template-parameter-1-1>, ML>& BC::Matrix< <template-parameter-1-1>, ML>::operator=(const BC::Matrix<U, Mathlib>&) [with U = BC::binary_expression_dotproduct<float, BC::binary_expression_scalar_R<float, BC::mul, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>; T = float; Mathlib = BC::CPU]’
../UnitTests/main.cpp:59:20:   required from here
../UnitTests/../BC_Internals/BC_MathLibraries/Mathematics_CPU.h:70:13: error: no match for ‘operator[]’ (operand types are ‘const BC::binary_expression_dotproduct<float, BC::binary_expression_scalar_R<float, BC::mul, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>’ and ‘int’)
     t[i] = j[i];
            ~^
../UnitTests/../BC_Internals/BC_MathLibraries/Mathematics_CPU.h:76:12: error: no match for ‘operator[]’ (operand types are ‘const BC::binary_expression_dotproduct<float, BC::binary_expression_scalar_R<float, BC::mul, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>’ and ‘int’)
    t[i] = j[i];
           ~^
../UnitTests/../BC_Internals/BC_MathLibraries/Mathematics_CPU.h: In instantiation of ‘static void BC::CPU::copy(T&, const J&, int) [with T = BC::Tensor_Core<BC::Matrix<float> >; J = BC::binary_expression_dotproduct<float, BC::binary_expression_scalar_L<float, BC::mul, BC::Tensor_Core<BC::Scalar<float, BC::CPU> >, BC::Tensor_Core<BC::Matrix<float> > >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>]’:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:218:21:   required from ‘derived& BC::Tensor_Operations< <template-parameter-1-1> >::operator=(const BC::Tensor_Operations<param_deriv>&) [with pDeriv = BC::Matrix<BC::binary_expression_dotproduct<float, BC::binary_expression_scalar_L<float, BC::mul, BC::Tensor_Core<BC::Scalar<float, BC::CPU> >, BC::Tensor_Core<BC::Matrix<float> > >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::CPU>; derived = BC::Matrix<float>]’
../UnitTests/../BC_Internals/BC_Core/Matrix.h:45:83:   required from ‘BC::Matrix< <template-parameter-1-1>, ML>& BC::Matrix< <template-parameter-1-1>, ML>::operator=(const BC::Matrix<U, Mathlib>&) [with U = BC::binary_expression_dotproduct<float, BC::binary_expression_scalar_L<float, BC::mul, BC::Tensor_Core<BC::Scalar<float, BC::CPU> >, BC::Tensor_Core<BC::Matrix<float> > >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>; T = float; Mathlib = BC::CPU]’
../UnitTests/main.cpp:62:20:   required from here
../UnitTests/../BC_Internals/BC_MathLibraries/Mathematics_CPU.h:70:13: error: no match for ‘operator[]’ (operand types are ‘const BC::binary_expression_dotproduct<float, BC::binary_expression_scalar_L<float, BC::mul, BC::Tensor_Core<BC::Scalar<float, BC::CPU> >, BC::Tensor_Core<BC::Matrix<float> > >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>’ and ‘int’)
     t[i] = j[i];
            ~^
../UnitTests/../BC_Internals/BC_MathLibraries/Mathematics_CPU.h:76:12: error: no match for ‘operator[]’ (operand types are ‘const BC::binary_expression_dotproduct<float, BC::binary_expression_scalar_L<float, BC::mul, BC::Tensor_Core<BC::Scalar<float, BC::CPU> >, BC::Tensor_Core<BC::Matrix<float> > >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>’ and ‘int’)
    t[i] = j[i];
           ~^
../UnitTests/../BC_Internals/BC_MathLibraries/Mathematics_CPU.h: In instantiation of ‘static void BC::CPU::copy(T&, const J&, int) [with T = BC::Tensor_Core<BC::Matrix<float> >; J = BC::binary_expression_scalar_R<float, BC::mul, BC::binary_expression_dotproduct<float, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >]’:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Operations.h:218:21:   required from ‘derived& BC::Tensor_Operations< <template-parameter-1-1> >::operator=(const BC::Tensor_Operations<param_deriv>&) [with pDeriv = BC::Matrix<BC::binary_expression_scalar_R<float, BC::mul, BC::binary_expression_dotproduct<float, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >, BC::CPU>; derived = BC::Matrix<float>]’
../UnitTests/../BC_Internals/BC_Core/Matrix.h:45:83:   required from ‘BC::Matrix< <template-parameter-1-1>, ML>& BC::Matrix< <template-parameter-1-1>, ML>::operator=(const BC::Matrix<U, Mathlib>&) [with U = BC::binary_expression_scalar_R<float, BC::mul, BC::binary_expression_dotproduct<float, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >; T = float; Mathlib = BC::CPU]’
../UnitTests/main.cpp:64:20:   required from here
../UnitTests/../BC_Internals/BC_MathLibraries/Mathematics_CPU.h:70:13: error: no match for ‘operator[]’ (operand types are ‘const BC::binary_expression_scalar_R<float, BC::mul, BC::binary_expression_dotproduct<float, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >’ and ‘int’)
     t[i] = j[i];
            ~^
../UnitTests/../BC_Internals/BC_MathLibraries/Mathematics_CPU.h:76:12: error: no match for ‘operator[]’ (operand types are ‘const BC::binary_expression_scalar_R<float, BC::mul, BC::binary_expression_dotproduct<float, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> >, BC::CPU>, BC::Tensor_Core<BC::Scalar<float, BC::CPU> > >’ and ‘int’)
    t[i] = j[i];
           ~^
In file included from ../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Core_Slice.h:17:0,
                 from ../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Core.h:13,
                 from ../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h:12,
                 from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:15,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Core_Scalar.h: In instantiation of ‘BC::Tensor_Scalar<PARENT>::Tensor_Scalar(BC::Tensor_Scalar<PARENT>::scalar*, const PARENT&) [with PARENT = BC::Tensor_Core<BC::Matrix<float> >; BC::Tensor_Scalar<PARENT>::scalar = float]’:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h:33:63:   required from ‘BC::TensorInitializer<derived, expression_tensor>::TensorInitializer(const params& ...) [with params = {float*, BC::Tensor_Core<BC::Matrix<float, BC::CPU> >}; derived = BC::Scalar<BC::Tensor_Scalar<BC::Tensor_Core<BC::Matrix<float> > >, BC::CPU>; expression_tensor = void]’
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:50:51:   required from ‘BC::TensorBase<derived>::TensorBase(const params& ...) [with params = {float*, BC::Tensor_Core<BC::Matrix<float, BC::CPU> >}; derived = BC::Scalar<BC::Tensor_Scalar<BC::Tensor_Core<BC::Matrix<float> > >, BC::CPU>]’
../UnitTests/../BC_Internals/BC_Core/Scalar.h:61:97:   required from ‘BC::Scalar< <template-parameter-1-1>, ML>::Scalar(const var1&, const var2&, const params& ...) [with var1 = float*; var2 = BC::Tensor_Core<BC::Matrix<float> >; params = {}; T = BC::Tensor_Scalar<BC::Tensor_Core<BC::Matrix<float> > >; Mathlib = BC::CPU]’
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:92:19:   required from ‘auto BC::TensorBase<derived>::getScalar(int) [with derived = BC::Matrix<float>]’
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:96:52:   required from ‘auto BC::TensorBase<derived>::operator()(int) [with derived = BC::Matrix<float>]’
../UnitTests/main.cpp:33:6:   required from here
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Core_Scalar.h:36:10: warning: ‘BC::Tensor_Scalar<BC::Tensor_Core<BC::Matrix<float> > >::array_slice’ will be initialized after [-Wreorder]
  scalar* array_slice;
          ^~~~~~~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Core_Scalar.h:35:16: warning:   ‘const BC::Tensor_Core<BC::Matrix<float> >& BC::Tensor_Scalar<BC::Tensor_Core<BC::Matrix<float> > >::parent’ [-Wreorder]
  const PARENT& parent;
                ^~~~~~
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Core_Scalar.h:41:2: warning:   when initialized here [-Wreorder]
  Tensor_Scalar(scalar* array, const PARENT& parent_) : array_slice(array), parent(parent_) {}
  ^~~~~~~~~~~~~
In file included from ../UnitTests/../BC_Internals/BC_MathLibraries/Mathematics_CPU.h:15:0,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:32,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_MathLibraries/BC_PrintFunctions.h: In instantiation of ‘void BC::printHelper(const T&, int_ranks, int, std::__cxx11::string, int) [with T = const float*; int_ranks = int*; std::__cxx11::string = std::__cxx11::basic_string<char>]’:
../UnitTests/../BC_Internals/BC_MathLibraries/BC_PrintFunctions.h:102:13:   required from ‘void BC::print(const T&, RANKS, int, int) [with T = const float*; RANKS = int*]’
../UnitTests/../BC_Internals/BC_MathLibraries/Mathematics_CPU.h:98:12:   required from ‘static void BC::CPU::print(T, RANKS, int, int) [with T = const float*; RANKS = int*]’
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Utility.h:75:17:   required from ‘void BC::Tensor_Utility<deriv, typename std::enable_if<(isPrim<typename BC::determine_functor< <template-parameter-1-1> >::fscal> || BC::MTF::isCore<typename BC::determine_functor< <template-parameter-1-1> >::type>::conditional), void>::type>::print() const [with deriv = BC::Matrix<float>; typename std::enable_if<(isPrim<typename BC::determine_functor< <template-parameter-1-1> >::fscal> || BC::MTF::isCore<typename BC::determine_functor< <template-parameter-1-1> >::type>::conditional), void>::type = void]’
../UnitTests/main.cpp:37:10:   required from here
../UnitTests/../BC_Internals/BC_MathLibraries/BC_PrintFunctions.h:43:38: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
     str = str.substr(0, str.length() < printSpace ? str.length() : printSpace);
                                       
../UnitTests/../BC_Internals/BC_MathLibraries/BC_PrintFunctions.h:46:22: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
     if (str.length() < printSpace)
                       
../UnitTests/../BC_Internals/BC_MathLibraries/BC_PrintFunctions.h:67:37: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
    str = str.substr(0, str.length() < printSpace ? str.length() : printSpace);
                                      
../UnitTests/../BC_Internals/BC_MathLibraries/BC_PrintFunctions.h:70:21: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
    if (str.length() < printSpace)
                      
In file included from ../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h:12:0,
                 from ../UnitTests/../BC_Internals/BC_Core/TensorBase.h:15,
                 from ../UnitTests/../BC_Internals/BC_Core/Scalar.h:10,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:49,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Core.h: In instantiation of ‘BC::Tensor_Core< <template-parameter-1-1> >::Tensor_Core() [with T = BC::Matrix<float>]’:
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Initializer.h:56:2:   required from ‘BC::TensorInitializer<_tensor<t, ml>, typename std::enable_if<BC::MTF::isCorePure<t>::conditional, void>::type>::TensorInitializer(BC::TensorInitializer<_tensor<t, ml>, typename std::enable_if<BC::MTF::isCorePure<t>::conditional, void>::type>::derived&&) [with _tensor = BC::Matrix; t = float; ml = BC::CPU; typename std::enable_if<BC::MTF::isCorePure<t>::conditional, void>::type = void; BC::TensorInitializer<_tensor<t, ml>, typename std::enable_if<BC::MTF::isCorePure<t>::conditional, void>::type>::derived = BC::Matrix<float>]’
../UnitTests/../BC_Internals/BC_Core/TensorBase.h:50:51:   required from ‘BC::TensorBase<derived>::TensorBase(const params& ...) [with params = {BC::Matrix<BC::binary_expression<float, BC::add, BC::Tensor_Core<BC::Matrix<float, BC::CPU> >, BC::Tensor_Core<BC::Matrix<float, BC::CPU> > >, BC::CPU>}; derived = BC::Matrix<float>]’
../UnitTests/../BC_Internals/BC_Core/Matrix.h:37:77:   required from ‘BC::Matrix< <template-parameter-1-1>, ML>::Matrix(const BC::Matrix<U, Mathlib>&) [with U = BC::binary_expression<float, BC::add, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> > >; T = float; Mathlib = BC::CPU]’
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Utility.h:34:50:   required from ‘auto BC::Tensor_Utility<deriv, <template-parameter-1-2> >::eval() const [with deriv = BC::Matrix<BC::binary_expression<float, BC::add, BC::Tensor_Core<BC::Matrix<float> >, BC::Tensor_Core<BC::Matrix<float> > >, BC::CPU>; <template-parameter-1-2> = void]’
../UnitTests/main.cpp:75:15:   required from here
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Core.h:38:3: error: static assertion failed: DEFAULT CONSTRUCTOR FOR TENSOR_CORE ONLY AVAILABLE FOR RANK == 0 (SCALAR)
   static_assert(RANK == 0, "DEFAULT CONSTRUCTOR FOR TENSOR_CORE ONLY AVAILABLE FOR RANK == 0 (SCALAR)");
   ^~~~~~~~~~~~~
In file included from ../UnitTests/../BC_Internals/BC_MathLibraries/Mathematics_CPU.h:15:0,
                 from ../UnitTests/../BC_Internals/BlackCat_Internal_GlobalUnifier.h:32,
                 from ../UnitTests/../BlackCat_Tensors.h:14,
                 from ../UnitTests/main.cpp:2:
../UnitTests/../BC_Internals/BC_MathLibraries/BC_PrintFunctions.h: In instantiation of ‘void BC::printHelper(const T&, int_ranks, int, std::__cxx11::string, int) [with T = const double*; int_ranks = int*; std::__cxx11::string = std::__cxx11::basic_string<char>]’:
../UnitTests/../BC_Internals/BC_MathLibraries/BC_PrintFunctions.h:102:13:   required from ‘void BC::print(const T&, RANKS, int, int) [with T = const double*; RANKS = int*]’
../UnitTests/../BC_Internals/BC_MathLibraries/Mathematics_CPU.h:98:12:   required from ‘static void BC::CPU::print(T, RANKS, int, int) [with T = const double*; RANKS = int*]’
../UnitTests/../BC_Internals/BC_Core/Implementation_Core/Tensor_Utility.h:75:17:   required from ‘void BC::Tensor_Utility<deriv, typename std::enable_if<(isPrim<typename BC::determine_functor< <template-parameter-1-1> >::fscal> || BC::MTF::isCore<typename BC::determine_functor< <template-parameter-1-1> >::type>::conditional), void>::type>::print() const [with deriv = BC::Matrix<double>; typename std::enable_if<(isPrim<typename BC::determine_functor< <template-parameter-1-1> >::fscal> || BC::MTF::isCore<typename BC::determine_functor< <template-parameter-1-1> >::type>::conditional), void>::type = void]’
../UnitTests/main.cpp:114:14:   required from here
../UnitTests/../BC_Internals/BC_MathLibraries/BC_PrintFunctions.h:43:38: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
     str = str.substr(0, str.length() < printSpace ? str.length() : printSpace);
                                       
../UnitTests/../BC_Internals/BC_MathLibraries/BC_PrintFunctions.h:46:22: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
     if (str.length() < printSpace)
                       
../UnitTests/../BC_Internals/BC_MathLibraries/BC_PrintFunctions.h:67:37: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
    str = str.substr(0, str.length() < printSpace ? str.length() : printSpace);
                                      
../UnitTests/../BC_Internals/BC_MathLibraries/BC_PrintFunctions.h:70:21: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
    if (str.length() < printSpace)
                      
UnitTests/subdir.mk:18: recipe for target 'UnitTests/main.o' failed
make: *** [UnitTests/main.o] Error 1
