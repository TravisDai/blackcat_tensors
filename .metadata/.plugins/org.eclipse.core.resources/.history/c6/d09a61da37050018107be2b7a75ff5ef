/*
 * Constructors.h
 *
 *  Created on: Jan 29, 2018
 *      Author: joseph
 */

#ifndef CONSTRUCTORS_H_
#define CONSTRUCTORS_H_

#include <type_traits>

#include "../../BC_MetaTemplateFunctions/Simple.h"
#include "../../BC_MetaTemplateFunctions/Adhoc.h"
#include "../../BC_MetaTemplateFunctions/Complex.h"

namespace BC {
/*
 * This class is a workaround for CUDA's lack of constexpr_if support.
 * Once constexpr_if is added this class will be obsolete
 *
 */


//Constructors for Expressions
template<class T, class derived, class enabler = void>
struct Constructors {

};

//Constructors for tensors
template<class T, class derived>
struct Constructors<T, derived,  typename std::enable_if<MTF::isPrimitive<T>::conditional>::type> {

};


}


#endif /* CONSTRUCTORS_H_ */
