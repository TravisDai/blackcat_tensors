/*
 * DP_test.h
 *
 *  Created on: Mar 14, 2018
 *      Author: joseph
 */

#ifndef DP_TEST_H_
#define DP_TEST_H_

#include "../BlackCat_Tensors.h"

	using BC::Matrix;

template<class T, class C, class A, class B>
struct ternary_expression_axpy {

	C output;
	A left;
	B right;

};


template<class T, class functor>
auto tp_helper(const Matrix<T> m1, const Matrix<T> m2, functor f, int r, int c) {

	if (c + 1 < m2.cols()) {
		auto functor = f && m1.row(r)
	}

	if (r + 1 == m1.rows() && c + 1 == m2.cols()) {
		return;
	}
}

template<class T>
auto dotproduct(const BC::Matrix<T> m1, const BC::Matrix<T> m2) {
	Matrix<T> eval(m1.rows(), m2.cols());


}


#endif /* DP_TEST_H_ */
